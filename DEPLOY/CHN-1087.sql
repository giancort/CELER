--ST-1397

IF NOT EXISTS (SELECT
		1
	FROM sys.columns
	WHERE NAME = N'BRANCH_BUSINESS'
	AND object_id = OBJECT_ID(N'REPORT_TRANSACTIONS_EXP'))
BEGIN
ALTER TABLE REPORT_TRANSACTIONS_EXP
ADD BRANCH_BUSINESS VARCHAR(400)
END


GO

IF OBJECT_ID('VW_REPORT_TRANSACTIONS_EXP') IS NOT NULL
DROP VIEW [VW_REPORT_TRANSACTIONS_EXP]

GO

CREATE VIEW [dbo].[VW_REPORT_TRANSACTIONS_EXP]  
AS  
/*----------------------------------------------------------------------------------------                                        
Procedure Name: [VW_REPORT_TRANSACTIONS_EXP]                                        
Project.......: TKPP                                        
------------------------------------------------------------------------------------------                                        
Author                          VERSION        Date                            Description                                        
------------------------------------------------------------------------------------------                                        
Marcus Gall                        V1       28/11/2019             Add Model_POS, Segment, Location EC                              
Caike Uch�a                        v2       10/01/2020                         add CNAE                    
Kennedy Alef                       v3       08/04/2020                      add link de pagamento              
Caike Uch�a                        v4       30/04/2020                        insert ec prod              
Caike Uch�a                        v5       17/08/2020                        Add SALES_TYPE   
Luiz Aquino                        v6       01/07/2020                        Add PlanDZero  
Caike Uchoa                        v7       31/08/2020                        Add cod_ec_prod  
Kennedy Alef                       v8       02/09/2020                        Add change calculations       
Caike Uchoa                        v9       28/09/2020                        Add branch business
Caike Uchoa                        v10      29/09/2020                        remove NET_VALUE
------------------------------------------------------------------------------------------*/  
WITH CTE  
AS  
(SELECT TOP (1000)  
  [TRANSACTION].[COD_TRAN]  
    ,[TRANSACTION].[CODE] AS [TRANSACTION_CODE]  
    ,[TRANSACTION].[AMOUNT] AS [AMOUNT]  
    ,[TRANSACTION].[PLOTS] AS [PLOTS]  
    ,CAST([dbo].[FN_FUS_UTF]([TRANSACTION].[CREATED_AT]) AS DATETIME) AS [TRANSACTION_DATE]  
    ,[TRANSACTION_TYPE].[CODE] AS [TRANSACTION_TYPE]  
    ,[COMMERCIAL_ESTABLISHMENT].[CPF_CNPJ]  
    ,[COMMERCIAL_ESTABLISHMENT].[NAME]  
    ,[EQUIPMENT].[Serial] AS [SERIAL_EQUIP]  
    ,[EQUIPMENT].[TID] AS [TID]  
    ,[TRADUCTION_SITUATION].[SITUATION_TR] AS [SITUATION]  
    ,[TRANSACTION].[BRAND]  
    ,[TRANSACTION].[PAN]  
    ,[TRANSACTION_DATA_EXT].[NAME] AS [TRAN_DATA_EXT]  
    , --TRANSACTION_DATA_EXT.NAME                                            
  [TRANSACTION_DATA_EXT].[value] AS [TRAN_DATA_EXT_VALUE]  
    , --TRANSACTION_DATA_EXT.VALUE                                           
  (SELECT  
    [TRANSACTION_DATA_EXT].[value]  
   FROM [TRANSACTION_DATA_EXT] WITH (NOLOCK)  
   WHERE [TRANSACTION_DATA_EXT].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
   AND [TRANSACTION_DATA_EXT].[NAME] = 'AUTHCODE')  
  AS [AUTH_CODE]  
    ,[ACQUIRER].[COD_AC]  
    ,[ACQUIRER].[NAME] AS [NAME_ACQUIRER]  
    ,[TRANSACTION].[COMMENT] AS [COMMENT]  
    ,[ASS_TAX_DEPART].[PARCENTAGE] AS [TAX]  
    ,COALESCE([ASS_TAX_DEPART].[ANTICIPATION_PERCENTAGE], 0) AS [ANTICIPATION]  
    ,[AFFILIATOR].[COD_AFFILIATOR]  
    ,[AFFILIATOR].[NAME] AS [NAME_AFFILIATOR]        
  --------------******------------                                            
    ,[TRANSACTION].[COD_TTYPE]  
    ,[COMPANY].[COD_COMP]  
    ,[BRANCH_EC].[COD_EC]  
    ,[BRANCH_EC].[COD_BRANCH]  
    ,[State].[NAME] AS [STATE_NAME]  
    ,[CITY].[NAME] AS [CITY_NAME]  
    ,[SITUATION].[COD_SITUATION]  
    ,[DEPARTMENTS_BRANCH].[COD_DEPTO_BRANCH]  
    ,COALESCE([POSWEB_DATA_TRANSACTION].[AMOUNT], 0) AS [GROSS_VALUE_AGENCY]  
    ,COALESCE([dbo].[FNC_ANT_VALUE_LIQ_TRAN]([POSWEB_DATA_TRANSACTION].[AMOUNT], [POSWEB_DATA_TRANSACTION].[MDR], [POSWEB_DATA_TRANSACTION].[PLOTS], [POSWEB_DATA_TRANSACTION].[ANTICIPATION]) - [POSWEB_DATA_TRANSACTION].[TARIFF], 0) AS [NET_VALUE_AGENCY]  
    ,[SOURCE_TRANSACTION].[DESCRIPTION] AS [TYPE_TRAN]  
    ,[TRANSACTION].[COD_SOURCE_TRAN]  
    ,COALESCE([TRANSACTION].[POSWEB], 0) AS [POSWEB]  
    ,[SEGMENTS].[NAME] AS [SEGMENTS_NAME]  
    ,[TRANSACTION].[CREATED_AT]  
    ,[REPORT_TRANSACTIONS_EXP].[COD_TRAN] AS [REP_COD_TRAN]  
    ,[EC_TRAN].[COD_EC] AS [COD_EC_TRANS]  
    ,[EC_TRAN].[NAME] AS [TRANS_EC_NAME]  
    ,[EC_TRAN].[CPF_CNPJ] AS [TRANS_EC_CPF_CNPJ]  
    ,CASE  
   WHEN (SELECT  
      COUNT(*)  
     FROM [TRANSACTION_SERVICES]  
     WHERE [TRANSACTION_SERVICES].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
     AND [TRANSACTION_SERVICES].[COD_ITEM_SERVICE] = 4)  
    > 0 THEN 1  
   ELSE 0  
  END AS [SPLIT]  
    ,[USERS].[IDENTIFICATION] AS [SALES_REP]  
    ,[USERS].[COD_USER] AS [COD_USER_REP]  
    ,COALESCE([TRANSACTION].[CREDITOR_DOCUMENT], 'NOT CREDITOR_DOCUMENT') AS [CREDITOR_DOCUMENT]  
    ,[SALES_REPRESENTATIVE].[COD_SALES_REP]  
    ,[EQUIPMENT_MODEL].[CODIGO] AS [MODEL_POS]  
    ,[TRANSACTION].[CARD_HOLDER_NAME] AS [CARD_NAME]  
    ,[SEGMENTS].[CNAE]  
    ,[TRANSACTION].[COD_USER]  
    ,[USER_TRAN].[IDENTIFICATION] AS [NAME_USER]  
    ,CASE  
   WHEN (SELECT  
      COUNT(*)  
     FROM [TRANSACTION_SERVICES]  
     WHERE [TRANSACTION_SERVICES].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
     AND [TRANSACTION_SERVICES].[COD_ITEM_SERVICE] = 10)  
    > 0 THEN 1  
   ELSE 0  
  END AS [LINK_PAYMENT]  
    ,[TRANSACTION].[CUSTOMER_EMAIL]  
    ,[TRANSACTION].[CUSTOMER_IDENTIFICATION]  
    ,CASE  
   WHEN (SELECT  
      COUNT(*)  
     FROM [TRANSACTION_SERVICES]  
     WHERE [TRANSACTION_SERVICES].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
     AND [TRANSACTION_SERVICES].[COD_ITEM_SERVICE] = 10)  
    > 0 THEN [TRANSACTION].[TRACKING_TRANSACTION]  
   ELSE NULL  
  END AS [PAYMENT_LINK_TRACKING]  
    ,[TRAN_PROD].[NAME] AS [NAME_PRODUCT_EC]  
    ,[EC_PROD].[NAME] AS [EC_PRODUCT]  
    ,[EC_PROD].CPF_CNPJ AS [EC_PRODUCT_CPF_CNPJ]  
    ,[PROD_ACQ].[NAME] AS [SALES_TYPE]  
    ,(SELECT  
    TRANSACTION_SERVICES.TAX_PLANDZERO_EC  
   FROM TRANSACTION_SERVICES WITH (NOLOCK)  
   INNER JOIN ITEMS_SERVICES_AVAILABLE isa  
    ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = isa.COD_ITEM_SERVICE  
   WHERE TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION].COD_TRAN  
   AND isa.NAME = 'PlanDZero')  
  AS PLAN_DZEROEC  
    ,(SELECT  
    TRANSACTION_SERVICES.TAX_PLANDZERO_AFF  
   FROM TRANSACTION_SERVICES WITH (NOLOCK)  
   INNER JOIN ITEMS_SERVICES_AVAILABLE isa  
    ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = isa.COD_ITEM_SERVICE  
   WHERE TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION].COD_TRAN  
   AND isa.NAME = 'PlanDZero')  
  AS PLAN_DZEROAFF  
 ,[EC_PROD].COD_EC AS [COD_EC_PROD]
 ,BRANCH_BUSINESS.[NAME] AS [BRANCH_BUSINESS_EC]
 FROM [TRANSACTION] WITH (NOLOCK)  
 LEFT JOIN [dbo].[PROCESS_BG_STATUS]  
  ON ([PROCESS_BG_STATUS].[CODE] = [TRANSACTION].[COD_TRAN])  
 LEFT JOIN [ASS_DEPTO_EQUIP]  
  ON [ASS_DEPTO_EQUIP].[COD_ASS_DEPTO_TERMINAL] = [TRANSACTION].[COD_ASS_DEPTO_TERMINAL]  
 LEFT JOIN [EQUIPMENT]  
  ON [EQUIPMENT].[COD_EQUIP] = [ASS_DEPTO_EQUIP].[COD_EQUIP]  
 LEFT JOIN [DEPARTMENTS_BRANCH]  
  ON [DEPARTMENTS_BRANCH].[COD_DEPTO_BRANCH] = [ASS_DEPTO_EQUIP].[COD_DEPTO_BRANCH]  
 LEFT JOIN [DEPARTMENTS]  
  ON [DEPARTMENTS].[COD_DEPARTS] = [DEPARTMENTS_BRANCH].[COD_DEPARTS]  
 LEFT JOIN [BRANCH_EC]  
  ON [BRANCH_EC].[COD_BRANCH] = [DEPARTMENTS_BRANCH].[COD_BRANCH]  
 LEFT JOIN [ADDRESS_BRANCH]  
  ON [ADDRESS_BRANCH].[COD_BRANCH] = [BRANCH_EC].[COD_BRANCH]  
 LEFT JOIN [NEIGHBORHOOD]  
  ON [NEIGHBORHOOD].[COD_NEIGH] = [ADDRESS_BRANCH].[COD_NEIGH]  
 LEFT JOIN [ASS_TAX_DEPART]  
  ON [ASS_TAX_DEPART].[COD_ASS_TX_DEP] = [TRANSACTION].[COD_ASS_TX_DEP]  
 LEFT JOIN [PLAN]  
  ON [PLAN].[COD_PLAN] = [ASS_TAX_DEPART].[COD_PLAN]  
 LEFT JOIN [CITY]  
  ON [CITY].[COD_CITY] = [NEIGHBORHOOD].[COD_CITY]  
 LEFT JOIN [State]  
  ON [State].[COD_STATE] = [CITY].[COD_STATE]  
 LEFT JOIN [COMMERCIAL_ESTABLISHMENT]  
  ON [COMMERCIAL_ESTABLISHMENT].[COD_EC] = [BRANCH_EC].[COD_EC]  
 LEFT JOIN [COMPANY]  
  ON [COMPANY].[COD_COMP] = [COMMERCIAL_ESTABLISHMENT].[COD_COMP]  
 LEFT JOIN [TRANSACTION_TYPE]  
  ON [TRANSACTION_TYPE].[COD_TTYPE] = [TRANSACTION].[COD_TTYPE]  
 LEFT JOIN [SITUATION]  
  ON [SITUATION].[COD_SITUATION] = [TRANSACTION].[COD_SITUATION]  
 LEFT JOIN [TRADUCTION_SITUATION]  
  ON [TRADUCTION_SITUATION].[COD_SITUATION] = [SITUATION].[COD_SITUATION]  
 LEFT JOIN [SEGMENTS]  
  ON [SEGMENTS].[COD_SEG] = [COMMERCIAL_ESTABLISHMENT].[COD_SEG]  
 LEFT JOIN [dbo].[REPORT_TRANSACTIONS_EXP]  
  ON ([REPORT_TRANSACTIONS_EXP].[COD_TRAN] = [TRANSACTION].[COD_TRAN])  
 LEFT JOIN [TRANSACTION_DATA_EXT] WITH (NOLOCK)  
  ON [TRANSACTION_DATA_EXT].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
 LEFT JOIN [AFFILIATOR]  
  ON [AFFILIATOR].[COD_AFFILIATOR] = [COMMERCIAL_ESTABLISHMENT].[COD_AFFILIATOR]  
 LEFT JOIN [POSWEB_DATA_TRANSACTION]  
  ON [POSWEB_DATA_TRANSACTION].[COD_TRAN] = [TRANSACTION].[COD_TRAN]  
 LEFT JOIN [dbo].[SOURCE_TRANSACTION] WITH (NOLOCK)  
  ON ([SOURCE_TRANSACTION].[COD_SOURCE_TRAN] = [TRANSACTION].[COD_SOURCE_TRAN])  
 LEFT JOIN [COMMERCIAL_ESTABLISHMENT] AS [EC_TRAN] WITH (NOLOCK)  
  ON [EC_TRAN].[COD_EC] = [TRANSACTION].[COD_EC]  
 LEFT JOIN [SALES_REPRESENTATIVE]  
  ON [SALES_REPRESENTATIVE].[COD_SALES_REP] = [COMMERCIAL_ESTABLISHMENT].[COD_SALES_REP]  
 LEFT JOIN [USERS]  
  ON [USERS].[COD_USER] = [SALES_REPRESENTATIVE].[COD_USER]  
 LEFT JOIN [USERS] AS [USER_TRAN]  
  ON [USER_TRAN].[COD_USER] = [TRANSACTION].[COD_USER]  
 LEFT JOIN [ASS_TR_TYPE_COMP]  
  ON [ASS_TR_TYPE_COMP].[COD_ASS_TR_COMP] = [TRANSACTION].[COD_ASS_TR_COMP]  
 LEFT JOIN [ACQUIRER]  
  ON [ACQUIRER].[COD_AC] = [ASS_TR_TYPE_COMP].[COD_AC]  
 LEFT JOIN [EQUIPMENT_MODEL] WITH (NOLOCK)  
  ON [EQUIPMENT_MODEL].[COD_MODEL] = [EQUIPMENT].[COD_MODEL]  
 LEFT JOIN TRANSACTION_PRODUCTS AS [TRAN_PROD] WITH (NOLOCK)  
  ON [TRAN_PROD].COD_TRAN_PROD = [TRANSACTION].COD_TRAN_PROD  
 LEFT JOIN COMMERCIAL_ESTABLISHMENT AS [EC_PROD] WITH (NOLOCK)  
  ON [EC_PROD].COD_EC = [TRAN_PROD].COD_EC  
 LEFT JOIN PRODUCTS_ACQUIRER AS [PROD_ACQ] WITH (NOLOCK)  
  ON [PROD_ACQ].COD_PR_ACQ = [TRANSACTION].COD_PR_ACQ  
 LEFT JOIN BRANCH_BUSINESS 
  ON BRANCH_BUSINESS.COD_BRANCH_BUSINESS = COMMERCIAL_ESTABLISHMENT.COD_BRANCH_BUSINESS
 WHERE [ADDRESS_BRANCH].[ACTIVE] = 1  
 AND [PROCESS_BG_STATUS].[STATUS_PROCESSED] = 0  
 AND [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1  
 AND COALESCE([TRANSACTION_DATA_EXT].[NAME], '0') IN ('NSU', 'RCPTTXID', 'AUTO', '0')  
 AND DATEADD(MINUTE, -5, GETDATE()) > [TRANSACTION].[CREATED_AT])  
  
SELECT  
 CTE.COD_TRAN  
   ,CTE.TRANSACTION_CODE  
   ,CTE.AMOUNT  
   ,CTE.PLOTS  
   ,CTE.TRANSACTION_DATE  
   ,CTE.TRANSACTION_TYPE  
   ,CTE.CPF_CNPJ  
   ,CTE.[NAME]  
   ,CTE.SERIAL_EQUIP  
   ,CTE.TID  
   ,CTE.SITUATION  
   ,CTE.BRAND  
   ,CTE.PAN  
   ,CTE.TRAN_DATA_EXT  
   ,CTE.TRAN_DATA_EXT_VALUE  
   ,CTE.AUTH_CODE  
   ,CTE.COD_AC  
   ,CTE.NAME_ACQUIRER  
   ,CTE.COMMENT  
   ,CTE.TAX  
   ,CTE.ANTICIPATION  
   ,CTE.COD_AFFILIATOR  
   ,CTE.NAME_AFFILIATOR  
   ,CTE.COD_TTYPE  
   ,CTE.COD_COMP  
   ,CTE.COD_EC  
   ,CTE.COD_BRANCH  
   ,CTE.STATE_NAME  
   ,CTE.CITY_NAME  
   ,CTE.COD_SITUATION  
   ,CTE.COD_DEPTO_BRANCH  
   ,CTE.GROSS_VALUE_AGENCY  
   ,CTE.NET_VALUE_AGENCY  
   ,CTE.TYPE_TRAN  
   ,CTE.COD_SOURCE_TRAN  
   ,CTE.POSWEB  
   ,CTE.SEGMENTS_NAME  
   ,CTE.CREATED_AT  
   ,CTE.REP_COD_TRAN  
   ,CTE.COD_EC_TRANS  
   ,CTE.TRANS_EC_NAME  
   ,CTE.TRANS_EC_CPF_CNPJ  
   ,CTE.SPLIT  
   ,CTE.SALES_REP  
   ,CTE.COD_USER_REP  
   ,CTE.CREDITOR_DOCUMENT  
   ,CTE.COD_SALES_REP  
   ,CTE.MODEL_POS  
   ,CTE.CARD_NAME  
   ,CTE.CNAE  
   ,CTE.COD_USER  
   ,CTE.NAME_USER  
   ,CTE.LINK_PAYMENT  
   ,CTE.CUSTOMER_EMAIL  
   ,CTE.CUSTOMER_IDENTIFICATION  
   ,CTE.PAYMENT_LINK_TRACKING  
   ,CTE.NAME_PRODUCT_EC  
   ,CTE.EC_PRODUCT  
   ,CTE.EC_PRODUCT_CPF_CNPJ  
   ,CTE.SALES_TYPE  
   ,CTE.PLAN_DZEROEC  
   ,CTE.PLAN_DZEROAFF  
   ,CTE.COD_EC_PROD  
   ,CTE.BRANCH_BUSINESS_EC
  
FROM CTE  
  

  GO

IF OBJECT_ID('SP_REG_REPORT_TRANSACTIONS_EXP') IS NOT NULL
	DROP PROCEDURE [SP_REG_REPORT_TRANSACTIONS_EXP]
GO
 
CREATE PROCEDURE [dbo].[SP_REG_REPORT_TRANSACTIONS_EXP]  
  
/*****************************************************************************************************************              
----------------------------------------------------------------------------------------                                    
 Procedure Name: [SP_REG_REPORT_TRANSACTIONS_EXP]                                    
 Project.......: TKPP                                    
 ------------------------------------------------------------------------------------------                                    
 Author                          VERSION        Date                            Description                                    
 ------------------------------------------------------------------------------------------                                    
 Fernando Henrique F.             V1       13/12/2018                          Creation                                     
 Lucas Aguiar                     V2       23-04-2019                      ROTINA DE SPLIT                              
 Caike Uch�a                      V3       15/08/2019                       inserting coluns                            
 Marcus Gall                      V4       28/11/2019              Add Model_POS, Segment, Location EC                          
 Caike Uch�a                      V5       20/01/2020                            ADD CNAE              
 Kennedy Alef                     v6       08/04/2020                      add link de pagamento            
 Caike Uch�a                      v7       30/04/2020                        insert ec prod            
 Caike Uch�a                      V8       06/08/2020                    Add [AMOUNT] to reprocess          
 Caike Uch�a                      V9       17/08/2020                        Add SALES_TYPE      
 Luiz Aquino                      v10      01/07/2020                         add PlanDzero  
 Caike Uchoa                      V11      31/08/2020                        Add Cod_ec_prod  
 Caike Uchoa                      v12      28/09/2020                        Add branch business
 Caike Uchoa                      v10      29/09/2020                        Add NET_VALUE 
 ------------------------------------------------------------------------------------------              
*****************************************************************************************************************/  
  
AS  
BEGIN  
  
 DECLARE @COUNT INT = 0;  
  

  
 BEGIN  
  
  ---------------------------------------------                                  
  --------------RECORDS INSERT-----------------                                  
  ---------------------------------------------                                    
    SELECT  
      [VW_REPORT_TRANSACTIONS_EXP].[COD_TRAN]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_CODE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[AMOUNT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[PLOTS]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_DATE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_TYPE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CPF_CNPJ]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SERIAL_EQUIP]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TID]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SITUATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[BRAND]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[PAN]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRAN_DATA_EXT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRAN_DATA_EXT_VALUE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[AUTH_CODE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_AC]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_ACQUIRER]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COMMENT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TAX]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[ANTICIPATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_AFFILIATOR]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_AFFILIATOR]
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_COMP]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_BRANCH]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[STATE_NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CITY_NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SITUATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_DEPTO_BRANCH]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[GROSS_VALUE_AGENCY]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NET_VALUE_AGENCY]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TYPE_TRAN]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SOURCE_TRAN]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[POSWEB]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SEGMENTS_NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC_TRANS]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRANS_EC_NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[TRANS_EC_CPF_CNPJ]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SPLIT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CREATED_AT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SALES_REP]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER_REP]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CREDITOR_DOCUMENT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SALES_REP]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[MODEL_POS]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CARD_NAME]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CNAE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_USER]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[LINK_PAYMENT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CUSTOMER_EMAIL]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[CUSTOMER_IDENTIFICATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[PAYMENT_LINK_TRACKING]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_PRODUCT_EC]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[EC_PRODUCT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[EC_PRODUCT_CPF_CNPJ]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SALES_TYPE]  
     ,[VW_REPORT_TRANSACTIONS_EXP].PLAN_DZEROEC  
     ,[VW_REPORT_TRANSACTIONS_EXP].PLAN_DZEROAFF  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC_PROD]
	 ,[VW_REPORT_TRANSACTIONS_EXP].[BRANCH_BUSINESS_EC] 
	 ,CAST(0 AS DECIMAL(22,6)) AS NET_VALUE INTO #TB_REPORT_TRANSACTIONS_EXP_INSERT  
  FROM [dbo].[VW_REPORT_TRANSACTIONS_EXP]  
  WHERE [VW_REPORT_TRANSACTIONS_EXP].[REP_COD_TRAN] IS NULL;  



  UPDATE #TB_REPORT_TRANSACTIONS_EXP_INSERT SET NET_VALUE= 
  (SELECT
      CASE    
   WHEN (SELECT    
    
      TRANSACTION_SERVICES.TAX_PLANDZERO_EC    
     FROM TRANSACTION_SERVICES    
     INNER JOIN ITEMS_SERVICES_AVAILABLE    
      ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE    
     WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'    
     AND TRANSACTION_SERVICES.COD_TRAN = TRANSACTION_TITLES.COD_TRAN    
     AND TRANSACTION_SERVICES.COD_EC = TRANSACTION_TITLES.COD_EC)    
    > 0 THEN SUM(dbo.FNC_CALC_DZERO_NET_VALUE_CONSOLIDATED(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.PLOT, TRANSACTION_TITLES.TAX_INITIAL, TRANSACTION_TITLES.ANTICIP_PERCENT, (SELECT    
    
      TRANSACTION_SERVICES.TAX_PLANDZERO_EC    
     FROM TRANSACTION_SERVICES    
     INNER JOIN ITEMS_SERVICES_AVAILABLE    
      ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE    
     WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'    
     AND TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN    
     AND TRANSACTION_SERVICES.COD_EC = TRANSACTION_TITLES.COD_EC)    
    , [TRANSACTION].COD_TTYPE))    
   ELSE   
  CASE 
  WHEN [TRANSACTION_TITLES].COD_TRAN IS NOT NULL THEN
  SUM(dbo.[FNC_ANT_VALUE_LIQ_DAYS](  
  TRANSACTION_TITLES.AMOUNT,  
  TRANSACTION_TITLES.TAX_INITIAL,  
  TRANSACTION_TITLES.PLOT,  
  TRANSACTION_TITLES.ANTICIP_PERCENT,  
  (CASE  
  WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
  ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP  
  END)))
  ELSE 0 END
 END

  FROM [TRANSACTION] WITH (NOLOCK)   
LEFT JOIN [TRANSACTION_TITLES] WITH (NOLOCK)
 ON [TRANSACTION_TITLES].COD_TRAN = [TRANSACTION].COD_TRAN
WHERE [TRANSACTION].COD_TRAN = #TB_REPORT_TRANSACTIONS_EXP_INSERT.COD_TRAN
GROUP BY
    TRANSACTION_TITLES.COD_TRAN
    ,[TRANSACTION].COD_TRAN)
	FROM #TB_REPORT_TRANSACTIONS_EXP_INSERT

  
  SELECT  
   @COUNT = COUNT(*)  
  FROM [#TB_REPORT_TRANSACTIONS_EXP_INSERT];  
  
  IF @COUNT > 0  
  BEGIN  
   INSERT INTO [dbo].[REPORT_TRANSACTIONS_EXP] ([COD_TRAN],  
   [TRANSACTION_CODE],  
   [AMOUNT],  
   [PLOTS],  
   [TRANSACTION_DATE],  
   [TRANSACTION_TYPE],  
   [CPF_CNPJ],  
   [NAME],  
   [SERIAL_EQUIP],  
   [TID],  
   [SITUATION],  
   [BRAND],  
   [PAN],  
   [TRAN_DATA_EXT],  
   [TRAN_DATA_EXT_VALUE],  
   [AUTH_CODE],  
   [COD_AC],  
   [NAME_ACQUIRER],  
   [COMMENT],  
   [TAX],  
   [ANTICIPATION],  
   [COD_AFFILIATOR],  
   [NAME_AFFILIATOR],  
   [NET_VALUE],  
   [COD_COMP],  
   [COD_EC],  
   [COD_BRANCH],  
   [STATE_NAME],  
   [CITY_NAME],  
   [COD_SITUATION],  
   [COD_DEPTO_BRANCH],  
   [GROSS_VALUE_AGENCY],  
   [NET_VALUE_AGENCY],  
   [TYPE_TRAN],  
   [COD_SOURCE_TRAN],  
   [POSWEB],  
   [SEGMENTS_NAME],  
   [CREATED_TRANSACTION_DATE],  
   [COD_EC_TRANS],  
   [TRANS_EC_NAME],  
   [TRANS_EC_CPF_CNPJ],  
   [SPLIT],  
   [SALES_REP],  
   [COD_USER_REP],  
   [MODIFY_DATE],  
   [CREDITOR_DOCUMENT],  
   [COD_SALES_REP],  
   [MODEL_POS],  
   [CARD_NAME],  
   [CNAE],  
   [COD_USER],  
   [NAME_USER],  
   [LINK_PAYMENT_SERVICE],  
   [CUSTOMER_EMAIL],  
   [CUSTOMER_IDENTIFICATION],  
   [PAYMENT_LINK_TRACKING],  
   [NAME_PRODUCT_EC],  
   [EC_PRODUCT],  
   [EC_PRODUCT_CPF_CNPJ],  
   [SALES_TYPE],  
   DZERO_EC_TAX,  
   DZERO_AFF_TAX,  
   [COD_EC_PROD],
   [BRANCH_BUSINESS])  
    (SELECT  
     [TEMP].[COD_TRAN]  
       ,[TEMP].[TRANSACTION_CODE]  
       ,[TEMP].[AMOUNT]  
       ,[TEMP].[PLOTS]  
       ,[TEMP].[TRANSACTION_DATE]  
       ,[TEMP].[TRANSACTION_TYPE]  
       ,[TEMP].[CPF_CNPJ]  
       ,[TEMP].[NAME]  
       ,[TEMP].[SERIAL_EQUIP]  
       ,[TEMP].[TID]  
       ,[TEMP].[SITUATION]  
       ,[TEMP].[BRAND]  
       ,[TEMP].[PAN]  
       ,[TEMP].[TRAN_DATA_EXT]  
       ,[TEMP].[TRAN_DATA_EXT_VALUE]  
       ,[TEMP].[AUTH_CODE]  
       ,[TEMP].[COD_AC]  
       ,[TEMP].[NAME_ACQUIRER]  
       ,[TEMP].[COMMENT]  
       ,[TEMP].[TAX]  
       ,[TEMP].[ANTICIPATION]  
       ,[TEMP].[COD_AFFILIATOR]  
       ,[TEMP].[NAME_AFFILIATOR]  
       ,[TEMP].[NET_VALUE]  
       ,[TEMP].[COD_COMP]  
       ,[TEMP].[COD_EC]  
       ,[TEMP].[COD_BRANCH]  
       ,[TEMP].[STATE_NAME]  
       ,[TEMP].[CITY_NAME]  
       ,[TEMP].[COD_SITUATION]  
       ,[TEMP].[COD_DEPTO_BRANCH]  
       ,[TEMP].[GROSS_VALUE_AGENCY]  
       ,[TEMP].[NET_VALUE_AGENCY]  
       ,[TEMP].[TYPE_TRAN]  
       ,[TEMP].[COD_SOURCE_TRAN]  
       ,[TEMP].[POSWEB]  
       ,[TEMP].[SEGMENTS_NAME]  
       ,[TEMP].[CREATED_AT]  
       ,[TEMP].[COD_EC_TRANS]  
       ,[TEMP].[TRANS_EC_NAME]  
       ,[TEMP].[TRANS_EC_CPF_CNPJ]  
       ,[TEMP].[SPLIT]  
       ,[SALES_REP]  
       ,[COD_USER_REP]  
       ,GETDATE()  
       ,[CREDITOR_DOCUMENT]  
       ,[COD_SALES_REP]  
       ,[TEMP].[MODEL_POS]  
       ,[CARD_NAME]  
       ,[CNAE]  
       ,[COD_USER]  
       ,[NAME_USER]  
       ,[LINK_PAYMENT]  
       ,[CUSTOMER_EMAIL]  
       ,[CUSTOMER_IDENTIFICATION]  
       ,[TEMP].[PAYMENT_LINK_TRACKING]  
       ,[TEMP].[NAME_PRODUCT_EC]  
       ,[TEMP].[EC_PRODUCT]  
       ,[TEMP].[EC_PRODUCT_CPF_CNPJ]  
       ,[TEMP].[SALES_TYPE]  
       ,[TEMP].PLAN_DZEROEC  
       ,[TEMP].PLAN_DZEROAFF  
       ,[TEMP].[COD_EC_PROD]
	   ,[TEMP].[BRANCH_BUSINESS_EC]
    FROM [#TB_REPORT_TRANSACTIONS_EXP_INSERT] AS [TEMP]);  
  
   IF @@rowcount < 1  
    THROW 60000, 'COULD NOT REGISTER [REPORT_TRANSACTIONS_EXP] ', 1;  
  
   UPDATE [PROCESS_BG_STATUS]  
   SET [STATUS_PROCESSED] = 1  
      ,[MODIFY_DATE] = GETDATE()  
   FROM [PROCESS_BG_STATUS]  
   INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_INSERT]  
    ON ([PROCESS_BG_STATUS].[CODE] = [#TB_REPORT_TRANSACTIONS_EXP_INSERT].[COD_TRAN])  
   WHERE [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1;  
  
   IF @@rowcount < 1  
    THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](INSERT)', 1;  
  END;  
  
  
  ---------------------------------------------                                  
  --------------RECORDS UPDATE-----------------                                  
  ---------------------------------------------                                    
  SELECT  
   [VW_REPORT_TRANSACTIONS_EXP].[COD_TRAN]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[SITUATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COMMENT]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SITUATION]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_USER]  
     ,[VW_REPORT_TRANSACTIONS_EXP].[AMOUNT]
	 , CAST(0 AS DECIMAL(22,6)) AS [NET_VALUE] INTO [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]  
  FROM [dbo].[VW_REPORT_TRANSACTIONS_EXP]  
  WHERE [VW_REPORT_TRANSACTIONS_EXP].[REP_COD_TRAN] IS NOT NULL;  


  UPDATE #TB_REPORT_TRANSACTIONS_EXP_UPDATE SET NET_VALUE= 
  ( 
  SELECT
      CASE    
   WHEN (SELECT    
    
      TRANSACTION_SERVICES.TAX_PLANDZERO_EC    
     FROM TRANSACTION_SERVICES    
     INNER JOIN ITEMS_SERVICES_AVAILABLE    
      ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE    
     WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'    
     AND TRANSACTION_SERVICES.COD_TRAN = TRANSACTION_TITLES.COD_TRAN    
     AND TRANSACTION_SERVICES.COD_EC = TRANSACTION_TITLES.COD_EC)    
    > 0 THEN SUM(dbo.FNC_CALC_DZERO_NET_VALUE_CONSOLIDATED(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.PLOT, TRANSACTION_TITLES.TAX_INITIAL, TRANSACTION_TITLES.ANTICIP_PERCENT, (SELECT    
    
      TRANSACTION_SERVICES.TAX_PLANDZERO_EC    
     FROM TRANSACTION_SERVICES    
     INNER JOIN ITEMS_SERVICES_AVAILABLE    
      ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE    
     WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'    
     AND TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN    
     AND TRANSACTION_SERVICES.COD_EC = TRANSACTION_TITLES.COD_EC)    
    , [TRANSACTION].COD_TTYPE))    
   ELSE   
  CASE 
  WHEN [TRANSACTION_TITLES].COD_TRAN IS NOT NULL THEN
  SUM(dbo.[FNC_ANT_VALUE_LIQ_DAYS](  
  TRANSACTION_TITLES.AMOUNT,  
  TRANSACTION_TITLES.TAX_INITIAL,  
  TRANSACTION_TITLES.PLOT,  
  TRANSACTION_TITLES.ANTICIP_PERCENT,  
  (CASE  
  WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
  ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP  
  END)))
  ELSE 0 END
 END

  FROM [TRANSACTION] WITH (NOLOCK)   
LEFT JOIN [TRANSACTION_TITLES] WITH (NOLOCK)
 ON [TRANSACTION_TITLES].COD_TRAN = [TRANSACTION].COD_TRAN
WHERE [TRANSACTION].COD_TRAN = #TB_REPORT_TRANSACTIONS_EXP_UPDATE.COD_TRAN
GROUP BY
    TRANSACTION_TITLES.COD_TRAN
    ,[TRANSACTION].COD_TRAN
  )
	FROM #TB_REPORT_TRANSACTIONS_EXP_UPDATE

  
  SELECT  
   @COUNT = COUNT(*)  
  FROM [#TB_REPORT_TRANSACTIONS_EXP_UPDATE];  
  
  IF @COUNT > 0  
  BEGIN  
   UPDATE [REPORT_TRANSACTIONS_EXP]  
   SET [REPORT_TRANSACTIONS_EXP].[SITUATION] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[SITUATION]  
      ,[REPORT_TRANSACTIONS_EXP].[COD_SITUATION] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_SITUATION]  
      ,[REPORT_TRANSACTIONS_EXP].[COMMENT] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COMMENT]  
      ,[REPORT_TRANSACTIONS_EXP].[MODIFY_DATE] = GETDATE()  
      ,[REPORT_TRANSACTIONS_EXP].[COD_USER] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_USER]  
      ,[REPORT_TRANSACTIONS_EXP].[NAME_USER] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[NAME_USER]  
      ,[REPORT_TRANSACTIONS_EXP].[AMOUNT] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[AMOUNT]  
	  ,[REPORT_TRANSACTIONS_EXP].NET_VALUE = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[NET_VALUE]
   FROM [REPORT_TRANSACTIONS_EXP]  
   INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]  
    ON ([REPORT_TRANSACTIONS_EXP].[COD_TRAN] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_TRAN]);  
  
   IF @@rowcount < 1  
    THROW 60001, 'COULD NOT UPDATE [REPORT_TRANSACTIONS_EX]', 1;  
  
   UPDATE [PROCESS_BG_STATUS]  
   SET [STATUS_PROCESSED] = 1  
      ,[MODIFY_DATE] = GETDATE()  
   FROM [PROCESS_BG_STATUS]  
   INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]  
    ON ([PROCESS_BG_STATUS].[CODE] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_TRAN])  
   WHERE [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1;  
  
   IF @@rowcount < 1  
    THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](UPDATE)', 1;  
  END;  
 END;  
END;  
  


  GO 

IF OBJECT_ID('SP_REPORT_TRANSACTIONS_EXP') IS NOT NULL
DROP PROCEDURE [SP_REPORT_TRANSACTIONS_EXP]

GO

CREATE PROCEDURE [dbo].[SP_REPORT_TRANSACTIONS_EXP]  
/***************************************************************************************              
----------------------------------------------------------------------------------------              
Procedure Name: [SP_REPORT_TRANSACTIONS_EXP]              
Project.......: TKPP              
------------------------------------------------------------------------------------------              
Author               VERSION         Date                     Description              
------------------------------------------------------------------------------------------              
Fernando Henrique F.   V1         13/12/2018               Creation              
Kennedy Alef           V2         16/01/2018               Modify              
Lucas Aguiar           V2         23/04/2019               ROTINA DE SPLIT              
Caike Uch�a            V3         15/08/2019               inserting coluns              
Marcus Gall            V4         28/11/2019               Add Model_POS, Segment, Location EC              
Caike Uch�a            V5         20/01/2020               ADD CNAE              
Kennedy Alef           v3         08/04/2020               add link de pagamento              
Caike Uch�a            v4         30/04/2020               insert ec prod              
Caike Uch�a            v5         17/08/2020               Add SALES_TYPE            
Luiz Aquino            v6         01/07/2020                 add PlanDzero  
Caike Uchoa            v7         31/08/2020               Add cod_ec_prod  
 Caike Uchoa           v12        28/09/2020               Add branch business
---------------------------------------------           ---------------------------------------------              
********************************************************************************************/ (
@CODCOMP VARCHAR(10),  
@INITIAL_DATE DATETIME,  
@FINAL_DATE DATETIME,  
@EC VARCHAR(10),  
@BRANCH VARCHAR(10),  
@DEPART VARCHAR(10),  
@TERMINAL VARCHAR(100),  
@STATE VARCHAR(100),  
@CITY VARCHAR(100),  
@TYPE_TRAN VARCHAR(10),  
@SITUATION VARCHAR(10),  
@NSU VARCHAR(100) = NULL,  
@NSU_EXT VARCHAR(100) = NULL,  
@BRAND VARCHAR(50) = NULL,  
@PAN VARCHAR(50) = NULL,  
@COD_AFFILIATOR INT = NULL,  
@TRACKING_TRANSACTION VARCHAR(100) = NULL,  
@DESCRIPTION VARCHAR(100) = NULL,  
@SPOT_ELEGIBLE INT = 0,  
@COD_ACQ INT = NULL,  
@SOURCE_TRAN INT = NULL,  
@POSWEB INT = 0,  
@SPLIT INT = NULL,  
@INITIAL_VALUE DECIMAL(22, 6) = NULL,  
@FINAL_VALUE DECIMAL(22, 6) = NULL,  
@COD_SALES_REP INT = NULL,  
@COD_EC_PROD INT = NULL)  
AS  
BEGIN  
 DECLARE @QUERY_BASIS NVARCHAR(MAX) = '';  
 DECLARE @TIME_FINAL_DATE TIME;  
 SET NOCOUNT ON;  
 SET ARITHABORT ON;  
 BEGIN  
  SET @TIME_FINAL_DATE = FORMAT(CAST(@FINAL_DATE AS TIME), N'hh\:mm\:ss');  
  --SET @INITIAL_DATE = CAST(@INITIAL_DATE AS DATETIME2(0));              
  --SET @FINAL_DATE = CAST(@INITIAL_DATE AS DATETIME2(0)); )              
  SET @FINAL_DATE = DATEADD([MILLISECOND], 999, @FINAL_DATE);  
  IF (@TIME_FINAL_DATE = '00:00:00')  
   SET @FINAL_DATE = CONCAT(CAST(@FINAL_DATE AS DATE), ' ', FORMAT(CAST('23:59:59' AS TIME), N'hh\:mm\:ss'));  
  SET @QUERY_BASIS = '              
   SELECT [REPORT_TRANSACTIONS_EXP].TRANSACTION_CODE              
      ,[REPORT_TRANSACTIONS_EXP].AMOUNT              
      ,[REPORT_TRANSACTIONS_EXP].PLOTS              
      ,[REPORT_TRANSACTIONS_EXP].TRANSACTION_DATE              
      ,[REPORT_TRANSACTIONS_EXP].TRANSACTION_TYPE              
      ,[REPORT_TRANSACTIONS_EXP].CPF_CNPJ              
      ,[REPORT_TRANSACTIONS_EXP].NAME              
      ,[REPORT_TRANSACTIONS_EXP].SERIAL_EQUIP              
      ,[REPORT_TRANSACTIONS_EXP].TID              
      ,[REPORT_TRANSACTIONS_EXP].SITUATION              
      ,[REPORT_TRANSACTIONS_EXP].BRAND              
      ,[REPORT_TRANSACTIONS_EXP].PAN              
      ,COALESCE([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT_VALUE, '''') AS TRAN_DATA_EXT_VALUE              
      ,COALESCE([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT, '''') AS TRAN_DATA_EXT              
   ,(    
      SELECT TRANSACTION_DATA_EXT.[VALUE] FROM TRANSACTION_DATA_EXT              
   WHERE TRANSACTION_DATA_EXT.[NAME]= ''AUTHCODE'' AND TRANSACTION_DATA_EXT.COD_TRAN = REPORT_TRANSACTIONS_EXP.COD_TRAN              
      ) AS [AUTH_CODE]              
      ,[REPORT_TRANSACTIONS_EXP].COD_AC              
      ,[REPORT_TRANSACTIONS_EXP].NAME_ACQUIRER              
      ,[REPORT_TRANSACTIONS_EXP].COMMENT              
  ,[REPORT_TRANSACTIONS_EXP].TAX              
      ,[REPORT_TRANSACTIONS_EXP].ANTICIPATION              
      ,[REPORT_TRANSACTIONS_EXP].COD_AFFILIATOR              
      ,[REPORT_TRANSACTIONS_EXP].NAME_AFFILIATOR              
      ,[REPORT_TRANSACTIONS_EXP].NET_VALUE              
      ,[REPORT_TRANSACTIONS_EXP].GROSS_VALUE_AGENCY              
      ,[REPORT_TRANSACTIONS_EXP].NET_VALUE_AGENCY              
      ,[REPORT_TRANSACTIONS_EXP].TYPE_TRAN              
      ,[REPORT_TRANSACTIONS_EXP].POSWEB              
      ,[REPORT_TRANSACTIONS_EXP].CITY_NAME              
      ,[REPORT_TRANSACTIONS_EXP].STATE_NAME              
      ,[REPORT_TRANSACTIONS_EXP].SEGMENTS_NAME              
      ,[REPORT_TRANSACTIONS_EXP].COD_EC_TRANS              
      ,[REPORT_TRANSACTIONS_EXP].TRANS_EC_NAME              
      ,[REPORT_TRANSACTIONS_EXP].TRANS_EC_CPF_CNPJ              
      ,[REPORT_TRANSACTIONS_EXP].SPLIT              
      ,[REPORT_TRANSACTIONS_EXP].[SALES_REP]              
      ,[REPORT_TRANSACTIONS_EXP].CREDITOR_DOCUMENT              
      ,REPORT_TRANSACTIONS_EXP.COD_SALES_REP              
      ,[REPORT_TRANSACTIONS_EXP].MODEL_POS              
      ,[REPORT_TRANSACTIONS_EXP].CARD_NAME              
      ,[REPORT_TRANSACTIONS_EXP].CNAE              
      ,[REPORT_TRANSACTIONS_EXP].LINK_PAYMENT_SERVICE              
      ,[REPORT_TRANSACTIONS_EXP].CUSTOMER_EMAIL              
      ,[REPORT_TRANSACTIONS_EXP].CUSTOMER_IDENTIFICATION              
      ,[REPORT_TRANSACTIONS_EXP].PAYMENT_LINK_TRACKING              
      ,[REPORT_TRANSACTIONS_EXP].[NAME_PRODUCT_EC]              
      ,[REPORT_TRANSACTIONS_EXP].[EC_PRODUCT]              
      ,[REPORT_TRANSACTIONS_EXP].[EC_PRODUCT_CPF_CNPJ]              
   ,[REPORT_TRANSACTIONS_EXP].[SALES_TYPE]            
   ,ISNULL([REPORT_TRANSACTIONS_EXP].DZERO_EC_TAX, 0) AS DZERO_EC_TAX    
   ,ISNULL([REPORT_TRANSACTIONS_EXP].DZERO_AFF_TAX, 0)       AS DZERO_AFF_TAX  
   ,[REPORT_TRANSACTIONS_EXP].[COD_EC_PROD]  
   ,[REPORT_TRANSACTIONS_EXP].[BRANCH_BUSINESS]
   FROM [dbo].[REPORT_TRANSACTIONS_EXP]              
   WHERE [REPORT_TRANSACTIONS_EXP].COD_COMP = @CODCOMP              
    ';  
  IF @INITIAL_DATE IS NOT NULL  
   AND @FINAL_DATE IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND CAST([REPORT_TRANSACTIONS_EXP].TRANSACTION_DATE AS DATETIME) BETWEEN CAST(@INITIAL_DATE AS DATETIME) AND CAST(@FINAL_DATE AS DATETIME)');  
  IF @EC IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_EC = @EC ');  
  IF @BRANCH IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND[REPORT_TRANSACTIONS_EXP].COD_BRANCH = @BRANCH ');  
  IF @DEPART IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_DEPTO_BRANCH = @DEPART ');  
  IF LEN(@TERMINAL) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].SERIAL_EQUIP = @TERMINAL');  
  IF LEN(@STATE) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].STATE_NAME = @STATE ');  
  IF LEN(@CITY) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].CITY_NAME = @CITY ');  
  IF LEN(@TYPE_TRAN) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND EXISTS( SELECT tt.CODE FROM TRANSACTION_TYPE tt WHERE tt.COD_TTYPE = @TYPE_TRAN AND [REPORT_TRANSACTIONS_EXP].TRANSACTION_TYPE = tt.CODE )');  
  IF LEN(@SITUATION) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND EXISTS( SELECT tt.SITUATION_TR FROM [TRADUCTION_SITUATION] tt WHERE tt.COD_SITUATION = @SITUATION AND [REPORT_TRANSACTIONS_EXP].SITUATION = tt.SITUATION_TR )');  
  IF LEN(@BRAND) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].BRAND = @BRAND ');  
  IF LEN(@PAN) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].PAN = @PAN ');  
  IF LEN(@NSU) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TRANSACTION_CODE = @NSU ');  
  IF LEN(@NSU_EXT) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT_VALUE = @NSU_EXT ');  
  --ELSE              
  -- SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,' AND ([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''RCPTTXID'' OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT IS NULL              
  -- OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''AUTO'' OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''NSU'' ) ');              
  IF @COD_AFFILIATOR IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_AFFILIATOR = @COD_AFFILIATOR ');  
  IF LEN(@TRACKING_TRANSACTION) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TRACKING_TRANSACTION = @TRACKING_TRANSACTION ');  
  IF LEN(@DESCRIPTION) > 0  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].DESCRIPTION LIKE %@DESCRIPTION%');  
  IF @SPOT_ELEGIBLE = 1  
  BEGIN  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].PLOTS > 1 AND (SELECT COUNT(*) FROM TRANSACTION_TITLES title JOIN [TRANSACTION] title_tran ON title_tran.COD_TRAN = title.COD_TRAN WHERE [VW_REPORT_TRANSACTIONS].TRANSACTION_CODE 
   
    
      
        
          
            
        = title_tran.CODE AND title.PREVISION_PAY_DATE > @FINAL_DATE ) > 0 AND TRANSACTION_TITLES.COD_SITUATION = 4 ');  
  END;  
  IF @COD_ACQ IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_AC = @COD_ACQ');  
  IF @SOURCE_TRAN IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_SOURCE_TRAN = @SOURCE_TRAN');  
  IF @POSWEB = 1  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].POSWEB = @POSWEB');  
  IF (@INITIAL_VALUE > 0)  
   AND (@FINAL_VALUE >= @INITIAL_VALUE)  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].AMOUNT BETWEEN @INITIAL_VALUE AND @FINAL_VALUE');  
  IF (@SPLIT = 1)  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, 'AND [REPORT_TRANSACTIONS_EXP].SPLIT = 1');  
  IF @COD_SALES_REP IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_SALES_REP = @COD_SALES_REP');  
  
  IF @COD_EC_PROD IS NOT NULL  
   SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_EC_PROD = @COD_EC_PROD');  
  
  SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' ORDER BY [REPORT_TRANSACTIONS_EXP].CREATED_AT DESC');  
  --SELECT @QUERY_BASIS              
  EXEC [sp_executesql] @QUERY_BASIS  
       ,N'              
   @CODCOMP VARCHAR(10),              
   @INITIAL_DATE DATETIME,              
   @FINAL_DATE DATETIME,              
   @EC int,              
   @BRANCH int,              
   @DEPART int,              
   @TERMINAL varchar(14),              
   @STATE varchar(25),              
   @CITY varchar(40),              
   @TYPE_TRAN VARCHAR(10),              
   @SITUATION VARCHAR(10),              
   @NSU varchar(100),              
   @NSU_EXT varchar(100),              
   @BRAND varchar(50),              
   @COD_AFFILIATOR INT,              
   @PAN VARCHAR(50),              
   @SOURCE_TRAN INT,              
   @POSWEB INT,              
   @INITIAL_VALUE DECIMAL(22,6),              
   @FINAL_VALUE DECIMAL(22,6),              
   @COD_SALES_REP INT,              
   @COD_ACQ INT,  
   @COD_EC_PROD INT  
   '  
       ,@CODCOMP = @CODCOMP  
       ,@INITIAL_DATE = @INITIAL_DATE  
       ,@FINAL_DATE = @FINAL_DATE  
       ,@EC = @EC  
       ,@BRANCH = @BRANCH  
       ,@DEPART = @DEPART  
       ,@TERMINAL = @TERMINAL  
       ,@STATE = @STATE  
       ,@CITY = @CITY  
       ,@TYPE_TRAN = @TYPE_TRAN  
       ,@SITUATION = @SITUATION  
       ,@NSU = @NSU  
       ,@NSU_EXT = @NSU_EXT  
       ,@BRAND = @BRAND  
       ,@PAN = @PAN  
       ,@COD_AFFILIATOR = @COD_AFFILIATOR  
       ,@SOURCE_TRAN = @SOURCE_TRAN  
       ,@POSWEB = @POSWEB  
       ,@INITIAL_VALUE = @INITIAL_VALUE  
       ,@FINAL_VALUE = @FINAL_VALUE  
       ,@COD_SALES_REP = @COD_SALES_REP  
       ,@COD_ACQ = @COD_ACQ  
       ,@COD_EC_PROD = @COD_EC_PROD;  
 END;  
END;  
  
--ST-1397

GO

-- --ST-1416

-- UPDATE DOCS_BRANCH  SET  DOCS_BRANCH.COD_SIT_REQ =  12, DOCS_BRANCH.MODIFY_DATE = GETDATE()
-- FROM SITUATION_REQUESTS  
-- INNER JOIN DOCS_BRANCH ON DOCS_BRANCH.COD_SIT_REQ = SITUATION_REQUESTS.COD_SIT_REQ
-- INNER JOIN BRANCH_EC ON BRANCH_EC.COD_BRANCH = DOCS_BRANCH.COD_BRANCH
-- INNER JOIN COMMERCIAL_ESTABLISHMENT ON COMMERCIAL_ESTABLISHMENT.COD_EC = BRANCH_EC.COD_EC
-- WHERE COMMERCIAL_ESTABLISHMENT.COD_RISK_SITUATION = 2 AND COMMERCIAL_ESTABLISHMENT.ACTIVE = 1
-- AND SITUATION_REQUESTS.COD_SIT_REQ = 16 AND DOCS_BRANCH.PATH_DOC IS NOT NULL AND DOCS_BRANCH.ACTIVE = 1
-- AND BRANCH_EC.ACTIVE = 1

-- --ST-1416

-- GO

--

--ST-1420


GO 

IF OBJECT_ID('SP_REPORT_TRANSACTION_BILLET') IS NOT NULL
DROP PROCEDURE [SP_REPORT_TRANSACTION_BILLET]

GO
CREATE PROCEDURE [dbo].[SP_REPORT_TRANSACTION_BILLET]    
/*----------------------------------------------------------------------------------------        
    Procedure Name: [SP_REPORT_TRANSACTION_BILLET]  Project.......: TKPP        
------------------------------------------------------------------------------------------        
    Author              VERSION        Date         Description        
------------------------------------------------------------------------------------------        
    Marcus Gall           V1        22/04/2020      Creation        
    Caike Uchoa           V2        21/09/2020      add DESCRIPTION_TRAN_BILLET boleto  
	Caike Uchoa           v3        30/09/2020      add documento e email
------------------------------------------------------------------------------------------*/    
(@INITIAL_DATE DATETIME,    
 @FINAL_DATE DATETIME,    
 @AFF [CODE_TYPE] READONLY,    
 @EC [CODE_TYPE] READONLY,    
 @STATUS [CODE_TYPE] READONLY,    
 @NSU VARCHAR(255) = NULL,
 @DOCUMENT VARCHAR(100) = NULL,
 @EMAIL VARCHAR(100) = NULL
 )    
AS    
    
DECLARE @QUERY_ NVARCHAR(MAX) = '';    
    
BEGIN    
    SET @INITIAL_DATE = CONCAT(CAST(@INITIAL_DATE AS DATE), ' ', FORMAT(CAST('00:00:00' AS TIME), N'hh\:mm\:ss'))    
    SET @FINAL_DATE = CONCAT(CAST(@FINAL_DATE AS DATE), ' ', FORMAT(CAST('23:59:59' AS TIME), N'hh\:mm\:ss'))    
    
    SET @QUERY_ = CONCAT(@QUERY_, '        
SELECT BILLET_TRANSACTION.TRANSACTION_CODE      
     , BILLET_TRANSACTION.COD_BILLET      
     , BILLET_TRANSACTION.CREATED_AT      
     , BILLET_TRANSACTION.BILLET_AMOUNT      
     , BILLET_TRANSACTION.RATE      
     , BILLET_TRANSACTION.NET_AMOUNT      
     , BILLET_TRANSACTION.DUE_DATE      
     , AFFILIATOR.NAME                AS AFFILIATOR_NAME      
     , COMMERCIAL_ESTABLISHMENT.NAME  AS EC_NAME      
     , IIF(FINANCE_CALENDAR.COD_FIN_CALENDAR IS NOT NULL, CALENDAR_SIT.SITUATION_TR,      
           TRADUCTION_SITUATION.SITUATION_TR) AS SITUATION_NAME      
     , BILLET_TRANSACTION.BILLET_URL      
     , BILLET_TRANSACTION.DIGITABLE_LINE      
     , BILLET_TRANSACTION.SPLIT_MODE      
     , BILLET_TRANSACTION.BARCODE    
     , COMMERCIAL_ESTABLISHMENT.CALLBACK_BILLET        
     , BILLET_TRANSACTION.DESCRIPTION_TRAN_BILLET  
  	 , CUSTOMER_BILLET.DOCUMENT
	 , BILLET_TRANSACTION.EMAIL
FROM BILLET_TRANSACTION      
         INNER JOIN COMMERCIAL_ESTABLISHMENT ON COMMERCIAL_ESTABLISHMENT.COD_EC = BILLET_TRANSACTION.COD_EC      
         INNER JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR      
         LEFT JOIN SITUATION ON SITUATION.COD_SITUATION = BILLET_TRANSACTION.COD_SITUATION      
         LEFT JOIN TRADUCTION_SITUATION ON TRADUCTION_SITUATION.COD_SITUATION = SITUATION.COD_SITUATION      
         LEFT JOIN FINANCIAL_BILLET ON BILLET_TRANSACTION.COD_BILLET = FINANCIAL_BILLET.COD_BILLET      
         LEFT JOIN FINANCE_CALENDAR ON FINANCIAL_BILLET.COD_FIN_CALENDAR = FINANCE_CALENDAR.COD_FIN_CALENDAR      
         LEFT JOIN TRADUCTION_SITUATION CALENDAR_SIT ON CALENDAR_SIT.COD_SITUATION = FINANCE_CALENDAR.COD_SITUATION  
		 LEFT JOIN CUSTOMER_BILLET ON CUSTOMER_BILLET.COD_BILLET = BILLET_TRANSACTION.COD_BILLET
 WHERE CAST(BILLET_TRANSACTION.CREATED_AT AS DATETIME) BETWEEN ''' + CAST(@INITIAL_DATE AS VARCHAR) + ''' AND ''' +    
                                  CAST(@FINAL_DATE AS VARCHAR) + ''' ');    
    
    IF (SELECT COUNT(*)    
        FROM @EC)    
        > 0    
        SET @QUERY_ = @QUERY_ + ' AND COMMERCIAL_ESTABLISHMENT.COD_EC IN (SELECT [CODE] FROM @EC) ';    
    
    IF (SELECT COUNT(*)    
        FROM @AFF)    
        > 0    
        SET @QUERY_ = @QUERY_ + ' AND COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR IN (SELECT [CODE] FROM @AFF) ';    
    
    IF (SELECT COUNT(*)    
        FROM @STATUS)    
        > 0    
        SET @QUERY_ = @QUERY_ + ' AND SITUATION.COD_SITUATION IN (SELECT [CODE] FROM @STATUS) ';    
    
    IF ( @NSU IS NOT NULL)    
        SET @QUERY_ = @QUERY_ + ' AND BILLET_TRANSACTION.TRANSACTION_CODE = @NSU';    
    
	 IF ( @DOCUMENT IS NOT NULL)    
        SET @QUERY_ = @QUERY_ + ' AND CUSTOMER_BILLET.DOCUMENT = @DOCUMENT';   

     IF ( @EMAIL IS NOT NULL)    
        SET @QUERY_ = @QUERY_ + ' AND BILLET_TRANSACTION.EMAIL = @EMAIL';   


    SET @QUERY_ = CONCAT(@QUERY_, ' ORDER BY BILLET_TRANSACTION.CREATED_AT');    
    
    EXEC sp_executesql @QUERY_    
        ,    
         N' @INITIAL_DATE DATETIME, @FINAL_DATE DATETIME, @AFF [CODE_TYPE] READONLY, @EC [CODE_TYPE] READONLY, @STATUS [CODE_TYPE] READONLY, @NSU VARCHAR(255), @DOCUMENT VARCHAR(100), @EMAIL VARCHAR(100)'    
        , @INITIAL_DATE = @INITIAL_DATE    
        , @FINAL_DATE = @FINAL_DATE    
        , @AFF = @AFF    
        , @EC = @EC    
        , @STATUS = @STATUS    
        , @NSU = @NSU
		, @DOCUMENT = @DOCUMENT
		, @EMAIL = @EMAIL
END      
  
--ST-1420

GO



GO

--ST-1435

GO

GO 

IF OBJECT_ID('SP_CONTACT_DATA_EQUIP') IS NOT NULL
DROP PROCEDURE [SP_CONTACT_DATA_EQUIP];

GO
CREATE PROCEDURE [dbo].[SP_CONTACT_DATA_EQUIP]            
/*----------------------------------------------------------------------------------------            
Procedure Name: [SP_CONTACT_DATA_EQUIP]            
Project.......: TKPP            
------------------------------------------------------------------------------------------            
Author                          VERSION         Date                            Description            
------------------------------------------------------------------------------------------            
Kennedy Alef                      V1         27/07/2018                           Creation            
Fernando Henrique F. O            V2         03/04/2019                           Change              
Lucas Aguiar                      v3         22-04-2019                   Descer se � split ou n�o            
Caike Uch�a                       v4         15/01/2020                     descer MMC padr�o para PF    
Caike Uchoa                       v5         22/09/2020                    Add formatacao de strings  
Caike Uch�a                       v6         05/10/2020                    Limitar endereco 20 carac. 
------------------------------------------------------------------------------------------*/            
(            
  @TERMINALID INT)            
AS            
BEGIN      
SELECT      
TOP 1      
 VW_COMPANY_EC_BR_DEP_EQUIP.CPF_CNPJ_BR      
   ,AFFILIATOR.CPF_CNPJ AS CPF_CNPJ_AFF      
   ,[dbo].[FNC_REMOV_CARAC_ESP](VW_COMPANY_EC_BR_DEP_EQUIP.TRADING_NAME_BR) AS TRADING_NAME_BR   
   ,[dbo].[FNC_REMOV_CARAC_ESP](VW_COMPANY_EC_BR_DEP_EQUIP.BRANCH_NAME) AS BRANCH_NAME  
   ,CASE      
  WHEN TYPE_ESTAB.CODE = 'PF' THEN '8999'      
  ELSE VW_COMPANY_EC_BR_DEP_EQUIP.MCC      
 END AS MCC      
   ,COMMERCIAL_ESTABLISHMENT.CODE AS MERCHANT_CODE      
   ,LEFT([dbo].[FNC_REMOV_CARAC_ESP](ADDRESS_BRANCH.[ADDRESS]),20) AS [ADDRESS]    
   ,[dbo].[FNC_REMOV_LETRAS]([dbo].FNC_REMOV_CARAC_ESP(ADDRESS_BRANCH.[NUMBER])) AS [NUMBER]      
   ,ADDRESS_BRANCH.CEP      
   ,ISNULL([dbo].[FNC_REMOV_CARAC_ESP](ADDRESS_BRANCH.COMPLEMENT), 0) AS COMPLEMENT      
   ,[dbo].[FNC_REMOV_CARAC_ESP](NEIGHBORHOOD.NAME) AS NEIGHBORDHOOD      
   ,[dbo].[FNC_REMOV_CARAC_ESP](CITY.[NAME]) AS CITY      
   ,[dbo].[FNC_REMOV_CARAC_ESP]([STATE].UF) AS [STATE]      
   ,COUNTRY.INITIALS      
   ,[dbo].[FNC_REMOV_LETRAS]([dbo].FNC_REMOV_CARAC_ESP(CONTACT_BRANCH.DDI)) AS DDI       
   ,[dbo].[FNC_REMOV_LETRAS]([dbo].FNC_REMOV_CARAC_ESP(CONTACT_BRANCH.DDD)) AS DDD      
   ,[dbo].[FNC_REMOV_LETRAS]([dbo].[FNC_REMOV_CARAC_ESP](CONTACT_BRANCH.[NUMBER])) AS TEL_NUMBER      
   ,TYPE_CONTACT.NAME AS TYPE_CONTACT      
   ,EQUIPMENT.COD_EQUIP      
   ,CASE      
  WHEN (SELECT      
     COUNT(*)      
    FROM SERVICES_AVAILABLE      
    WHERE COD_ITEM_SERVICE = 4      
    AND ACTIVE = 1      
    AND COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR      
    AND COD_EC IS NULL      
    AND COD_OPT_SERV = 4)      
   > 0 THEN 1      
  WHEN (SELECT      
     COUNT(*)      
    FROM SERVICES_AVAILABLE      
    WHERE COD_ITEM_SERVICE = 4      
    AND ACTIVE = 1      
    AND COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR      
    AND COD_EC IS NULL      
    AND COD_OPT_SERV = 2)      
   > 0 THEN 0      
  WHEN (SELECT      
     COUNT(*)      
    FROM SERVICES_AVAILABLE      
    WHERE COD_ITEM_SERVICE = 4      
    AND ACTIVE = 1      
    AND COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR      
    AND COD_EC = COMMERCIAL_ESTABLISHMENT.COD_EC)      
   > 0 THEN 1      
  ELSE 0      
 END AS [SPLIT] ,    
 (    
CASE     
WHEN     
  (SELECT     
 COUNT(*) FROM SERVICES_AVAILABLE    
 WHERE COD_ITEM_SERVICE=13    
 AND ACTIVE=1    
 AND COD_EC = VW_COMPANY_EC_BR_DEP_EQUIP.COD_EC    
 AND COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR ) > 0 THEN 1    
 ELSE 0    
END     
 ) AS MANY_MERCHANTS    
    
FROM VW_COMPANY_EC_BR_DEP_EQUIP      
JOIN ADDRESS_BRANCH      
 ON ADDRESS_BRANCH.COD_BRANCH = VW_COMPANY_EC_BR_DEP_EQUIP.COD_BRANCH      
JOIN NEIGHBORHOOD      
 ON NEIGHBORHOOD.COD_NEIGH = ADDRESS_BRANCH.COD_NEIGH      
JOIN CITY      
 ON CITY.COD_CITY = NEIGHBORHOOD.COD_CITY      
JOIN STATE       ON STATE.COD_STATE = CITY.COD_STATE      
JOIN COUNTRY      
 ON COUNTRY.COD_COUNTRY = STATE.COD_COUNTRY      
JOIN CONTACT_BRANCH      
 ON CONTACT_BRANCH.COD_BRANCH = VW_COMPANY_EC_BR_DEP_EQUIP.COD_BRANCH      
JOIN TYPE_CONTACT      
 ON TYPE_CONTACT.COD_TP_CONT = CONTACT_BRANCH.COD_TP_CONT      
JOIN ASS_DEPTO_EQUIP      
 ON ASS_DEPTO_EQUIP.COD_DEPTO_BRANCH = VW_COMPANY_EC_BR_DEP_EQUIP.COD_DEPTO_BR      
JOIN EQUIPMENT      
 ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP      
JOIN COMMERCIAL_ESTABLISHMENT      
 ON COMMERCIAL_ESTABLISHMENT.COD_EC = VW_COMPANY_EC_BR_DEP_EQUIP.COD_EC      
LEFT JOIN AFFILIATOR      
 ON AFFILIATOR.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR      
INNER JOIN TYPE_ESTAB      
 ON TYPE_ESTAB.COD_TYPE_ESTAB = COMMERCIAL_ESTABLISHMENT.COD_TYPE_ESTAB      
--LEFT JOIN SERVICES_AVAILABLE            
-- ON SERVICES_AVAILABLE.COD_EC = VW_COMPANY_EC_BR_DEP_EQUIP.COD_EC            
WHERE EQUIPMENT.COD_EQUIP = @TERMINALID      
AND ASS_DEPTO_EQUIP.ACTIVE = 1      
ORDER BY ADDRESS_BRANCH.COD_ADDRESS DESC      
      
END      
    
  
GO

--ST-1435
