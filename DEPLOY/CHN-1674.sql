--ST-2049

GO
IF TYPE_ID('TP_PROMOCODE') IS NOT NULL
	BEGIN
	IF OBJECT_ID('SP_REG_PROMOCODE') IS NOT NULL DROP PROCEDURE SP_REG_PROMOCODE
	DROP TYPE TP_PROMOCODE;
	END
GO
IF NOT EXISTS (SELECT 1 FROM CONTROL_ERRORS WHERE COD_CT_ERR = 146 AND (CODE = 61050 OR CODE = 61080))
	BEGIN
	INSERT INTO [CONTROL_ERRORS] ([CODE], [DESCRIPTION], [DESCRIPTION_SOURCE], [TYPE_ERROR], [MODULE_ERROR]) VALUES 
	(6180, 'INFORMED NSU BELONGS TO AN ESTABLISHMENT ASSOCIATED WITH ANOTHER AFFILIATE', 'NSU INFORMADA PERTENCE A UM ESTABELECIMENTO ASSOCIADO A OUTRO AFILIADOR'
	, 'VALIDATE', 'BACKOFFICE');
	END
ELSE
	BEGIN
	UPDATE CONTROL_ERRORS SET [DESCRIPTION] = 'NSU BELONGS TO AN ESTABLISHMENT ASSOCIATED WITH ANOTHER AFFILIATE'
	, [DESCRIPTION_SOURCE] = 'NSU PERTENCE A UM ESTABELECIMENTO ASSOCIADO A OUTRO AFILIADOR'
	, [CODE] = 6180 WHERE COD_CT_ERR = 146;
	END
GO

IF TYPE_ID('TP_PROMOCODE') IS NOT NULL
	BEGIN
	IF OBJECT_ID('TP_PROMOCODE') IS NOT NULL DROP PROCEDURE SP_REG_PROMOCODE
	DROP TYPE TP_PROMOCODE;
	END
GO
CREATE TYPE TP_PROMOCODE AS TABLE
(
    REQUEST_NUMBER		VARCHAR(50),
    REQUEST_DATE		VARCHAR(30),
	CNPJ_CPF			VARCHAR(20),
	NSU					VARCHAR(50),
	COUPON				VARCHAR(20),
	AMOUNT				DECIMAL(22,6),
	TRANSACTION_TYPE	VARCHAR(20),
	PROMOCODE_TYPE		VARCHAR(20)
);
GO

IF OBJECT_ID('SP_REG_PROMOCODE') IS NOT NULL DROP PROCEDURE SP_REG_PROMOCODE
GO

CREATE PROCEDURE [dbo].[SP_REG_PROMOCODE]      
/*----------------------------------------------------------------------------------------              
    Procedure Name: [SP_REG_PROMOCODE]    Project.......: TKPP              
------------------------------------------------------------------------------------------              
    Author              VERSION        Date         Description              
------------------------------------------------------------------------------------------              
    Marcus Gall           V1        12/01/2020      Creation              
------------------------------------------------------------------------------------------*/     
(  
 @COD_AFF int,  
 @TYPE_PROMOCODE TP_PROMOCODE READONLY  
)  
AS  
BEGIN  
  
 DECLARE @COD_EC INT;  
 DECLARE @AMOUNT DECIMAL(22, 6);  
 DECLARE @DATE DATETIME;  
 DECLARE @COMMENT VARCHAR(100);  
 DECLARE @COD_BRANCH INT;  
 DECLARE @COD_TRAN INT;  
 DECLARE @TP_CODE CODE_TYPE;  
 DECLARE @INVALID_LINE VARCHAR(500);  
  
 SELECT BRAND.COD_BRAND,  
     PLOTS,  
     REPORT_TRANSACTIONS_EXP.COD_SOURCE_TRAN,  
     BRAND.COD_TTYPE,  
     REPORT_TRANSACTIONS_EXP.COD_TRAN,  
     REPORT_TRANSACTIONS_EXP.TRANSACTION_CODE AS NSU,  
     TP.CNPJ_CPF,  
     REPLACE(TP.AMOUNT, ',', '.') AS AMOUNT,  
     TP.COUPON,  
     TP.REQUEST_NUMBER,
	 ACCESS_APPAPI.COD_USER_INT
 INTO #TMP  
 FROM REPORT_TRANSACTIONS_EXP  
    JOIN BRAND ON BRAND.[NAME] = REPORT_TRANSACTIONS_EXP.BRAND  
    JOIN @TYPE_PROMOCODE TP ON TP.NSU = REPORT_TRANSACTIONS_EXP.TRANSACTION_CODE 
			AND REPORT_TRANSACTIONS_EXP.COD_AFFILIATOR = @COD_AFF
	JOIN ACCESS_APPAPI ON ACCESS_APPAPI.COD_AFFILIATOR = @COD_AFF
			AND ACCESS_APPAPI.ACTIVE=1

	IF (SELECT COUNT(*) FROM #TMP) = 0
	BEGIN ;  
  THROW 61080, '', 1; 
  END

  
 SELECT COMMERCIAL_ESTABLISHMENT.COD_EC, 
	 BRANCH_EC.COD_BRANCH,
     REPLACE(TP.AMOUNT, ',', '.') AS AMOUNT,  
     COMMERCIAL_ESTABLISHMENT.CPF_CNPJ,  
     ASS_TAX_DEPART.COD_ASS_TX_DEP,  
     ASS_TAX_DEPART.[PARCENTAGE]             AS MDR,  
     ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE  AS ANTICIP,  
     ASS_TAX_DEPART.INTERVAL ,
	 TP.COUPON,
	 #TMP.COD_TRAN,
	    dbo.FNC_ANT_VALUE_LIQ_DAYS  
       (  
        TP.AMOUNT,  
        ASS_TAX_DEPART.PARCENTAGE,  
        1,  
        ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE,  
        0 
       ) as NET_AMOUNT,
	   COD_USER_INT,
	   TP.NSU
 INTO #TMP_TAX  
 FROM COMMERCIAL_ESTABLISHMENT 
	JOIN BRANCH_EC ON BRANCH_EC.COD_EC = COMMERCIAL_ESTABLISHMENT.COD_EC
	JOIN DEPARTMENTS_BRANCH ON DEPARTMENTS_BRANCH.COD_BRANCH = BRANCH_EC.COD_BRANCH
    JOIN ASS_TAX_DEPART ON ASS_TAX_DEPART.COD_DEPTO_BRANCH = DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH  
    JOIN @TYPE_PROMOCODE TP ON TP.CNPJ_CPF = COMMERCIAL_ESTABLISHMENT.CPF_CNPJ 
	JOIN #TMP ON #TMP.COD_SOURCE_TRAN = ASS_TAX_DEPART.COD_SOURCE_TRAN
		AND #TMP.COD_BRAND = ASS_TAX_DEPART.COD_BRAND
		AND #TMP.COD_TTYPE = ASS_TAX_DEPART.COD_TTYPE
		AND #TMP.PLOTS BETWEEN ASS_TAX_DEPART.QTY_INI_PLOTS AND ASS_TAX_DEPART.QTY_FINAL_PLOTS

 WHERE ASS_TAX_DEPART.ACTIVE = 1  AND 
		COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR = @COD_AFF

	IF (SELECT COUNT(*) FROM #TMP_TAX ) <1
  THROW 61081, 'MERCHANT DON''T HAVE PLAN TO RECEIVE THIS TRANSACTION', 1; 

  
   
   INSERT INTO [RELEASE_ADJUSTMENTS] (  
    [COD_EC],  
    [VALUE],  
    [PREVISION_PAY_DATE],  
    [COD_TYPEJUST],  
    [COMMENT],  
    [COD_SITUATION],  
    [COD_USER],  
    [COD_REQ],  
    [COD_BRANCH],  
    [COD_TRAN]  
    )  
   select 
   COD_EC,  
       NET_AMOUNT,  
       DATEADD(DAY, INTERVAL, GETDATE())  ,  
       1,  
        ('CREDITO REFERENTE A TRANSACAO ' + NSU + ' E CUPOM ' + COUPON) ,  
       4,  
       COD_USER_INT,  
       NULL,  
       COD_BRANCH,  
       COD_TRAN 
	   FROM #TMP_TAX

   

END  

GO

--ST-2049

GO

--ET-1380

IF NOT EXISTS(SELECT 1 FROM sys.columns WHERE Name = N'LAST_GENERATE' AND Object_ID = Object_ID(N'dbo.TERM_TOKEN'))
	ALTER TABLE [TERM_TOKEN] ADD LAST_GENERATE DATE NULL;
GO

IF OBJECT_ID('SP_GW_LS_USERS_TCU') IS NOT NULL BEGIN
    DROP PROCEDURE SP_GW_LS_USERS_TCU
END
GO
CREATE PROCEDURE [dbo].[SP_GW_LS_USERS_TCU]    
/*----------------------------------------------------------------------------------------            
    Procedure Name: [SP_GW_LS_USERS_TCU]  Project.......: TKPP            
------------------------------------------------------------------------------------------            
    Author              VERSION        Date         Description            
------------------------------------------------------------------------------------------            
    Marcus Gall           V1        15/04/2020      Creation            
------------------------------------------------------------------------------------------*/ 
(
	@COD_EC INT
) 
AS 
	DECLARE @QUERY_ NVARCHAR(MAX) = '';
BEGIN
	
	SET @QUERY_ = @QUERY_ + ' 
	SELECT COMMERCIAL_ESTABLISHMENT.TCU_ACCEPTED
		, IIF(TERM_TOKEN.ACTIVE = 1, TERM_TOKEN.COD_TERM_TOKEN, NULL) AS AUTH_CODE
		, USERS.[IDENTIFICATION]
		, USERS.COD_USER
		, TERM_TOKEN.LAST_GENERATE 
		, COMMERCIAL_ESTABLISHMENT.COD_EC 
	FROM COMMERCIAL_ESTABLISHMENT
		JOIN USERS ON USERS.COD_EC = COMMERCIAL_ESTABLISHMENT.COD_EC
		LEFT JOIN TERM_TOKEN ON TERM_TOKEN.COD_USER = USERS.COD_USER
	WHERE COMMERCIAL_ESTABLISHMENT.COD_EC IS NOT NULL'
	SET @QUERY_ = @QUERY_ + ' AND COMMERCIAL_ESTABLISHMENT.COD_EC = @COD_EC ';    
	SET @QUERY_ = @QUERY_ + ' ORDER BY TERM_TOKEN.ACTIVE, USERS.COD_USER ';    
    
	EXEC sp_executesql @QUERY_    
		,N' @COD_EC INT'   
		,@COD_EC = @COD_EC    
END    
GO

IF OBJECT_ID('SP_GW_GEN_LINK_TCU') IS NOT NULL BEGIN
    DROP PROCEDURE SP_GW_GEN_LINK_TCU
END
GO
CREATE PROCEDURE [dbo].[SP_GW_GEN_LINK_TCU]    
/*----------------------------------------------------------------------------------------            
    Procedure Name: [SP_GW_GEN_LINK_TCU]  Project.......: TKPP            
------------------------------------------------------------------------------------------            
    Author              VERSION        Date         Description            
------------------------------------------------------------------------------------------            
    Marcus Gall           V1        16/04/2020      Creation            
------------------------------------------------------------------------------------------*/ 
(
	@COD_USER INT,
	@AUTH_CODE INT
) 
AS 
	DECLARE @SUBDOMAIN VARCHAR(50) = NULL;
	DECLARE @CODE VARCHAR(100) = NULL;
	DECLARE @LINK VARCHAR(500) = NULL;
BEGIN
	
	SELECT @SUBDOMAIN = AFFILIATOR.SUBDOMAIN, @CODE = TERM_TOKEN.CODE 
	FROM AFFILIATOR
	JOIN USERS ON USERS.COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR
	JOIN TERM_TOKEN ON TERM_TOKEN.COD_USER = USERS.COD_USER
	WHERE TERM_TOKEN.ACTIVE = 1 
	AND USERS.COD_USER = @COD_USER 
	AND TERM_TOKEN.COD_TERM_TOKEN = @AUTH_CODE
	AND (TERM_TOKEN.LAST_GENERATE < CONVERT(DATE, GETDATE()) OR TERM_TOKEN.LAST_GENERATE IS NULL)

	IF (@CODE IS NOT NULL)
	BEGIN 
		UPDATE TERM_TOKEN SET LAST_GENERATE = CONVERT(DATE, GETDATE());
		SET @LINK = 'https://' + @SUBDOMAIN + '.redeceler.com.br/Account/TermsAndConditions?code=' + @CODE;
	END

	SELECT @LINK AS LINK;

END    
GO

--ET-1380

GO

--ST-2029


--begin tran 
--SELECT @@trancount
--ROLLBACK


-- TODOS OS ECs que n�o tem o COD_MODEL
SELECT DISTINCT COD_DEPTO_BRANCH AS COD_BR,COD_PLAN
INTO #TEMP_BRANCH
FROM ASS_TAX_DEPART
WHERE COD_MODEL IS NULL AND COD_SOURCE_TRAN = 2 AND ACTIVE= 1

GO

-- TODOS OS AFILIADORES COM PLANO POR MODELO
SELECT DISTINCT PLAN_TAX_AFFILIATOR.COD_AFFILIATOR
INTO #TEMP_AFF
FROM PLAN_TAX_AFFILIATOR
JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR = PLAN_TAX_AFFILIATOR.COD_AFFILIATOR
JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
WHERE COD_MODEL IS NOT NULL AND COD_SOURCE_TRAN= 2 AND PLAN_TAX_AFFILIATOR.ACTIVE = 1
AND [PLAN].COD_PLAN_CATEGORY=2
AND AFFILIATOR.ACTIVE = 1


-- Todos ECs v�lidos, que n�o � plano por modelo mas o afiliador � plano por modelo
SELECT COMMERCIAL_ESTABLISHMENT.COD_EC,
COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR, 
COD_DEPTO_BRANCH, 
AFFILIATOR.NAME,
COMMERCIAL_ESTABLISHMENT.CPF_CNPJ,
COMMERCIAL_ESTABLISHMENT.COD_SITUATION,
COMMERCIAL_ESTABLISHMENT.COD_RISK_SITUATION,
COMMERCIAL_ESTABLISHMENT.ACTIVE
INTO #TEMP
       FROM COMMERCIAL_ESTABLISHMENT              
   INNER JOIN BRANCH_EC ON BRANCH_EC.COD_EC = COMMERCIAL_ESTABLISHMENT.COD_EC AND BRANCH_EC.CPF_CNPJ = COMMERCIAL_ESTABLISHMENT.CPF_CNPJ               
   INNER JOIN SEGMENTS ON SEGMENTS.COD_SEG = COMMERCIAL_ESTABLISHMENT.COD_SEG              
   INNER JOIN TYPE_ESTAB ON COMMERCIAL_ESTABLISHMENT.COD_TYPE_ESTAB = TYPE_ESTAB.COD_TYPE_ESTAB              
   INNER JOIN SALES_REPRESENTATIVE ON SALES_REPRESENTATIVE.COD_SALES_REP = COMMERCIAL_ESTABLISHMENT.COD_SALES_REP              
   INNER JOIN USERS ON USERS.COD_USER = SALES_REPRESENTATIVE.COD_USER              
   INNER JOIN DEPARTMENTS_BRANCH ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH                
   INNER JOIN TYPE_RECEIPT ON TYPE_RECEIPT.COD_TYPE_REC = BRANCH_EC.COD_TYPE_REC              
   INNER JOIN SITUATION_REQUESTS ON SITUATION_REQUESTS.COD_SIT_REQ = COMMERCIAL_ESTABLISHMENT.COD_SIT_REQ              
   LEFT JOIN BRANCH_BUSINESS ON BRANCH_BUSINESS.COD_BRANCH_BUSINESS = COMMERCIAL_ESTABLISHMENT.COD_BRANCH_BUSINESS              
   LEFT JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR              
   LEFT JOIN TRADUCTION_SITUATION ON TRADUCTION_SITUATION.COD_SITUATION = COMMERCIAL_ESTABLISHMENT.COD_SITUATION              
   LEFT JOIN TRADUCTION_RISK_SITUATION ON TRADUCTION_RISK_SITUATION.COD_RISK_SITUATION = COMMERCIAL_ESTABLISHMENT.COD_RISK_SITUATION              
   INNER JOIN ADDRESS_BRANCH  ON ADDRESS_BRANCH.COD_BRANCH = BRANCH_EC.COD_BRANCH AND ADDRESS_BRANCH.ACTIVE = 1 AND  COMMERCIAL_ESTABLISHMENT.COD_EC =  BRANCH_EC.COD_EC            
   INNER JOIN NEIGHBORHOOD  ON NEIGHBORHOOD.COD_NEIGH = ADDRESS_BRANCH.COD_NEIGH              
   INNER JOIN CITY    ON CITY.COD_CITY = NEIGHBORHOOD.COD_CITY              
   INNER JOIN STATE   ON STATE.COD_STATE = CITY.COD_STATE         
   
WHERE DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH IN (SELECT COD_BR FROM #TEMP_BRANCH)
AND COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR IN (SELECT COD_AFFILIATOR FROM #TEMP_AFF)
group by 
COMMERCIAL_ESTABLISHMENT.COD_EC,
COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR, 
COD_DEPTO_BRANCH, 
AFFILIATOR.NAME,
COMMERCIAL_ESTABLISHMENT.CPF_CNPJ,
COMMERCIAL_ESTABLISHMENT.COD_SITUATION,
COMMERCIAL_ESTABLISHMENT.COD_RISK_SITUATION,
COMMERCIAL_ESTABLISHMENT.ACTIVE




-------ALTERAR COD_PLAN_OPT PARA PLANO POR MODELO ------------

SELECT DISTINCT
ASS_TAX_DEPART.COD_DEPTO_BRANCH,
ASS_TAX_DEPART.COD_PLAN
INTO #TEMP_PLAN_OPT
FROM ASS_TAX_DEPART
JOIN [PLAN] ON [PLAN].COD_PLAN = ASS_TAX_DEPART.COD_PLAN
JOIN PLAN_CATEGORY ON PLAN_CATEGORY.COD_PLAN_CATEGORY = [PLAN].COD_PLAN_CATEGORY
AND [PLAN].COD_PLAN_CATEGORY = 1
LEFT JOIN PLAN_OPTION ON PLAN_OPTION.COD_PLAN_OPT = [PLAN].COD_PLAN_OPT
AND [PLAN].COD_PLAN_OPT = 3
JOIN DEPARTMENTS_BRANCH ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = ASS_TAX_DEPART.COD_DEPTO_BRANCH
JOIN #TEMP ON #TEMP.COD_DEPTO_BRANCH = DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH
WHERE PLAN_OPTION.COD_PLAN_OPT IS NULL
--WHERE DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH =23274


UPDATE [PLAN] SET COD_PLAN_OPT = 3 
FROM [PLAN]
JOIN #TEMP_PLAN_OPT ON #TEMP_PLAN_OPT.COD_PLAN = [PLAN].COD_PLAN
AND [PLAN].ACTIVE= 1


-------------------------------------


--cursor que inativa plano existe e associa novamente

WHILE (SELECT COUNT(*) FROM #TEMP) > 0
BEGIN 


DECLARE @COD_DEPTO_BRANCH INT;
DECLARE @COD_PLAN INT;
DECLARE @COD_T_PLAN_INS INT;
DECLARE @COD_USER INT;
DECLARE @COD_AFFILIATOR INT;

SELECT TOP 1 
@COD_DEPTO_BRANCH = ASS_TAX_DEPART.COD_DEPTO_BRANCH,
@COD_PLAN = ASS_TAX_DEPART.COD_PLAN,
@COD_AFFILIATOR = #TEMP.COD_AFFILIATOR
FROM #TEMP
JOIN ASS_TAX_DEPART ON ASS_TAX_DEPART.COD_DEPTO_BRANCH = #TEMP.COD_DEPTO_BRANCH
WHERE ASS_TAX_DEPART.ACTIVE = 1


SELECT 
COD_TTYPE,  
QTY_INI_PLOTS,  
QTY_FINAL_PLOTS,  
PARCENTAGE,  
RATE,  
INTERVAL,  
ACTIVE,  
COD_PLAN,  
ANTICIPATION_PERCENTAGE,  
COD_BRAND,  
COD_SOURCE_TRAN,  
COD_MODEL
INTO #TEMP_TAX_EC
FROM ASS_TAX_DEPART 
WHERE COD_DEPTO_BRANCH = @COD_DEPTO_BRANCH AND ACTIVE = 1


if(
SELECT 
COUNT(*)
FROM TAX_PLAN 
LEFT JOIN #TEMP_TAX_EC ON #TEMP_TAX_EC.COD_PLAN = TAX_PLAN.COD_PLAN
AND #TEMP_TAX_EC.COD_TTYPE = TAX_PLAN.COD_TTYPE
AND #TEMP_TAX_EC.QTY_INI_PLOTS  = TAX_PLAN.QTY_INI_PLOTS
AND #TEMP_TAX_EC.QTY_FINAL_PLOTS = TAX_PLAN.QTY_FINAL_PLOTS 
AND #TEMP_TAX_EC.PARCENTAGE = TAX_PLAN.PARCENTAGE 
AND #TEMP_TAX_EC.RATE = TAX_PLAN.RATE
AND #TEMP_TAX_EC.INTERVAL  =TAX_PLAN.INTERVAL
AND #TEMP_TAX_EC.ACTIVE  = TAX_PLAN.ACTIVE
AND #TEMP_TAX_EC.ANTICIPATION_PERCENTAGE  = TAX_PLAN.ANTICIPATION_PERCENTAGE
AND #TEMP_TAX_EC.COD_BRAND  = TAX_PLAN.COD_BRAND
AND #TEMP_TAX_EC.COD_SOURCE_TRAN = TAX_PLAN.COD_SOURCE_TRAN
--AND #TEMP_TAX_EC.COD_MODEL = TAX_PLAN.COD_MODEL
AND TAX_PLAN.ACTIVE = 1
WHERE TAX_PLAN.COD_TAX_PLAN IS NULL
) = 0
BEGIN


DROP TABLE #TEMP_TAX_EC


UPDATE ASS_TAX_DEPART SET ACTIVE= 0 FROM ASS_TAX_DEPART
WHERE COD_DEPTO_BRANCH = @COD_DEPTO_BRANCH AND ACTIVE = 1

-- ASSOCIA NOVAMENTE O PLANO

  
UPDATE ASS_TAX_DEPART  
SET ACTIVE = 0  
WHERE COD_DEPTO_BRANCH = @COD_DEPTO_BRANCH  
AND ACTIVE = 1;  
  
SELECT  
 @COD_USER = COD_USER_INT  
FROM ACCESS_APPAPI  
WHERE COD_AFFILIATOR = @COD_AFFILIATOR  
AND ACTIVE = 1;  
  
INSERT INTO ASS_TAX_DEPART (COD_TTYPE,  
QTY_INI_PLOTS,  
QTY_FINAL_PLOTS,  
PARCENTAGE,  
RATE,  
INTERVAL,  
ACTIVE,  
COD_PLAN,  
ANTICIPATION_PERCENTAGE,  
COD_BRAND,  
COD_SOURCE_TRAN,  
COD_DEPTO_BRANCH,  
COD_USER,  
EFFECTIVE_PERCENTAGE,  
COD_MODEL)  
 SELECT  
  COD_TTYPE  
    ,QTY_INI_PLOTS
    ,QTY_FINAL_PLOTS  
    ,PARCENTAGE 
    ,RATE 
    ,INTERVAL  
    ,1  
    ,@COD_PLAN  
    ,ANTICIPATION_PERCENTAGE
    ,COD_BRAND  
    ,COD_SOURCE_TRAN  
    ,@COD_DEPTO_BRANCH  
    ,@COD_USER  
    ,0  
    ,COD_MODEL  
 FROM TAX_PLAN
 WHERE COD_PLAN = @COD_PLAN
 AND ACTIVE = 1
  
IF @@rowcount < 1  
THROW 60000, 'COULD NOT REGISTER [TAX_PLAN] ', 1;  

SET @COD_T_PLAN_INS = (SELECT TOP 1 COD_T_PLAN FROM [PLAN] WHERE COD_PLAN = @COD_PLAN AND ACTIVE = 1)
  
UPDATE DEPARTMENTS_BRANCH  
SET COD_T_PLAN = ISNULL(@COD_T_PLAN_INS, COD_T_PLAN)  
WHERE COD_DEPTO_BRANCH = @COD_DEPTO_BRANCH  
 

DELETE FROM #TEMP WHERE COD_DEPTO_BRANCH = @COD_DEPTO_BRANCH

END 

END


-----------------------------------------------------------------------------------------------------------------------------------------------

drop table #TEMP_AFF
drop table #TEMP
drop TABLE #TEMP_BRANCH

GO

--BEGIN TRAN
--SELECT @@trancount
--ROLLBACK

SELECT 
CODE,
TRANSACTION_DATE,
COD_TITLE,
MDR_AFFILIATOR,
ANTECIP_AFFILIATOR,
MDR_EC,
ANTECIP_PERCENT AS ANTECIP_EC,
QTY_DAYS_ANTECIP,
COD_AFFILIATOR,
REPORT_CONSOLIDATED_TRANS_SUB.QUOTA_TOTAL AS PLOTS,
REPORT_CONSOLIDATED_TRANS_SUB.BRAND,
REPORT_CONSOLIDATED_TRANS_SUB.MODEL_POS,
TRANSACTION_TYPE,
TYPE_TRAN
INTO #TEMP_TITLE_MDR2
FROM REPORT_CONSOLIDATED_TRANS_SUB WITH(NOLOCK)
WHERE TRANSACTION_DATE BETWEEN '2021-04-19 00:00:00' AND '2021-05-07 23:59:59'

--DROP TABLE #TEMP_TITLE_MDR2
--DROP TABLE #TMP_ANTECIP2


SELECT * 
INTO #TMP_ANTECIP2
FROM #TEMP_TITLE_MDR2
WHERE 
ANTECIP_EC > 0
AND QTY_DAYS_ANTECIP > 0
AND (ANTECIP_AFFILIATOR IS NULL OR ANTECIP_AFFILIATOR = 0)
GO

select 
#TMP_ANTECIP2.* ,
SOURCE_TRANSACTION.COD_SOURCE_TRAN,
EQUIPMENT_MODEL.COD_MODEL,
BRAND.COD_BRAND,
TRANSACTION_TYPE.COD_TTYPE INTO #TMP_COMPARE2
from 
#TMP_ANTECIP2
JOIN SOURCE_TRANSACTION ON SOURCE_TRANSACTION.CODE = #TMP_ANTECIP2.TYPE_TRAN
join TRANSACTION_TYPE ON TRANSACTION_TYPE.CODE = #TMP_ANTECIP2.TRANSACTION_TYPE
join EQUIPMENT_MODEL on EQUIPMENT_MODEL.CODIGO = #TMP_ANTECIP2.MODEL_POS
JOIN BRAND on BRAND.[NAME] = #TMP_ANTECIP2.BRAND
	and BRAND.COD_TTYPE = TRANSACTION_TYPE.COD_TTYPE


GO


SELECT #TMP_COMPARE2.* , 
[TRANSACTION_TITLES_COST].COD_TRAN_TITLE_COST,
[TRANSACTION_TITLES_COST].ANTICIP_PERCENT,
(
select top 1 PLAN_TAX_AFFILIATOR.COD_PLAN_TAX_AFF from PLAN_TAX_AFFILIATOR
JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
 AND [PLAN].COD_PLAN_CATEGORY <> 3 
WHERE PLAN_TAX_AFFILIATOR.ACTIVE=1 
AND PLAN_TAX_AFFILIATOR.COD_AFFILIATOR = #TMP_COMPARE2.COD_AFFILIATOR
AND
#TMP_COMPARE2.PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
AND PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN=#TMP_COMPARE2.COD_SOURCE_TRAN
AND (PLAN_TAX_AFFILIATOR.COD_MODEL = #TMP_COMPARE2.COD_MODEL OR PLAN_TAX_AFFILIATOR.COD_MODEL IS NULL)
AND PLAN_TAX_AFFILIATOR.COD_BRAND = #TMP_COMPARE2.COD_BRAND
) AS COD_PLAN_TAX_AFF,
AFFILIATOR.[NAME] as AFF into #tmp_update_antecip
FROM [TRANSACTION_TITLES_COST]
JOIN #TMP_COMPARE2 ON #TMP_COMPARE2.COD_TITLE = [TRANSACTION_TITLES_COST].COD_TITLE
JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR  = #TMP_COMPARE2.COD_AFFILIATOR


go

SELECT 
#tmp_update_antecip.* ,
(
SELECT ANTICIPATION_PERCENTAGE FROM PLAN_TAX_AFFILIATOR 
WHERE COD_PLAN_TAX_AFF= #tmp_update_antecip.COD_PLAN_TAX_AFF
) AS ANTECIP
INTO #TMP_LAST
FROM #tmp_update_antecip


UPDATE TRANSACTION_TITLES_COST  SET ANTICIP_PERCENT = #TMP_LAST.ANTECIP
FROM TRANSACTION_TITLES_COST
JOIN #TMP_LAST ON #TMP_LAST.COD_TRAN_TITLE_COST = TRANSACTION_TITLES_COST.COD_TRAN_TITLE_COST

GO
UPDATE REPORT_CONSOLIDATED_TRANS_SUB
SET ANTECIP_AFFILIATOR = #TMP_LAST.ANTECIP
FROM REPORT_CONSOLIDATED_TRANS_SUB 
JOIN #TMP_LAST ON #TMP_LAST.COD_TITLE = REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE

--SELECT * FROM [TRANSACTION] WHERE COD_TRAN=9765471
--SELECT * FROM TRANSACTION_TYPE 
go


SELECT 
    dbo.FNC_CALC_LIQ_ANTICIP_DAYS        
  (        
  COALESCE(TRANSACTION_TITLES_COST.ANTICIP_PERCENT, 0) +        
  IIF([TRANSACTION].COD_TTYPE = 1 AND (SELECT      
    COUNT(*)      
   FROM TRANSACTION_SERVICES      
   INNER JOIN ITEMS_SERVICES_AVAILABLE      
    ON TRANSACTION_SERVICES.COD_ITEM_SERVICE =      
    ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE      
   WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'      
   AND TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN      
   AND TRANSACTION_SERVICES.COD_EC = [TRANSACTION_TITLES].COD_EC    
   ) > 0, TRANSACTION_TITLES_COST.TAX_PLANDZERO, 0),        
  [TRANSACTION_TITLES].PLOT,        
  dbo.FNC_CALC_LIQUID([TRANSACTION_TITLES].AMOUNT,        
  [TRANSACTION_TITLES_COST].[PERCENTAGE]),        
  (IIF(TRANSACTION_TITLES.IS_SPOT = 1, DATEDIFF(DAY,        
  TRANSACTION_TITLES.PREVISION_PAY_DATE,        
  TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE),        
  TRANSACTION_TITLES.QTY_DAYS_ANTECIP))        
  ) AS ANTECIP_DISCOUNT_AFF,
  TRANSACTION_TITLES.COD_TITLE
INTO #TEMP_ANTECIP_AFF
FROM [TRANSACTION_TITLES] WITH(NOLOCK)
JOIN [TRANSACTION] 
WITH(NOLOCK)
ON [TRANSACTION].COD_TRAN = [TRANSACTION_TITLES].COD_TRAN
JOIN [TRANSACTION_TITLES_COST]     
WITH (NOLOCK)      
ON [TRANSACTION_TITLES].COD_TITLE = TRANSACTION_TITLES_COST.COD_TITLE 
LEFT JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR = TRANSACTION_TITLES_COST.COD_AFFILIATOR
JOIN COMMERCIAL_ESTABLISHMENT ON COMMERCIAL_ESTABLISHMENT.COD_EC = TRANSACTION_TITLES.COD_EC
JOIN AFFILIATOR AFF ON AFF.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR
WHERE TRANSACTION_TITLES.COD_TITLE IN (SELECT COD_TITLE FROM #TMP_LAST)


GO

CREATE TABLE #DELETE
(
ANTECIP_CURRENT_AFF DECIMAL(22,6),
COD_TITLE INT
)

DECLARE @CON INT;

SET @CON = 0;

WHILE @CON < 30
BEGIN 

INSERT INTO #DELETE
SELECT TOP 1000 ANTECIP_DISCOUNT_AFF,COD_TITLE FROM #TEMP_ANTECIP_AFF


UPDATE REPORT_CONSOLIDATED_TRANS_SUB SET ANTECIP_CURRENT_AFF= #DELETE.ANTECIP_CURRENT_AFF
FROM REPORT_CONSOLIDATED_TRANS_SUB
JOIN #DELETE ON #DELETE.COD_TITLE = REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE
WHERE REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE IN (SELECT COD_TITLE FROM #DELETE) 

DELETE FROM #TEMP_ANTECIP_AFF WHERE COD_TITLE IN (SELECT COD_TITLE FROM #DELETE)

DELETE FROM #DELETE

SELECT @CON AS QTY;

SET @CON = @CON + 1;

END


DROP TABLE #DELETE
DROP TABLE #TEMP_ANTECIP_AFF


DROP TABLE #TEMP_TITLE_MDR2
DROP TABLE #TMP_ANTECIP2
DROP TABLE #TMP_COMPARE2
DROP TABLE #tmp_update_antecip
DROP TABLE #TMP_LAST
 
-- SELECT * FROM PLAN_TAX_AFFILIATOR
-- WHERE 
-- ACTIVE=1 
-- AND COD_AFFILIATOR=275
-- AND COD_MODEL=2
-- AND COD_BRAND=2
-- AND COD_SOURCE_TRAN=2
-- AND 2 BETWEEN QTY_INI_PLOTS AND QTY_FINAL_PLOTS
-- GO
-- SELECT * FROM #TMP_ANTECIP2
-- WHERE COD_AFFILIATOR=275
-- AND MODEL_POS= 'S920'
-- AND BRAND = 'MASTERCARD'
-- AND TYPE_TRAN='PRESENCIAL'
-- AND TRANSACTION_TYPE='CREDITO'


--SELECT COD_TITLE
--INTO #TEMP_TITLE
--FROM #TEMP_TITLE_MDR
--WHERE MDR_AFFILIATOR = 0 OR MDR_AFFILIATOR IS NULL


 
--SELECT [TRANSACTION].CODE,[TRANSACTION].CREATED_AT, PLAN_TAX_AFFILIATOR.[PERCENTAGE],PLAN_TAX_AFFILIATOR.ANTICIPATION_PERCENTAGE, ASS_TAX_DEPART.PARCENTAGE, ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE, ASS_TAX_DEPART.COD_SOURCE_TRAN, PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN, PLAN_TAX_AFFILIATOR.COD_AFFILIATOR
--FROM TRANSACTION_TITLES_COST WITH (NOLOCK)
--JOIN TRANSACTION_TITLES WITH (NOLOCK)  ON TRANSACTION_TITLES.COD_TITLE = TRANSACTION_TITLES_COST.COD_TITLE
--JOIN [TRANSACTION] WITH (NOLOCK)  ON [TRANSACTION].COD_TRAN = TRANSACTION_TITLES.COD_TRAN
--JOIN ASS_DEPTO_EQUIP ON ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL = [TRANSACTION].COD_ASS_DEPTO_TERMINAL	
--JOIN EQUIPMENT ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP
--JOIN EQUIPMENT_MODEL ON EQUIPMENT_MODEL.COD_MODEL = EQUIPMENT.COD_MODEL
--join brand on BRAND.[NAME] = [TRANSACTION].BRAND
--	AND BRAND.COD_TTYPE = [TRANSACTION].COD_TTYPE
--LEFT JOIN PLAN_TAX_AFFILIATOR ON PLAN_TAX_AFFILIATOR.COD_AFFILIATOR = TRANSACTION_TITLES_COST.COD_AFFILIATOR
--AND PLAN_TAX_AFFILIATOR.COD_TTYPE = [TRANSACTION].COD_TTYPE
--AND  [TRANSACTION].PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
--AND [TRANSACTION].PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
--AND PLAN_TAX_AFFILIATOR.COD_BRAND = brand.COD_BRAND
--AND (PLAN_TAX_AFFILIATOR.COD_MODEL = EQUIPMENT_MODEL.COD_MODEL OR PLAN_TAX_AFFILIATOR.COD_MODEL IS NULL)
--AND PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN <> [TRANSACTION].COD_SOURCE_TRAN
--AND PLAN_TAX_AFFILIATOR.ACTIVE= 1
-- AND [PLAN].COD_PLAN_CATEGORY <> 3
-- AND PLAN_TAX_AFFILIATOR.[PERCENTAGE] > 0

--JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
--JOIN ASS_TAX_DEPART ON ASS_TAX_DEPART.COD_ASS_TX_DEP = [TRANSACTION].COD_ASS_TX_DEP
-- --AND (TRANSACTION_TITLES_COST.[PERCENTAGE] = 0 OR TRANSACTION_TITLES_COST.[PERCENTAGE] IS NULL)
--WHERE
-- TRANSACTION_TITLES.COD_TITLE IN (SELECT * FROM #TEMP_TITLE)
-- AND CODIGO = 'A910'
 
--go
--select * from EQUIPMENT_MODEL
--go
--select * from PLAN_TAX_AFFILIATOR
--JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
--	AND [PLAN].COD_PLAN_CATEGORY <> 3 
--where PLAN_TAX_AFFILIATOR.active=1
--AND 
--PLAN_TAX_AFFILIATOR.COD_AFFILIATOR IN 
--(
--select DISTINCT COD_AFFILIATOR from VW_COMPANY_EC_AFF_BR_DEP_EQUIP
--WHERE [AFFILIATOR] LIKE '%3P%'
--)
--and COD_MODEL=8
--and COD_SOURCE_TRAN=2

--go

--SELECT * FROM AFFILIATOR
--WHERE [NAME] LIKE '%MAXX PAY - 3PTEC%'
--GO
--SELECT * FROM PLAN_TAX_AFFILIATOR
--WHERE ACTIVE=1
--AND COD_AFFILIATOR=275
--AND COD_SOURCE_TRAN=1

--go

--SELECT * FROM PLAN_TAX_AFFILIATOR WHERE COD_AFFILIATOR =275 and ACTIVE = 1 AND COD_MODEL = 8
 
 GO

 --BEGIN TRAN 
--SELECT @@trancount
--ROLLBACK

SELECT 
COD_TITLE,
MDR_AFFILIATOR,
ANTECIP_AFFILIATOR,
MDR_EC,
QTY_DAYS_ANTECIP,
COD_AFFILIATOR,
REPORT_CONSOLIDATED_TRANS_SUB.QUOTA_TOTAL AS PLOTS,
REPORT_CONSOLIDATED_TRANS_SUB.BRAND,
REPORT_CONSOLIDATED_TRANS_SUB.MODEL_POS,
TRANSACTION_TYPE,
TYPE_TRAN
INTO #TEMP_TITLE_MDR2
FROM REPORT_CONSOLIDATED_TRANS_SUB WITH(NOLOCK)
WHERE TRANSACTION_DATE BETWEEN '2021-04-20 00:00:00' AND '2021-05-07 23:59:59'
and COD_AFFILIATOR <> 35

SELECT * 
INTO #TMP_ANTECIP2
FROM #TEMP_TITLE_MDR2
WHERE (MDR_AFFILIATOR IS NULL OR MDR_AFFILIATOR = 0)
GO

select 
#TMP_ANTECIP2.* ,
SOURCE_TRANSACTION.COD_SOURCE_TRAN,
EQUIPMENT_MODEL.COD_MODEL,
BRAND.COD_BRAND,
TRANSACTION_TYPE.COD_TTYPE 
INTO #TMP_COMPARE2
from #TMP_ANTECIP2
JOIN SOURCE_TRANSACTION ON SOURCE_TRANSACTION.CODE = #TMP_ANTECIP2.TYPE_TRAN
join TRANSACTION_TYPE ON TRANSACTION_TYPE.CODE = #TMP_ANTECIP2.TRANSACTION_TYPE
join EQUIPMENT_MODEL on EQUIPMENT_MODEL.CODIGO = #TMP_ANTECIP2.MODEL_POS
JOIN BRAND on BRAND.[NAME] = #TMP_ANTECIP2.BRAND
	and BRAND.COD_TTYPE = TRANSACTION_TYPE.COD_TTYPE


GO


SELECT #TMP_COMPARE2.* , 
[TRANSACTION_TITLES_COST].COD_TRAN_TITLE_COST,
[TRANSACTION_TITLES_COST].[PERCENTAGE],
(
select top 1 PLAN_TAX_AFFILIATOR.COD_PLAN_TAX_AFF from PLAN_TAX_AFFILIATOR
WHERE PLAN_TAX_AFFILIATOR.ACTIVE=1 
AND PLAN_TAX_AFFILIATOR.COD_AFFILIATOR = #TMP_COMPARE2.COD_AFFILIATOR
AND
#TMP_COMPARE2.PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
AND PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN=#TMP_COMPARE2.COD_SOURCE_TRAN
AND PLAN_TAX_AFFILIATOR.COD_MODEL = #TMP_COMPARE2.COD_MODEL
AND PLAN_TAX_AFFILIATOR.COD_BRAND = #TMP_COMPARE2.COD_BRAND
) AS COD_PLAN_TAX_AFF,
AFFILIATOR.[NAME] as AFF into #tmp_update_antecip
FROM [TRANSACTION_TITLES_COST]
JOIN #TMP_COMPARE2 ON #TMP_COMPARE2.COD_TITLE = [TRANSACTION_TITLES_COST].COD_TITLE
JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR  = #TMP_COMPARE2.COD_AFFILIATOR

go

SELECT 
#tmp_update_antecip.* ,
(
SELECT [PERCENTAGE] FROM PLAN_TAX_AFFILIATOR 
WHERE COD_PLAN_TAX_AFF= #tmp_update_antecip.COD_PLAN_TAX_AFF
) AS [MDR_AFF] INTO #TMP_LAST
FROM #tmp_update_antecip


UPDATE TRANSACTION_TITLES_COST SET [PERCENTAGE] = #TMP_LAST.[MDR_AFF]
FROM TRANSACTION_TITLES_COST
JOIN #TMP_LAST ON #TMP_LAST.COD_TRAN_TITLE_COST = TRANSACTION_TITLES_COST.COD_TRAN_TITLE_COST

GO
UPDATE REPORT_CONSOLIDATED_TRANS_SUB
SET MDR_AFFILIATOR = #TMP_LAST.[MDR_AFF]
FROM REPORT_CONSOLIDATED_TRANS_SUB 
JOIN #TMP_LAST ON #TMP_LAST.COD_TITLE = REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE

--SELECT * FROM [TRANSACTION] WHERE COD_TRAN=9765471
--SELECT * FROM TRANSACTION_TYPE 
go




SELECT 
  IIF([TRANSACTION].PLOTS = 1, dbo.FNC_CALC_LIQ_MDR(TRANSACTION_TITLES_COST.[PERCENTAGE] +    
  IIF((SELECT    
    COUNT(*)    
   FROM TRANSACTION_SERVICES    
   INNER JOIN ITEMS_SERVICES_AVAILABLE    
    ON TRANSACTION_SERVICES.COD_ITEM_SERVICE =    
    ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE    
   WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'    
   AND TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN    
   AND TRANSACTION_SERVICES.COD_EC = [TRANSACTION_TITLES].COD_EC  
   ) > 0,    
  TRANSACTION_TITLES_COST.TAX_PLANDZERO,    
  0), TRANSACTION_TITLES.AMOUNT),    
  dbo.FNC_CALC_LIQ_MDR(TRANSACTION_TITLES_COST.[PERCENTAGE], TRANSACTION_TITLES.AMOUNT)) AS LIQUID_MDR_AFF,
  TRANSACTION_TITLES.COD_TITLE
INTO #TEMP_MDR_AFF
FROM [TRANSACTION_TITLES] WITH(NOLOCK)
JOIN [TRANSACTION] 
WITH(NOLOCK)
ON [TRANSACTION].COD_TRAN = [TRANSACTION_TITLES].COD_TRAN
LEFT JOIN [TRANSACTION_TITLES_COST]     
WITH (NOLOCK)      
ON [TRANSACTION_TITLES].COD_TITLE = TRANSACTION_TITLES_COST.COD_TITLE 
LEFT JOIN AFFILIATOR ON AFFILIATOR.COD_AFFILIATOR = TRANSACTION_TITLES_COST.COD_AFFILIATOR
JOIN COMMERCIAL_ESTABLISHMENT ON COMMERCIAL_ESTABLISHMENT.COD_EC = TRANSACTION_TITLES.COD_EC
JOIN AFFILIATOR AFF ON AFF.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR
WHERE TRANSACTION_TITLES.COD_TITLE IN (SELECT COD_TITLE FROM #TMP_LAST)


GO

CREATE TABLE #DELETE
(
MDR_CURRENT_AFF DECIMAL(22,6),
COD_TITLE INT
)

DECLARE @CON INT;
SET @CON = 0;

WHILE @CON < 30
BEGIN 

INSERT INTO #DELETE
SELECT TOP 1000 LIQUID_MDR_AFF,COD_TITLE FROM #TEMP_MDR_AFF


UPDATE REPORT_CONSOLIDATED_TRANS_SUB SET MDR_CURRENT_AFF= #DELETE.MDR_CURRENT_AFF
FROM REPORT_CONSOLIDATED_TRANS_SUB
JOIN #DELETE ON #DELETE.COD_TITLE = REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE
WHERE REPORT_CONSOLIDATED_TRANS_SUB.COD_TITLE IN (SELECT COD_TITLE FROM #DELETE) 

DELETE FROM #TEMP_MDR_AFF WHERE COD_TITLE IN (SELECT COD_TITLE FROM #DELETE)

DELETE FROM #DELETE

SELECT @CON AS QTY;

SET @CON = @CON + 1;

END


DROP TABLE #DELETE
DROP TABLE #TEMP_MDR_AFF


DROP TABLE #TEMP_TITLE_MDR2
DROP TABLE #TMP_ANTECIP2
DROP TABLE #TMP_COMPARE2
DROP TABLE #tmp_update_antecip
DROP TABLE #TMP_LAST
 
-- SELECT * FROM PLAN_TAX_AFFILIATOR
-- WHERE 
-- ACTIVE=1 
-- AND COD_AFFILIATOR=275
-- AND COD_MODEL=2
-- AND COD_BRAND=2
-- AND COD_SOURCE_TRAN=2
-- AND 2 BETWEEN QTY_INI_PLOTS AND QTY_FINAL_PLOTS
-- GO
-- SELECT * FROM #TMP_ANTECIP2
-- WHERE COD_AFFILIATOR=275
-- AND MODEL_POS= 'S920'
-- AND BRAND = 'MASTERCARD'
-- AND TYPE_TRAN='PRESENCIAL'
-- AND TRANSACTION_TYPE='CREDITO'


--SELECT COD_TITLE
--INTO #TEMP_TITLE
--FROM #TEMP_TITLE_MDR
--WHERE MDR_AFFILIATOR = 0 OR MDR_AFFILIATOR IS NULL


 
--SELECT [TRANSACTION].CODE,[TRANSACTION].CREATED_AT, PLAN_TAX_AFFILIATOR.[PERCENTAGE],PLAN_TAX_AFFILIATOR.ANTICIPATION_PERCENTAGE, ASS_TAX_DEPART.PARCENTAGE, ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE, ASS_TAX_DEPART.COD_SOURCE_TRAN, PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN, PLAN_TAX_AFFILIATOR.COD_AFFILIATOR
--FROM TRANSACTION_TITLES_COST WITH (NOLOCK)
--JOIN TRANSACTION_TITLES WITH (NOLOCK)  ON TRANSACTION_TITLES.COD_TITLE = TRANSACTION_TITLES_COST.COD_TITLE
--JOIN [TRANSACTION] WITH (NOLOCK)  ON [TRANSACTION].COD_TRAN = TRANSACTION_TITLES.COD_TRAN
--JOIN ASS_DEPTO_EQUIP ON ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL = [TRANSACTION].COD_ASS_DEPTO_TERMINAL	
--JOIN EQUIPMENT ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP
--JOIN EQUIPMENT_MODEL ON EQUIPMENT_MODEL.COD_MODEL = EQUIPMENT.COD_MODEL
--join brand on BRAND.[NAME] = [TRANSACTION].BRAND
--	AND BRAND.COD_TTYPE = [TRANSACTION].COD_TTYPE
--LEFT JOIN PLAN_TAX_AFFILIATOR ON PLAN_TAX_AFFILIATOR.COD_AFFILIATOR = TRANSACTION_TITLES_COST.COD_AFFILIATOR
--AND PLAN_TAX_AFFILIATOR.COD_TTYPE = [TRANSACTION].COD_TTYPE
--AND  [TRANSACTION].PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
--AND [TRANSACTION].PLOTS BETWEEN PLAN_TAX_AFFILIATOR.QTY_INI_PLOTS AND PLAN_TAX_AFFILIATOR.QTY_FINAL_PLOTS
--AND PLAN_TAX_AFFILIATOR.COD_BRAND = brand.COD_BRAND
--AND (PLAN_TAX_AFFILIATOR.COD_MODEL = EQUIPMENT_MODEL.COD_MODEL OR PLAN_TAX_AFFILIATOR.COD_MODEL IS NULL)
--AND PLAN_TAX_AFFILIATOR.COD_SOURCE_TRAN <> [TRANSACTION].COD_SOURCE_TRAN
--AND PLAN_TAX_AFFILIATOR.ACTIVE= 1
-- AND [PLAN].COD_PLAN_CATEGORY <> 3
-- AND PLAN_TAX_AFFILIATOR.[PERCENTAGE] > 0

--JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
--JOIN ASS_TAX_DEPART ON ASS_TAX_DEPART.COD_ASS_TX_DEP = [TRANSACTION].COD_ASS_TX_DEP
-- --AND (TRANSACTION_TITLES_COST.[PERCENTAGE] = 0 OR TRANSACTION_TITLES_COST.[PERCENTAGE] IS NULL)
--WHERE
-- TRANSACTION_TITLES.COD_TITLE IN (SELECT * FROM #TEMP_TITLE)
-- AND CODIGO = 'A910'
 
--go
--select * from EQUIPMENT_MODEL
--go
--select * from PLAN_TAX_AFFILIATOR
--JOIN [PLAN] ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
--	AND [PLAN].COD_PLAN_CATEGORY <> 3 
--where PLAN_TAX_AFFILIATOR.active=1
--AND 
--PLAN_TAX_AFFILIATOR.COD_AFFILIATOR IN 
--(
--select DISTINCT COD_AFFILIATOR from VW_COMPANY_EC_AFF_BR_DEP_EQUIP
--WHERE [AFFILIATOR] LIKE '%3P%'
--)
--and COD_MODEL=8
--and COD_SOURCE_TRAN=2

--go

--SELECT * FROM AFFILIATOR
--WHERE [NAME] LIKE '%MAXX PAY - 3PTEC%'
--GO
--SELECT * FROM PLAN_TAX_AFFILIATOR
--WHERE ACTIVE=1
--AND COD_AFFILIATOR=275
--AND COD_SOURCE_TRAN=1

--go

--SELECT * FROM PLAN_TAX_AFFILIATOR WHERE COD_AFFILIATOR =275 and ACTIVE = 1 AND COD_MODEL = 8
 

--ST-2029