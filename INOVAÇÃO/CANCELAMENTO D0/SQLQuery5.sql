IF OBJECT_ID('SP_VERIFY_CANCEL_TRANSACTION') IS NOT NULL
DROP PROCEDURE SP_VERIFY_CANCEL_TRANSACTION
GO
CREATE PROCEDURE SP_VERIFY_CANCEL_TRANSACTION 
(
	@NSU INT = NULL,  
	@TRANSACTION_CODE VARCHAR(100) = NULL
)
AS
BEGIN
	DECLARE @ERROR_CODE VARCHAR(100) = NULL;
	DECLARE @COD_TRAN INT;
	
	IF @NSU IS NOT NULL  
	BEGIN
SELECT
	@COD_TRAN = [TRANSACTION].COD_TRAN
FROM [TRANSACTION] WITH (NOLOCK)
WHERE [TRANSACTION].COD_TRAN = @NSU
END
ELSE
BEGIN
SELECT
	@COD_TRAN = [TRANSACTION].COD_TRAN
FROM [TRANSACTION] WITH (NOLOCK)
WHERE [TRANSACTION].CODE = @TRANSACTION_CODE
END


SELECT

	@ERROR_CODE = (CASE
		WHEN SITUATION.NAME = 'CANCELED' THEN '703'
		WHEN (SELECT
					COUNT(*)
				FROM TRANSACTION_TITLES WITH (NOLOCK)
				INNER JOIN [TRANSACTION] TR WITH (NOLOCK)
					ON TR.COD_TRAN = TRANSACTION_TITLES.COD_TRAN
				LEFT JOIN FINANCE_CALENDAR
					ON FINANCE_CALENDAR.COD_FIN_CALENDAR = [TRANSACTION_TITLES].COD_FIN_CALENDAR
					AND FINANCE_CALENDAR.ACTIVE = 1
				WHERE TR.COD_TRAN = [TRANSACTION].COD_TRAN
				AND ISNULL(FINANCE_CALENDAR.COD_SITUATION, TRANSACTION_TITLES.COD_SITUATION) NOT IN (4, 20))
			> 0 THEN '704'
		ELSE NULL
	END)
FROM [TRANSACTION] WITH (NOLOCK)
JOIN SITUATION
	ON SITUATION.COD_SITUATION = [TRANSACTION].COD_SITUATION
WHERE [TRANSACTION].COD_TRAN = @NSU

IF @ERROR_CODE IS NOT NULL
THROW 60002, @ERROR_CODE, 1;
END;

GO