ALTER TABLE TRANSACTION_SERVICES ADD TAX_PLANDZERO DECIMAL (22,6)

GO

CREATE FUNCTION FNC_CALC_DZERO_NET_VALUE (@AMOUNT DECIMAL(22, 6),
@PLOTS INT,
@MDR DECIMAL(22, 6) = 0,
@ANTECIP_PERCENT DECIMAL(22, 6),
@DZERO_TAX DECIMAL(22, 6) = 0,
@COD_TTYPE INT)
RETURNS DECIMAL(22, 6)
AS
BEGIN

	DECLARE @VALUE DECIMAL(22, 6) = 0;
	--DECLARE @ANTECIP_PERCENT DECIMAL(22, 6) = 0;
	DECLARE @CONT INT = 0;
	DECLARE @VALUE_TOTAL DECIMAL(22, 6) = 0;
	DECLARE @PLOT_VALUE DECIMAL(22, 6);

	SET @PLOT_VALUE = (@AMOUNT / @PLOTS)


	WHILE @CONT < @PLOTS
	BEGIN

	IF @COD_TTYPE = 2
		SET @VALUE = dbo.FNC_CALC_LIQUID(@PLOT_VALUE, @MDR + @DZERO_TAX);
	ELSE
		SET @VALUE = dbo.FNC_CALC_LIQUID(@PLOT_VALUE, @MDR);

	IF (@ANTECIP_PERCENT IS NOT NULL)
	BEGIN
		SET @ANTECIP_PERCENT = dbo.[FNC_DZERO_ANT_VALUE](@ANTECIP_PERCENT + @DZERO_TAX, (@CONT + 1))
		SET @VALUE = dbo.FNC_CALC_LIQUID(@VALUE, @ANTECIP_PERCENT + @DZERO_TAX);
		SET @VALUE_TOTAL += @VALUE;

	END;
	SET @CONT = @CONT + 1;
	END;
	RETURN @VALUE_TOTAL

END


GO
CREATE FUNCTION [dbo].[FNC_DZERO_ANT_VALUE] (@TAX_ANTECIP DECIMAL(22, 6),
@PLOT INT)
RETURNS DECIMAL(22, 6)
AS
BEGIN
	DECLARE @VALUE DECIMAL(22, 6);

	SET @VALUE = ((@TAX_ANTECIP / 30) * ((@PLOT * 30)));
	RETURN @VALUE


END;  

GO

ALTER PROCEDURE [dbo].[SP_GEN_TITLES_TRANS]
/*----------------------------------------------------------------------------------------        
    PROJECT.......: TKPP        
------------------------------------------------------------------------------------------         
    AUTHOR                      VERSION     DATE            DESCRIPTION        
------------------------------------------------------------------------------------------        
    KENNEDY ALEF                V1          27/07/2018      CREATION        
    KENNEDY ALEF                V2          27/08/2018      MODIFY        
    FERNANDO HENRIQUE OLIVEIRA  V3          06/03/2019      MODIFY        
    LUCAS AGUIAR                V4          2019-09-11      MODIFY        
    LUCAS AGUIAR                V5          2019-09-30      WAITINGSPLIT        
    LUIZ AQUINO                 V6          2019-11-01      Retenção de agenda        
    Luiz Aquino                 V7          2020-06-26      ADD DZERO TAX (ET-895 PLANDZERO)  
------------------------------------------------------------------------------------------*/ (@COD_TRAN VARCHAR(200),
@TRAN_ID INT = NULL)
AS
	DECLARE @CONT INT;
	DECLARE @VALUE DECIMAL(22, 6);
	DECLARE @CODE BIGINT;
	DECLARE @PAYDAY DATETIME;
	DECLARE @PREVISION_PAY_DATE DATETIME
	DECLARE @PLOTS INT;
	DECLARE @AMOUNT DECIMAL(22, 6);
	DECLARE @CODASS_EQUIP INT;
	DECLARE @TAXINI DECIMAL(22, 6);
	DECLARE @TAXEFFETIVE DECIMAL(22, 6);
	DECLARE @RATE DECIMAL(22, 6);
	DECLARE @INTERVAL INT;
	DECLARE @TR_ID INT;
	DECLARE @TAX_ACQ DECIMAL(22, 6)
	DECLARE @TYPEPLAN INT
	DECLARE @INTERVALRECEIVE INT;
	DECLARE @RECEIVEDATE DATETIME;
	DECLARE @ANTICIPATION DECIMAL(22, 6);
	DECLARE @COD_AFFILIATOR INT;
	DECLARE @QTY_PLOTS INT;
	DECLARE @ANT_PERCENT DECIMAL(22, 6);
	DECLARE @COD_OPER_COST INT;
	DECLARE @OPER_VALUE DECIMAL(22, 6);
	DECLARE @PLAN INT;
	DECLARE @PERCENT DECIMAL(22, 6);
	DECLARE @COD_TTYPE INT;
	DECLARE @GEN_TITLES INT;
	DECLARE @RATE_PLAN_AFF DECIMAL(22, 6);
	DECLARE @ANTECIP_VALUE_AFF DECIMAL(22, 6);
	DECLARE @TITLE_SIT INT
	DECLARE @TEMP_TITLE_SIT INT
	DECLARE @SOURCE_TRAN INT
	DECLARE @BRAND_TRAN INT;
	DECLARE @COD_EC INT;
	DECLARE @COD_TX_EC INT;
	DECLARE @ANTECIP_PERCENT_EC DECIMAL(22, 6);
	DECLARE @TRANDATE DATETIME;
	DECLARE @LEDGER_RETENTION INT = 0;
	DECLARE @COD_CTRL INT = NULL;
	DECLARE @COD_AWAIT_SPLIT INT = NULL
	DECLARE @COD_AWAIT_PAY INT = NULL
	DECLARE @COD_EXTERNAL_PROCESSING INT = NULL
	DECLARE @HASPLANDZERO BIT = 0;
	DECLARE @PLANDZEROTAX DECIMAL(22, 6) = NULL
	DECLARE @PLANDZEROTAX_AFF DECIMAL(22, 6) = NULL
	DECLARE @PLANDZEROTODAY BIT = 0;
	DECLARE @CURRENTHOUR INT
	DECLARE @PlanDZeroHour INT = 0;

	BEGIN

		IF @TRAN_ID IS NULL
		BEGIN
			SELECT
				@PLOTS = [TRANSACTION].PLOTS
			   ,@AMOUNT = [TRANSACTION].AMOUNT
			   ,@CODASS_EQUIP = [TRANSACTION].COD_ASS_DEPTO_TERMINAL
			   ,@TAXEFFETIVE = ASS_TAX_DEPART.EFFECTIVE_PERCENTAGE
			   ,@TAXINI = ASS_TAX_DEPART.PARCENTAGE
			   ,@RATE = ASS_TAX_DEPART.RATE
			   ,@INTERVAL = ASS_TAX_DEPART.INTERVAL
			   ,@TR_ID = [TRANSACTION].COD_TRAN
			   ,@TAX_ACQ = ASS_TR_TYPE_COMP.TAX_VALUE
			   ,@TYPEPLAN = DEPARTMENTS_BRANCH.COD_T_PLAN
			   ,@INTERVALRECEIVE = ASS_TR_TYPE_COMP.INTERVAL
			   ,@ANTICIPATION = ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE
			   ,@COD_AFFILIATOR = [TRANSACTION].COD_AFFILIATOR
			   ,@QTY_PLOTS = [TRANSACTION].PLOTS
			   ,@COD_TTYPE = [TRANSACTION].COD_TTYPE
			   ,@GEN_TITLES = [BRAND].[GEN_TITLES]
			   ,@ANT_PERCENT = ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE
			   ,@SOURCE_TRAN = [TRANSACTION].COD_SOURCE_TRAN
			   ,@BRAND_TRAN = [BRAND].COD_BRAND
			   ,@COD_EC = BRANCH_EC.COD_EC
			   ,@COD_TX_EC = [TRANSACTION].COD_ASS_TX_DEP
			   ,@TRANDATE = [TRANSACTION].BRAZILIAN_DATE
			FROM [TRANSACTION] WITH (NOLOCK)
			JOIN ASS_TAX_DEPART
				ON ASS_TAX_DEPART.COD_ASS_TX_DEP = [TRANSACTION].COD_ASS_TX_DEP
			JOIN DEPARTMENTS_BRANCH
				ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = ASS_TAX_DEPART.COD_DEPTO_BRANCH
			JOIN BRANCH_EC
				ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH
			JOIN ASS_TR_TYPE_COMP
				ON ASS_TR_TYPE_COMP.COD_ASS_TR_COMP = [TRANSACTION].COD_ASS_TR_COMP
			JOIN [PLAN]
				ON [PLAN].COD_PLAN = ASS_TAX_DEPART.COD_PLAN
			JOIN [BRAND]
				ON BRAND.[NAME] = [TRANSACTION].BRAND
					AND [BRAND].COD_TTYPE = [TRANSACTION].COD_TTYPE
			WHERE [TRANSACTION].CODE = @COD_TRAN;
		END;
		ELSE
		BEGIN
			SELECT
				@PLOTS = [TRANSACTION].PLOTS
			   ,@AMOUNT = [TRANSACTION].AMOUNT
			   ,@CODASS_EQUIP = [TRANSACTION].COD_ASS_DEPTO_TERMINAL
			   ,@TAXEFFETIVE = ASS_TAX_DEPART.EFFECTIVE_PERCENTAGE
			   ,@TAXINI = ASS_TAX_DEPART.PARCENTAGE
			   ,@RATE = ASS_TAX_DEPART.RATE
			   ,@INTERVAL = ASS_TAX_DEPART.INTERVAL
			   ,@TR_ID = [TRANSACTION].COD_TRAN
			   ,@TAX_ACQ = ASS_TR_TYPE_COMP.TAX_VALUE
			   ,@TYPEPLAN = [PLAN].COD_T_PLAN
			   ,@INTERVALRECEIVE = ASS_TR_TYPE_COMP.INTERVAL
			   ,@ANTICIPATION = ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE
			   ,@COD_AFFILIATOR = [TRANSACTION].COD_AFFILIATOR
			   ,@QTY_PLOTS = [TRANSACTION].PLOTS
			   ,@COD_TTYPE = [TRANSACTION].COD_TTYPE
			   ,@GEN_TITLES = [BRAND].[GEN_TITLES]
			   ,@ANT_PERCENT = ASS_TAX_DEPART.ANTICIPATION_PERCENTAGE
			   ,@SOURCE_TRAN = [TRANSACTION].COD_SOURCE_TRAN
			   ,@BRAND_TRAN = [BRAND].COD_BRAND
			   ,@COD_EC = BRANCH_EC.COD_EC
			   ,@COD_TX_EC = [TRANSACTION].COD_ASS_TX_DEP
			   ,@TRANDATE = [TRANSACTION].BRAZILIAN_DATE
			FROM [TRANSACTION] WITH (NOLOCK)
			INNER JOIN ASS_TAX_DEPART
				ON ASS_TAX_DEPART.COD_ASS_TX_DEP = [TRANSACTION].COD_ASS_TX_DEP
			INNER JOIN DEPARTMENTS_BRANCH
				ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = ASS_TAX_DEPART.COD_DEPTO_BRANCH
			INNER JOIN BRANCH_EC
				ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH
			INNER JOIN ASS_TR_TYPE_COMP
				ON ASS_TR_TYPE_COMP.COD_ASS_TR_COMP = [TRANSACTION].COD_ASS_TR_COMP
			INNER JOIN [PLAN]
				ON [PLAN].COD_PLAN = ASS_TAX_DEPART.COD_PLAN
			INNER JOIN [BRAND]
				ON BRAND.[NAME] = [TRANSACTION].BRAND
					AND [BRAND].COD_TTYPE = [TRANSACTION].COD_TTYPE
			WHERE [TRANSACTION].COD_TRAN = @TRAN_ID;
		END;

		SELECT
			@COD_AWAIT_SPLIT = COD_SITUATION
		FROM SITUATION
		WHERE [NAME] = 'WAITING FOR SPLIT OF FINANCE SCHEDULE'
		SELECT
			@COD_AWAIT_PAY = COD_SITUATION
		FROM SITUATION
		WHERE [NAME] = 'AWAITING PAYMENT'
		SELECT
			@COD_EXTERNAL_PROCESSING = COD_SITUATION
		FROM SITUATION
		WHERE [NAME] = 'LIQUIDACAO PROCESSADORA'

		SELECT
			@LEDGER_RETENTION = COUNT(*)
		FROM SERVICES_AVAILABLE s
		JOIN ITEMS_SERVICES_AVAILABLE item
			ON item.COD_ITEM_SERVICE = s.COD_ITEM_SERVICE
		WHERE s.COD_EC = @COD_EC
		AND item.CODE = '8'
		AND s.ACTIVE = 1

		SELECT
			@HASPLANDZERO = 1
		   ,@PLANDZEROTAX = CAST(JSON_VALUE(CONFIG_JSON, IIF(@COD_TTYPE = 1, '$.credit', '$.debit')) AS DECIMAL(22, 6))
		FROM SERVICES_AVAILABLE SA
		JOIN ITEMS_SERVICES_AVAILABLE item
			ON item.NAME = 'PlanDZero'
				AND item.COD_ITEM_SERVICE = SA.COD_ITEM_SERVICE
		WHERE SA.COD_EC = @COD_EC
		AND SA.ACTIVE = 1

		IF @HASPLANDZERO = 1
			AND @COD_AFFILIATOR IS NOT NULL
		BEGIN
			SELECT
				@PLANDZEROTAX_AFF = CAST(JSON_VALUE(CONFIG_JSON, IIF(@COD_TTYPE = 1, '$.credit', '$.debit')) AS DECIMAL(22, 6))
			FROM SERVICES_AVAILABLE SA
			JOIN ITEMS_SERVICES_AVAILABLE item
				ON item.NAME = 'PlanDZero'
					AND item.COD_ITEM_SERVICE = SA.COD_ITEM_SERVICE
			WHERE SA.COD_AFFILIATOR = @COD_AFFILIATOR
			AND SA.COD_EC IS NULL
			AND SA.ACTIVE = 1
		END

		SET @CURRENTHOUR = DATEPART(HOUR, @TRANDATE)
		IF @HASPLANDZERO = 1
			AND EXISTS (SELECT
					COD_SCH_PLANDZERO
				FROM PlanDZeroSchedule
				WHERE WindowMaxHour > @CURRENTHOUR)
		BEGIN
			SET @PLANDZEROTODAY = 1;
			SET @PlanDZeroHour = (SELECT TOP 1
					WindowMaxHour
				FROM PlanDZeroSchedule
				WHERE WindowMaxHour > @CURRENTHOUR
				ORDER BY WindowMaxHour);
		END

		IF (@HASPLANDZERO = 1
			AND @PLANDZEROTODAY = 0
			AND @INTERVAL = 1)
			OR @TYPEPLAN = 1
		BEGIN
			SET @HASPLANDZERO = 0;
			SET @PLANDZEROTAX = NULL;
			SET @PLANDZEROTAX_AFF = NULL;
		END

		IF @GEN_TITLES = 1
			AND @LEDGER_RETENTION = 0
			SET @TITLE_SIT = @COD_AWAIT_PAY;
		ELSE
		IF @GEN_TITLES <> 1
			AND @LEDGER_RETENTION = 0
			SET @TITLE_SIT = @COD_EXTERNAL_PROCESSING;
		ELSE
			SET @TITLE_SIT = @COD_AWAIT_SPLIT;

		SET @TEMP_TITLE_SIT = @TITLE_SIT

		CREATE TABLE #retentionRules (
			COD_RET_CTRL INT NOT NULL
		   ,FROM_DATE DATETIME NOT NULL
		   ,UNTIL_DATE DATETIME NOT NULL
		)

		IF @TITLE_SIT = @COD_AWAIT_SPLIT
		BEGIN
			INSERT INTO #retentionRules (COD_RET_CTRL, FROM_DATE, UNTIL_DATE)
				SELECT
					ctrl.COD_RET_CTRL
				   ,ctrl.FROM_DATE
				   ,ctrl.UNTIL_DATE
				FROM LEDGER_RETENTION_CONTROL ctrl
				WHERE ctrl.COD_EC = @COD_EC
				AND (ctrl.UNTIL_DATE IS NULL
				OR ctrl.UNTIL_DATE >= CAST(GETDATE() AS DATE))
		END

		SET @ANTECIP_PERCENT_EC = @ANT_PERCENT

		IF @COD_AFFILIATOR IS NOT NULL
		BEGIN
			SELECT
				@COD_OPER_COST = OP_COST.COD_OPER_COST_AFF
			   ,@OPER_VALUE = OP_COST.PERCENTAGE_COST
			   ,@PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN_TAX_AFF
			   ,@PERCENT = PLAN_TAX_AFFILIATOR.[PERCENTAGE]
			   ,@RATE_PLAN_AFF = PLAN_TAX_AFFILIATOR.RATE
			   ,@ANTECIP_VALUE_AFF = PLAN_TAX_AFFILIATOR.ANTICIPATION_PERCENTAGE
			FROM AFFILIATOR
			INNER JOIN OPERATION_COST_AFFILIATOR OP_COST
				ON OP_COST.COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR
			INNER JOIN PROGRESSIVE_COST_AFFILIATOR PROG_COST
				ON PROG_COST.COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR
			INNER JOIN PLAN_TAX_AFFILIATOR
				ON PLAN_TAX_AFFILIATOR.COD_AFFILIATOR = AFFILIATOR.COD_AFFILIATOR
			INNER JOIN [PLAN]
				ON [PLAN].COD_PLAN = PLAN_TAX_AFFILIATOR.COD_PLAN
					AND [PLAN].COD_PLAN_CATEGORY <> 3
			WHERE [PLAN_TAX_AFFILIATOR].COD_TTYPE = @COD_TTYPE
			AND [PLAN_TAX_AFFILIATOR].QTY_INI_PLOTS <= @QTY_PLOTS
			AND [PLAN_TAX_AFFILIATOR].QTY_FINAL_PLOTS >= @QTY_PLOTS
			AND [PLAN_TAX_AFFILIATOR].ACTIVE = 1
			AND [OP_COST].ACTIVE = 1
			AND PROG_COST.ACTIVE = 1
			AND AFFILIATOR.COD_AFFILIATOR = @COD_AFFILIATOR
			AND AFFILIATOR.ACTIVE = 1
			AND ([PLAN_TAX_AFFILIATOR].COD_BRAND = @BRAND_TRAN
			OR PLAN_TAX_AFFILIATOR.COD_BRAND IS NULL)
			AND [PLAN_TAX_AFFILIATOR].COD_SOURCE_TRAN = @SOURCE_TRAN
		END;

		IF @TYPEPLAN = 1
		BEGIN
			SET @CONT = 0;
			SET @VALUE = (@AMOUNT / @PLOTS);

			SET @PAYDAY = CAST(@TRANDATE AS DATETIME);
			SET @RECEIVEDATE = CAST(@TRANDATE AS DATETIME);

			SET @INTERVAL = IIF(@HASPLANDZERO = 0, @INTERVAL, IIF(@PLANDZEROTODAY = 1, 0, 1))

			IF @HASPLANDZERO = 1
				SET @PAYDAY = IIF(@PLANDZEROTODAY = 1, @PAYDAY, DATEADD(DAY, 1, @PAYDAY))

			WHILE @CONT < @PLOTS
			BEGIN
			SELECT
				@CODE = NEXT VALUE FOR SEQ_TRANSACTION_TITLE;

			SET @PAYDAY = IIF(@HASPLANDZERO = 0, DATEADD(DAY, @INTERVAL, @PAYDAY), @PAYDAY);
			SET @PREVISION_PAY_DATE = [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY)
			SET @RECEIVEDATE = DATEADD(DAY, @INTERVALRECEIVE, @RECEIVEDATE);

			IF @TITLE_SIT != @TEMP_TITLE_SIT
				SET @TITLE_SIT = @TEMP_TITLE_SIT;

			SET @COD_CTRL = NULL

			IF @TITLE_SIT = @COD_AWAIT_SPLIT
			BEGIN
				SELECT
					@COD_CTRL = COD_RET_CTRL
				FROM #retentionRules r
				WHERE @PREVISION_PAY_DATE BETWEEN r.FROM_DATE AND r.UNTIL_DATE
				IF @COD_CTRL IS NULL
					SET @TITLE_SIT = @COD_AWAIT_PAY
			END

			IF @RECEIVEDATE <= @PAYDAY
				SET @ANTICIPATION = 0;

			IF @HASPLANDZERO = 1
				AND @COD_TTYPE != 1
				SET @ANTICIPATION = 0

			IF @HASPLANDZERO = 1
				AND @PLANDZEROTODAY = 1
				SET @PREVISION_PAY_DATE = DATEADD(HOUR, @PlanDZeroHour, @PREVISION_PAY_DATE)

			INSERT INTO [TRANSACTION_TITLES] (CODE,
			COD_TRAN,
			PLOT,
			AMOUNT,
			COD_ASS_DEPTO_TERMINAL,
			TAX_INITIAL,
			ANTICIP_PERCENT,
			RATE,
			PREVISION_PAY_DATE,
			COD_SITUATION,
			ACQ_TAX,
			INTERVAL_INITIAL,
			PREVISION_RECEIVE_DATE,
			COD_SITUATION_RECEIVE,
			COD_TYPE_TRAN_TITLE,
			COD_EC,
			COD_ASS_TX_DEP,
			QTY_DAYS_ANTECIP,
			QTY_BUSINESS_DAY,
			COD_RET_CTRL,
			TAX_PLANDZERO)
				VALUES (CONCAT(@CODE, @COD_EC), @TR_ID, (@CONT + 1), @VALUE, @CODASS_EQUIP, @TAXINI, @ANTICIPATION, @RATE, @PREVISION_PAY_DATE, @TITLE_SIT, @TAX_ACQ, @INTERVAL, [dbo].[FN_NEXT_BUSINESS_DAY](@RECEIVEDATE), @TITLE_SIT, 1, @COD_EC, @COD_TX_EC, (((@CONT + 1) * 30) - DATEDIFF(DAY, (CAST(@TRANDATE AS DATE)), @PAYDAY)), (((@CONT + 1) * 30) - DATEDIFF(DAY, (CAST(@TRANDATE AS DATE)), [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY))), @COD_CTRL, @PLANDZEROTAX);

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT REGISTER [TRANSACTION_TITLES] ', 1;

			IF @HASPLANDZERO = 1
				INSERT INTO TRANSACTION_SERVICES (CREATED_AT, COD_ITEM_SERVICE, COD_TRAN, TAX_PLANDZERO)
					VALUES (current_timestamp, 17, @COD_TRAN, @PLANDZEROTAX);

			--  AFFILIATOR INSERT COST (RECEIVE)        
			IF @COD_AFFILIATOR IS NOT NULL
			BEGIN
				IF @RECEIVEDATE <= @PAYDAY
					SET @ANTECIP_VALUE_AFF = 0;

				IF @HASPLANDZERO = 1
					SET @ANTECIP_VALUE_AFF = 0

				INSERT INTO TRANSACTION_TITLES_COST (COD_AFFILIATOR,
				COD_TITLE,
				COD_OPER_COST_AFF,
				OPER_VALUE,
				COD_PLAN_TAX_AFF,
				[PERCENTAGE],
				PREVISION_PAY_DATE,
				COD_SITUATION,
				RATE_PLAN,
				ANTICIP_PERCENT,
				TAX_PLANDZERO)
					VALUES (@COD_AFFILIATOR, SCOPE_IDENTITY(), @COD_OPER_COST, @OPER_VALUE, @PLAN, @PERCENT, [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY), @COD_AWAIT_PAY, @RATE_PLAN_AFF, @ANTECIP_VALUE_AFF, @PLANDZEROTAX_AFF)
			END;

			SET @CONT = @CONT + 1;
			END;
		END;
		ELSE
		BEGIN
			SET @CONT = 0;
			SET @VALUE = (@AMOUNT / @PLOTS);
			SET @PAYDAY = CAST(@TRANDATE AS DATETIME);
			SET @RECEIVEDATE = CAST(@TRANDATE AS DATETIME);
			SET @PAYDAY = IIF(@HASPLANDZERO = 0, DATEADD(DAY, @INTERVAL, @PAYDAY), IIF(@PLANDZEROTODAY = 1, @PAYDAY, DATEADD(DAY, 1, @PAYDAY)));

			SET @INTERVAL = IIF(@HASPLANDZERO = 0, @INTERVAL, IIF(@PLANDZEROTODAY = 1, 0, 1))

			IF @HASPLANDZERO = 1
				AND @COD_TTYPE != 1
				SET @ANTECIP_PERCENT_EC = 0

			SET @PREVISION_PAY_DATE = [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY)

			IF @HASPLANDZERO = 1
				AND @PLANDZEROTODAY = 1
				SET @PREVISION_PAY_DATE = DATEADD(HOUR, @PlanDZeroHour, @PREVISION_PAY_DATE)

			IF @TITLE_SIT != @TEMP_TITLE_SIT
				SET @TITLE_SIT = @TEMP_TITLE_SIT;

			SET @COD_CTRL = NULL

			IF @TITLE_SIT = @COD_AWAIT_SPLIT
			BEGIN
				SELECT
					@COD_CTRL = COD_RET_CTRL
				FROM #retentionRules r
				WHERE @PREVISION_PAY_DATE BETWEEN r.FROM_DATE AND r.UNTIL_DATE

				IF @COD_CTRL IS NULL
					SET @TITLE_SIT = @COD_AWAIT_PAY
			END

			WHILE @CONT < @PLOTS
			BEGIN
			SELECT
				@CODE = NEXT VALUE FOR SEQ_TRANSACTION_TITLE;

			SET @RECEIVEDATE = DATEADD(DAY, @INTERVALRECEIVE, @RECEIVEDATE);

			IF @RECEIVEDATE <= @PAYDAY
				SET @ANT_PERCENT = 0;
			ELSE
				SET @ANT_PERCENT = @ANTECIP_PERCENT_EC;

			INSERT INTO [TRANSACTION_TITLES] (CODE,
			COD_TRAN,
			PLOT,
			AMOUNT,
			COD_ASS_DEPTO_TERMINAL,
			TAX_INITIAL,
			RATE,
			PREVISION_PAY_DATE,
			COD_SITUATION,
			ACQ_TAX,
			INTERVAL_INITIAL,
			PREVISION_RECEIVE_DATE,
			COD_SITUATION_RECEIVE,
			COD_TYPE_TRAN_TITLE,
			ANTICIP_PERCENT,
			COD_EC,
			COD_ASS_TX_DEP,
			QTY_DAYS_ANTECIP,
			QTY_BUSINESS_DAY,
			COD_RET_CTRL,
			TAX_PLANDZERO)
				VALUES (CONCAT(@CODE, @COD_EC), @TR_ID, (@CONT + 1), @VALUE, @CODASS_EQUIP, @TAXINI, @RATE, @PREVISION_PAY_DATE, @TITLE_SIT, @TAX_ACQ, @INTERVAL, [dbo].[FN_NEXT_BUSINESS_DAY](@RECEIVEDATE), @TITLE_SIT, 1, @ANT_PERCENT, @COD_EC, @COD_TX_EC, (((@CONT + 1) * 30) - DATEDIFF(DAY, (CAST(@TRANDATE AS DATE)), @PAYDAY)), (((@CONT + 1) * 30) - DATEDIFF(DAY, (CAST(@TRANDATE AS DATE)), [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY))), @COD_CTRL, @PLANDZEROTAX);

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT REGISTER [TRANSACTION_TITLES] ', 1;

			IF @COD_AFFILIATOR IS NOT NULL
			BEGIN
				IF @RECEIVEDATE <= @PAYDAY
					SET @ANTECIP_VALUE_AFF = 0;

				IF @HASPLANDZERO = 1
					AND @COD_TTYPE != 1
					SET @ANTECIP_VALUE_AFF = 0

				INSERT INTO TRANSACTION_TITLES_COST (COD_AFFILIATOR,
				COD_TITLE,
				COD_OPER_COST_AFF,
				OPER_VALUE,
				COD_PLAN_TAX_AFF,
				[PERCENTAGE],
				PREVISION_PAY_DATE,
				COD_SITUATION,
				RATE_PLAN,
				ANTICIP_PERCENT,
				TAX_PLANDZERO)
					VALUES (@COD_AFFILIATOR, SCOPE_IDENTITY(), @COD_OPER_COST, @OPER_VALUE, @PLAN, @PERCENT, [dbo].[FN_NEXT_BUSINESS_DAY](@PAYDAY), @COD_AWAIT_PAY, @RATE_PLAN_AFF, @ANTECIP_VALUE_AFF, @PLANDZEROTAX_AFF)
			END;

			SET @CONT = @CONT + 1;
			END;
		END;
	END;
	
	GO
	
	
	EXEC [SP_VALIDATE_TRANSACTION] @TERMINALID = 28863
							  ,@TYPETRANSACTION = 'CREDIT'
							  ,@AMOUNT = 300
							  ,@QTY_PLOTS = 6
							  ,@PAN = '64***6565'
							  ,@BRAND = 'MASTERCARD'
							  ,@TRCODE = '1593107910104525600003'
							  ,@TERMINALDATE = NULL
							  ,@CODPROD_ACQ = 3
							  ,@TYPE = 'TRANSACTION'
							  ,@COD_BRANCH = 10
							  ,@CODE_SPLIT = NULL
							  ,@COD_EC = 16268
							  ,@HOLDER_NAME = 'KENNEDY ALEF DE OLIVEIRA'
							  ,@HOLDER_DOC = NULL
							  ,@LOGICAL_NUMBER = NULL
							  ,@COD_TRAN_PROD = NULL
							  ,@COD_EC_PRD = NULL

SELECT
	*
FROM PRODUCTS_ACQUIRER pa

GO


EXEC SP_UP_TRANSACTION @CODE_TRAN = '1593107910104525600003'
					  ,@SITUATION = 'APPROVED'
					  ,@DESCRIPTION = '100-APROVADA'
					  ,@CURRENCY = NULL
					  ,@CODE_ERROR = NULL
					  ,@TRAN_ID = 4798388
					  ,@LOGICAL_NUMBER_ACQ = NULL
					  ,@CARD_HOLDER_NAME = ''
					  ,@COD_USER = NULL
GO
EXEC SP_UP_TRANSACTION @CODE_TRAN = '1593107910104525600003'
					  ,@SITUATION = 'CONFIRMED'
					  ,@DESCRIPTION = '200-CONFIRMADA'
					  ,@CURRENCY = NULL
					  ,@CODE_ERROR = NULL
					  ,@TRAN_ID = 4798388
					  ,@LOGICAL_NUMBER_ACQ = NULL
					  ,@CARD_HOLDER_NAME = ''
					  ,@COD_USER = NULL
GO



EXEC SP_GEN_TITLES_TRANS '1593107910104525600003'
						,4798388

DECLARE @TP CODE_TYPE;

INSERT INTO @TP (CODE)
	SELECT
		be.COD_EC
	FROM COMMERCIAL_ESTABLISHMENT ce
	INNER JOIN BRANCH_EC be
		ON ce.COD_EC = be.COD_EC
	INNER JOIN DEPARTMENTS_BRANCH db
		ON be.COD_BRANCH = db.COD_BRANCH
	WHERE ce.NAME LIKE '%ET895%'

EXEC SP_GEN_FINANCE_CALENDAR @TP

GO

EXEC SP_REG_REPORT_TRANSACTIONS_EXP
EXEC SP_REG_REPORT_TRANSACTIONS_PRCS
EXEC SP_REG_REPORT_CONSOLIDATED_TRANS_SUB

SELECT * FROM DATA_TID_AVAILABLE_EC dtae WHERE dtae.COD_AC
	
	