ALTER VIEW [dbo].[VW_REPORT_FULL_CASH_FLOW]
/*----------------------------------------------------------------------------------------                          
View Name: [VW_REPORT_FULL_CASH_FLOW]                          
Project.......: TKPP                          
------------------------------------------------------------------------------------------                          
Author                          VERSION        Date                        Description                          
-----------------------------------------------------------------------------------------                           
Caike Uchôa                       V1         30/03/2020            mdr afiliador-pela parcela           
Caike Uchôa                       V2         30/04/2020               add colunas produto ec    
Caike Uchôa                       V3         03/08/2020                   add QTY_DAYS_ANTECIP  
-----------------------------------------------------------------------------------------*/
AS
WITH CTE
AS
(SELECT --TOP(1000)                                       
		TRANSACTION_TITLES.TAX_INITIAL
	   ,TRANSACTION_TITLES.ANTICIP_PERCENT AS ANTECIP_EC
	   ,COALESCE(AFFILIATOR.[NAME], 'CELER') AS AFFILIATOR
	   ,[TRANSACTION_TYPE].CODE AS TRAN_TYPE
	   ,TRANSACTION_TITLES.PLOT
	   ,CAST([dbo].[FN_FUS_UTF]([TRANSACTION].CREATED_AT) AS DATETIME) AS TRANSACTION_DATE
	   ,COMMERCIAL_ESTABLISHMENT.[NAME] AS MERSHANT
	   ,[TRANSACTION_TITLES].ACQ_TAX
	   ,[TRANSACTION_TITLES].PREVISION_PAY_DATE
	   ,[TRANSACTION_TITLES].PREVISION_RECEIVE_DATE
	   ,[TRANSACTION_TITLES].AMOUNT
	   ,[TRANSACTION].AMOUNT AS TRANSACTION_AMOUNT
	   ,[TRANSACTION].CODE AS NSU
	   ,[TRANSACTION].BRAND AS BRAND
	   ,ACQUIRER.[NAME] AS ACQUIRER
	   ,(CASE
			WHEN TRANSACTION_TITLES.PLOT = 1 THEN TRANSACTION_TITLES.RATE
			ELSE 0
		END) AS RATE
	   ,dbo.FNC_CALC_LIQUID(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.ACQ_TAX) AS LIQUID_SUB
	   ,COALESCE([TRANSACTION_TITLES_COST].ANTICIP_PERCENT, 0) AS ANTECIP_AFF
	   ,COALESCE([TRANSACTION_TITLES_COST].[PERCENTAGE], 0) AS MDR_AFF
	   ,dbo.[FNC_ANT_VALUE_LIQ_DAYS](
		TRANSACTION_TITLES.AMOUNT,
		TRANSACTION_TITLES.TAX_INITIAL,
		TRANSACTION_TITLES.PLOT,
		TRANSACTION_TITLES.ANTICIP_PERCENT,
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)) AS EC
	   ,0 AS '0'
	   ,(dbo.[FNC_ANT_VALUE_LIQ_DAYS]
		(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.TAX_INITIAL, TRANSACTION_TITLES.PLOT, TRANSACTION_TITLES.ANTICIP_PERCENT, (CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)
		) - (CASE
			WHEN TRANSACTION_TITLES.PLOT = 1 THEN TRANSACTION_TITLES.RATE
			ELSE 0
		END)) AS EC_TARIFF
	   ,[TRANSACTION].PLOTS AS TOTAL_PLOTS
	   ,dbo.[FNC_ANT_VALUE_LIQ_DAYS](
		TRANSACTION_TITLES.AMOUNT,
		COALESCE([TRANSACTION_TITLES_COST].[PERCENTAGE], TRANSACTION_TITLES.TAX_INITIAL),
		TRANSACTION_TITLES.PLOT,
		COALESCE([TRANSACTION_TITLES_COST].ANTICIP_PERCENT, TRANSACTION_TITLES.ANTICIP_PERCENT),
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)) AS AFF_DISCOUNT
	   ,dbo.[FNC_ANT_VALUE_LIQ_DAYS](
		(TRANSACTION_TITLES.AMOUNT),
		COALESCE([TRANSACTION_TITLES_COST].[PERCENTAGE],
		TRANSACTION_TITLES.TAX_INITIAL),
		TRANSACTION_TITLES.PLOT,
		COALESCE([TRANSACTION_TITLES_COST].ANTICIP_PERCENT,
		TRANSACTION_TITLES.ANTICIP_PERCENT)
		, (CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END
		)) AS AFF_DISCOUNT_TARIFF
	   ,(
		dbo.[FNC_ANT_VALUE_LIQ_DAYS]
		(
		TRANSACTION_TITLES.AMOUNT,
		COALESCE([TRANSACTION_TITLES_COST].[PERCENTAGE],
		TRANSACTION_TITLES.TAX_INITIAL),
		TRANSACTION_TITLES.PLOT,
		[TRANSACTION_TITLES_COST].ANTICIP_PERCENT,
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)
		)
		-
		dbo.[FNC_ANT_VALUE_LIQ_DAYS](
		TRANSACTION_TITLES.AMOUNT,
		TRANSACTION_TITLES.TAX_INITIAL,
		TRANSACTION_TITLES.PLOT,
		TRANSACTION_TITLES.ANTICIP_PERCENT,
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END))
		) AS AFF
	   ,((
		dbo.[FNC_ANT_VALUE_LIQ_DAYS]
		((TRANSACTION_TITLES.AMOUNT),
		COALESCE([TRANSACTION_TITLES_COST].[PERCENTAGE],
		TRANSACTION_TITLES.TAX_INITIAL),
		TRANSACTION_TITLES.PLOT,
		COALESCE([TRANSACTION_TITLES_COST].ANTICIP_PERCENT, TRANSACTION_TITLES.ANTICIP_PERCENT),
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END
		))
		-
		dbo.[FNC_ANT_VALUE_LIQ_DAYS](
		(TRANSACTION_TITLES.AMOUNT),
		TRANSACTION_TITLES.TAX_INITIAL,
		TRANSACTION_TITLES.PLOT,
		TRANSACTION_TITLES.ANTICIP_PERCENT,
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END))
		)
		+ (CASE
			WHEN TRANSACTION_TITLES.PLOT = 1 THEN TRANSACTION_TITLES.RATE
			ELSE 0
		END)
		) AS AFF_TARIFF
	   ,[TRANSACTION].COD_ASS_TR_COMP
	   ,TRANSACTION_TITLES.COD_TITLE
	   ,CE_DESTINY.COD_EC
	   ,COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR
	   ,BRANCH_EC.COD_BRANCH
	   ,DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH
	   ,[TRANSACTION].PAN
	   ,COMMERCIAL_ESTABLISHMENT.CPF_CNPJ AS 'CPF_CNPJ_ORIGINATOR'
	   ,CE_DESTINY.[NAME] AS 'EC_NAME_DESTINY'
	   ,CE_DESTINY.CPF_CNPJ AS 'CPF_CNPJ_DESTINY'
	   ,AFFILIATOR.CPF_CNPJ AS 'CPF_AFF'
	   ,(SELECT
				EQUIPMENT.SERIAL
			FROM ASS_DEPTO_EQUIP
			INNER JOIN EQUIPMENT
				ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP
			WHERE ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL = [TRANSACTION].COD_ASS_DEPTO_TERMINAL)
		AS SERIAL
	   ,[TRANSACTION_DATA_EXT].[VALUE] AS 'EXTERNAL_NSU'
	   ,[TRANSACTION].CODE
	   ,[TRANSACTION].COD_TRAN
	   ,[COMPANY].COD_COMP
	   ,[REPORT_CONSOLIDATED_TRANS_SUB].COD_TRAN AS REP_COD_TRAN
	   ,[TRANSACTION].COD_SITUATION
	   ,dbo.FNC_CALC_LIQ_MDR(TRANSACTION_TITLES.TAX_INITIAL, [TRANSACTION_TITLES].AMOUNT) AS LIQUID_MDR_EC
	   ,dbo.FNC_CALC_LIQ_ANTICIP_DAYS
		(
		COALESCE(TRANSACTION_TITLES.ANTICIP_PERCENT, 0),
		[TRANSACTION_TITLES].PLOT,
		dbo.FNC_CALC_LIQUID([TRANSACTION_TITLES].AMOUNT, [TRANSACTION_TITLES].TAX_INITIAL),
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)
		) AS ANTECIP_DISCOUNT_EC
	   ,CASE
			WHEN [TRANSACTION].PLOTS = 1 THEN dbo.FNC_CALC_LIQ_MDR(TRANSACTION_TITLES_COST.[PERCENTAGE], [TRANSACTION].AMOUNT)
			ELSE dbo.FNC_CALC_LIQ_MDR(TRANSACTION_TITLES_COST.[PERCENTAGE], [TRANSACTION].AMOUNT / [TRANSACTION].PLOTS)
		END AS LIQUID_MDR_AFF
	   ,dbo.FNC_CALC_LIQ_ANTICIP_DAYS
		(
		COALESCE(TRANSACTION_TITLES_COST.ANTICIP_PERCENT, 0),
		[TRANSACTION_TITLES].PLOT,
		dbo.FNC_CALC_LIQUID([TRANSACTION_TITLES].AMOUNT,
		[TRANSACTION_TITLES_COST].[PERCENTAGE]),
		(CASE
			WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY, TRANSACTION_TITLES.PREVISION_PAY_DATE, TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)

			ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
		END)
		) AS ANTECIP_DISCOUNT_AFF
	   ,CASE
			WHEN (SELECT
						COUNT(*)
					FROM TRANSACTION_SERVICES WITH (NOLOCK)
					WHERE TRANSACTION_SERVICES.COD_TRAN = [TRANSACTION].COD_TRAN
					AND TRANSACTION_SERVICES.COD_ITEM_SERVICE = 4)
				> 0 THEN 1
			ELSE 0
		END AS SPLIT
	   ,EC_TRAN.COD_EC AS COD_EC_TRANS
	   ,EC_TRAN.NAME AS TRANS_EC_NAME
	   ,EC_TRAN.CPF_CNPJ AS TRANS_EC_CPF_CNPJ
	   ,[TRANSACTION_TITLES].[ASSIGNED]
	   ,[ASSIGN_FILE_TITLE].RETAINED_AMOUNT
	   ,[ASSIGN_FILE_TITLE].[ORIGINAL_DATE]
	   ,CAST([TRANSACTION_TITLES].CREATED_AT AS DATE) TRAN_TITTLE_DATE
	   ,CAST([TRANSACTION_TITLES].CREATED_AT AS TIME) TRAN_TITTLE_TIME
	   ,(SELECT TOP 1
				[NAME]
			FROM ACQUIRER(NOLOCK)
			JOIN ASSIGN_FILE_ACQUIRE(NOLOCK) fType
				ON fType.COD_AC = ACQUIRER.COD_AC
				AND fType.COD_ASSIGN_FILE_MODEL = assignModel.COD_ASSIGN_FILE_MODEL)
		[ASSIGNEE]
	   ,(SELECT
				TRANSACTION_DATA_EXT.[VALUE]
			FROM TRANSACTION_DATA_EXT WITH (NOLOCK)
			WHERE TRANSACTION_DATA_EXT.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN
			AND TRANSACTION_DATA_EXT.[NAME] = 'AUTHCODE')
		AS [AUTH_CODE]
	   ,[TRANSACTION].CREDITOR_DOCUMENT
	   ,(SELECT
				TRANSACTION_DATA_EXT.[VALUE]
			FROM TRANSACTION_DATA_EXT WITH (NOLOCK)
			WHERE TRANSACTION_DATA_EXT.COD_TRAN = [TRANSACTION_TITLES].COD_TRAN
			AND TRANSACTION_DATA_EXT.[NAME] = 'COUNT')
		AS ORDER_CODE
	   ,TRANSACTION_TITLES.COD_SITUATION [COD_SITUATION_TITLE]
	   ,[EQUIPMENT_MODEL].CODIGO AS MODEL_POS
	   ,[SEGMENTS].[NAME] AS SEGMENT_EC
	   ,[STATE].UF AS STATE_EC
	   ,[CITY].[NAME] AS CITY_EC
	   ,[NEIGHBORHOOD].[NAME] AS NEIGHBORHOOD_EC
	   ,[ADDRESS_BRANCH].COD_ADDRESS
	   ,SOURCE_TRANSACTION.DESCRIPTION AS TYPE_TRAN
	   ,EC_PROD.[NAME] AS [EC_PROD]
	   ,EC_PROD.CPF_CNPJ AS [EC_PROD_CPF_CNPJ]
	   ,TRAN_PROD.[NAME] AS [NAME_PROD]
	   ,SPLIT_PROD.[PERCENTAGE] AS [PERCENT_PARTICIP_SPLIT]
	   ,[TRANSACTION_TITLES_COST].RATE_PLAN
	   ,[TRANSACTION_TITLES].QTY_DAYS_ANTECIP
	   ,IIF([TRANSACTION_TITLES].TAX_PLANDZERO IS NULL, 0, 1) AS IS_PLANDZERO
	   ,COALESCE([TRANSACTION_TITLES].TAX_PLANDZERO, 0) TAX_PLANDZERO
	FROM [TRANSACTION_TITLES] WITH (NOLOCK)
	INNER JOIN [TRANSACTION] WITH (NOLOCK)
		ON [TRANSACTION].COD_TRAN = TRANSACTION_TITLES.COD_TRAN
	LEFT JOIN [TRANSACTION_TITLES_COST] WITH (NOLOCK)
		ON [TRANSACTION_TITLES].COD_TITLE = TRANSACTION_TITLES_COST.COD_TITLE
	INNER JOIN [TRANSACTION_TYPE] WITH (NOLOCK)
		ON TRANSACTION_TYPE.COD_TTYPE = [TRANSACTION].COD_TTYPE
	LEFT JOIN AFFILIATOR WITH (NOLOCK)
		ON AFFILIATOR.COD_AFFILIATOR = [TRANSACTION].COD_AFFILIATOR
	INNER JOIN ASS_DEPTO_EQUIP WITH (NOLOCK)
		ON ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL = [TRANSACTION].COD_ASS_DEPTO_TERMINAL
	INNER JOIN DEPARTMENTS_BRANCH WITH (NOLOCK)
		ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = ASS_DEPTO_EQUIP.COD_DEPTO_BRANCH
	INNER JOIN DEPARTMENTS WITH (NOLOCK)
		ON DEPARTMENTS.COD_DEPARTS = DEPARTMENTS_BRANCH.COD_DEPARTS
	INNER JOIN BRANCH_EC WITH (NOLOCK)
		ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH
	INNER JOIN COMMERCIAL_ESTABLISHMENT WITH (NOLOCK)
		ON COMMERCIAL_ESTABLISHMENT.COD_EC = BRANCH_EC.COD_EC
	INNER JOIN COMMERCIAL_ESTABLISHMENT CE_DESTINY WITH (NOLOCK)
		ON CE_DESTINY.COD_EC = TRANSACTION_TITLES.COD_EC
	INNER JOIN PRODUCTS_ACQUIRER WITH (NOLOCK)
		ON PRODUCTS_ACQUIRER.COD_PR_ACQ = [TRANSACTION].COD_PR_ACQ
	INNER JOIN ACQUIRER WITH (NOLOCK)
		ON ACQUIRER.COD_AC = PRODUCTS_ACQUIRER.COD_AC
	LEFT JOIN [TRANSACTION_DATA_EXT] WITH (NOLOCK)
		ON [TRANSACTION_DATA_EXT].COD_TRAN = [TRANSACTION].COD_TRAN
	INNER JOIN [dbo].[PROCESS_BG_STATUS] WITH (NOLOCK)
		ON ([PROCESS_BG_STATUS].CODE = [TRANSACTION].COD_TRAN)
	LEFT JOIN COMPANY WITH (NOLOCK)
		ON COMPANY.COD_COMP = COMMERCIAL_ESTABLISHMENT.COD_COMP
	LEFT JOIN [dbo].[REPORT_CONSOLIDATED_TRANS_SUB] WITH (NOLOCK)
		ON ([REPORT_CONSOLIDATED_TRANS_SUB].COD_TRAN = [TRANSACTION].COD_TRAN)
	LEFT JOIN COMMERCIAL_ESTABLISHMENT EC_TRAN WITH (NOLOCK)
		ON EC_TRAN.COD_EC = [TRANSACTION].COD_EC
	LEFT JOIN [ASSIGN_FILE_TITLE](NOLOCK)
		ON [ASSIGN_FILE_TITLE].COD_TITLE = [TRANSACTION_TITLES].COD_TITLE
		AND [ASSIGN_FILE_TITLE].ACTIVE = 1
	LEFT JOIN ASSIGN_FILE(NOLOCK)
		ON ASSIGN_FILE.COD_ASSIGN_FILE = [ASSIGN_FILE_TITLE].COD_ASSIGN_FILE
	LEFT JOIN ASSIGN_FILE_MODEL assignModel (NOLOCK)
		ON assignModel.COD_ASSIGN_FILE_MODEL = ASSIGN_FILE.COD_ASSIGN_FILE_MODEL
	INNER JOIN [EQUIPMENT] WITH (NOLOCK)
		ON [EQUIPMENT].COD_EQUIP = [ASS_DEPTO_EQUIP].COD_EQUIP
	INNER JOIN [EQUIPMENT_MODEL] WITH (NOLOCK)
		ON [EQUIPMENT_MODEL].COD_MODEL = [EQUIPMENT].COD_MODEL
	INNER JOIN [SEGMENTS] WITH (NOLOCK)
		ON [SEGMENTS].COD_SEG = [COMMERCIAL_ESTABLISHMENT].COD_SEG
	INNER JOIN [ADDRESS_BRANCH] WITH (NOLOCK)
		ON [ADDRESS_BRANCH].COD_BRANCH = [BRANCH_EC].COD_BRANCH
		AND [ADDRESS_BRANCH].ACTIVE = 1
	INNER JOIN [NEIGHBORHOOD] WITH (NOLOCK)
		ON [NEIGHBORHOOD].COD_NEIGH = [ADDRESS_BRANCH].COD_NEIGH
	INNER JOIN [CITY] WITH (NOLOCK)
		ON [CITY].COD_CITY = [NEIGHBORHOOD].COD_CITY
	INNER JOIN [STATE] WITH (NOLOCK)
		ON [STATE].COD_STATE = [CITY].COD_STATE
	INNER JOIN SOURCE_TRANSACTION WITH (NOLOCK)
		ON SOURCE_TRANSACTION.COD_SOURCE_TRAN = [TRANSACTION].COD_SOURCE_TRAN
	LEFT JOIN TRANSACTION_PRODUCTS AS [TRAN_PROD] WITH (NOLOCK)
		ON [TRAN_PROD].COD_TRAN_PROD = [TRANSACTION].COD_TRAN_PROD
		AND [TRAN_PROD].ACTIVE = 1
	LEFT JOIN SPLIT_PRODUCTS SPLIT_PROD WITH (NOLOCK)
		ON SPLIT_PROD.COD_SPLIT_PROD = TRANSACTION_TITLES.COD_SPLIT_PROD
	LEFT JOIN COMMERCIAL_ESTABLISHMENT EC_PROD WITH (NOLOCK)
		ON EC_PROD.COD_EC = [TRAN_PROD].COD_EC
	WHERE
	--[TRANSACTION].COD_SITUATION IN (3, 6, 10)            
	[TRANSACTION].COD_SITUATION = 3
	AND [TRANSACTION_TITLES].COD_SITUATION != 26
	AND COALESCE([TRANSACTION_DATA_EXT].[NAME], '0') IN ('NSU', 'RCPTTXID', 'AUTO', '0')
	AND PROCESS_BG_STATUS.STATUS_PROCESSED = 0
	AND PROCESS_BG_STATUS.COD_SOURCE_PROCESS = 3
	AND DATEADD(MINUTE, -5, GETDATE()) > [TRANSACTION].CREATED_AT
	AND DATEADD(MINUTE, -5, GETDATE()) > [TRANSACTION_TITLES].CREATED_AT
	--AND DATEPART(YEAR,[TRANSACTION].CREATED_AT) = DATEPART(YEAR,GETDATE())        
	AND [REPORT_CONSOLIDATED_TRANS_SUB].COD_TRAN IS NULL)
SELECT
	AFFILIATOR
   ,MERSHANT
   ,SERIAL
   ,CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
   ,CAST(TRANSACTION_DATE AS TIME) AS TRANSACTION_TIME
   ,NSU
   ,EXTERNAL_NSU
   ,TRAN_TYPE
   ,TRANSACTION_AMOUNT
   ,TOTAL_PLOTS AS QUOTA_TOTAL
   ,AMOUNT AS 'QUOTA_AMOUNT'
   ,PLOT AS QUOTA
   ,ACQUIRER
   ,ACQ_TAX AS 'MDR_ACQ'
   ,BRAND
   ,CTE.TAX_INITIAL AS 'MDR_EC'
   ,ANTECIP_EC AS 'ANTICIP_EC'
   ,MDR_AFF AS 'MDR_AFF'
   ,ANTECIP_AFF AS 'ANTICIP_AFF'
   ,LIQUID_SUB AS 'TO_RECEIVE_ACQ'
   ,CAST(PREVISION_RECEIVE_DATE AS DATE) AS 'PREDICTION_RECEIVE_DATE'
   ,(LIQUID_SUB - AFF_DISCOUNT) AS 'NET_WITHOUT_FEE_SUB'
   ,RATE_PLAN AS 'FEE_AFFILIATOR'
   ,(LIQUID_SUB - AFF_DISCOUNT_TARIFF) AS 'NET_SUB'
   ,AFF AS 'NET_WITHOUT_FEE_AFF'
   ,AFF_TARIFF AS 'NET_AFF'
   ,EC AS 'MERCHANT_WITHOUT_FEE'
   ,CTE.RATE AS 'FEE_MERCHANT'
   ,EC_TARIFF AS 'MERCHANT_NET'
   ,CAST(PREVISION_PAY_DATE AS DATE) AS 'PREDICTION_PAY_DATE'
   ,CASE
		WHEN TRAN_TYPE = 'CREDITO' AND
			(CAST(PREVISION_RECEIVE_DATE AS DATE) != CAST(PREVISION_PAY_DATE AS DATE)) THEN 1
		ELSE 0
	END AS ANTECIPATED
   ,COD_EC
   ,CTE.COD_AFFILIATOR
   ,COD_BRANCH
   ,CTE.COD_DEPTO_BRANCH
   ,PAN
   ,CPF_CNPJ_ORIGINATOR
   ,EC_NAME_DESTINY
   ,CPF_CNPJ_DESTINY
   ,CPF_AFF
   ,CTE.CODE
   ,CTE.COD_TRAN
   ,CTE.COD_COMP
   ,CTE.REP_COD_TRAN
   ,CTE.COD_SITUATION
   ,CTE.LIQUID_MDR_EC
   ,CTE.ANTECIP_DISCOUNT_EC
   ,CTE.LIQUID_MDR_AFF
   ,CTE.ANTECIP_DISCOUNT_AFF
   ,CTE.SPLIT
   ,CTE.COD_EC_TRANS
   ,CTE.TRANS_EC_NAME
   ,CTE.TRANS_EC_CPF_CNPJ
   ,CTE.[ASSIGNED]
   ,CTE.RETAINED_AMOUNT
   ,CTE.[ORIGINAL_DATE]
   ,CTE.[ASSIGNEE]
   ,CTE.TRAN_TITTLE_DATE
   ,CTE.TRAN_TITTLE_TIME
   ,CTE.AUTH_CODE
   ,CTE.CREDITOR_DOCUMENT
   ,CTE.ORDER_CODE
   ,CTE.COD_TITLE
   ,CTE.[COD_SITUATION_TITLE]
   ,CTE.MODEL_POS
   ,CTE.SEGMENT_EC
   ,CTE.STATE_EC
   ,CTE.CITY_EC
   ,CTE.NEIGHBORHOOD_EC
   ,CTE.COD_ADDRESS
   ,CTE.TYPE_TRAN
   ,CTE.NAME_PROD
   ,CTE.EC_PROD
   ,CTE.EC_PROD_CPF_CNPJ
   ,CTE.PERCENT_PARTICIP_SPLIT
   ,CTE.QTY_DAYS_ANTECIP
   ,CTE.IS_PLANDZERO
   ,CTE.TAX_PLANDZERO
FROM CTE

GO



ALTER PROCEDURE [dbo].[SP_REG_REPORT_CONSOLIDATED_TRANS_SUB]
/*----------------------------------------------------------------------------------------                            
Procedure Name: [SP_REG_REPORT_CONSOLIDATED_TRANS_SUB]                            
Project.......: TKPP                            
------------------------------------------------------------------------------------------                            
Author                          VERSION        Date             Description                            
------------------------------------------------------------------------------------------                            
Fernando Henrique F. de O       V1              28/12/2018      Creation                          
Fernando Henrique F. de O       V2              07/02/2019      Changed                      
Luiz Aquino                     V3              22/02/2019      Remove Incomplete Installments                         
Lucas Aguiar                    V4              22-04-2019      add originador e destino                     
Caike Uchôa                     V5              16/08/2019      add columns AUTH_CODE e CREDITOR_DOCUMENT                 
Caike Uchôa                     V6              11/09/2019      add column ORDER_CODE                  
Marcus Gall                     V7              27/11/2019      Add Model_POS, Segment, Location_EC          
Ana Paula Liick                 V8              31/01/2020      Add Origem_Trans        
Caike Uchôa                     V9              30/04/2020      add produto ec    
Caike Uchôa                     V10             03/08/2020      add QTY_DAYS_ANTECIP  
------------------------------------------------------------------------------------------*/
AS
	DECLARE @COUNT INT = 0;



	BEGIN

		---------------------------------------------                          
		--------------RECORDS INSERT-----------------                          
		---------------------------------------------                            
		SELECT
			--TOP (1000)              
			[VW_REPORT_FULL_CASH_FLOW].COD_TRAN
		   ,[VW_REPORT_FULL_CASH_FLOW].AFFILIATOR
		   ,[VW_REPORT_FULL_CASH_FLOW].MERSHANT
		   ,[VW_REPORT_FULL_CASH_FLOW].TRANSACTION_DATE
		   ,[VW_REPORT_FULL_CASH_FLOW].TRANSACTION_TIME
		   ,[VW_REPORT_FULL_CASH_FLOW].NSU
		   ,[VW_REPORT_FULL_CASH_FLOW].QUOTA_TOTAL
		   ,[VW_REPORT_FULL_CASH_FLOW].TRAN_TYPE
		   ,[VW_REPORT_FULL_CASH_FLOW].QUOTA
		   ,[VW_REPORT_FULL_CASH_FLOW].QUOTA_AMOUNT AMOUNT
		   ,[VW_REPORT_FULL_CASH_FLOW].TRANSACTION_AMOUNT
		   ,[VW_REPORT_FULL_CASH_FLOW].ACQUIRER
		   ,[VW_REPORT_FULL_CASH_FLOW].MDR_ACQ
		   ,[VW_REPORT_FULL_CASH_FLOW].BRAND
		   ,[VW_REPORT_FULL_CASH_FLOW].MDR_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].ANTICIP_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].ANTICIP_AFF
		   ,[VW_REPORT_FULL_CASH_FLOW].MDR_AFF
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_SUB AS NET_SUB_RATE
		   ,[VW_REPORT_FULL_CASH_FLOW].ANTECIPATED
		   ,[VW_REPORT_FULL_CASH_FLOW].PREDICTION_PAY_DATE
		   ,[VW_REPORT_FULL_CASH_FLOW].TO_RECEIVE_ACQ
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_AFF
			--,COALESCE([VW_REPORT_FULL_CASH_FLOW].RATE_CURRENT_EC, 0) AS RATE_EC                                     
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_WITHOUT_FEE_AFF AS NET_WITHOUT_FEE_AFF_RATE
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_SUB AS NET_SUB_ACQ
		   ,[VW_REPORT_FULL_CASH_FLOW].PREDICTION_RECEIVE_DATE
		   ,[VW_REPORT_FULL_CASH_FLOW].FEE_MERCHANT AS RATE
		   ,COALESCE([VW_REPORT_FULL_CASH_FLOW].ANTECIP_DISCOUNT_AFF, 0) AS ANTECIP_DISCOUNT_AFF
		   ,COALESCE([VW_REPORT_FULL_CASH_FLOW].ANTECIP_DISCOUNT_EC, 0) AS ANTECIP_DISCOUNT_EC
			--,COALESCE([VW_REPORT_FULL_CASH_FLOW].MDR_CURRENT_ACQ, 0) AS MDR_CURRENT_ACQ                                
		   ,COALESCE([VW_REPORT_FULL_CASH_FLOW].LIQUID_MDR_AFF, 0) AS LIQUID_MDR_AFF
			--,COALESCE([VW_REPORT_FULL_CASH_FLOW].RATE_CURRENT_AFF, 0) AS RATE_CURRENT_AFF                           
			--,COALESCE([VW_REPORT_FULL_CASH_FLOW].RATE_CURRENT_EC, 0) AS RATE_CURRENT_EC                            
		   ,COALESCE([VW_REPORT_FULL_CASH_FLOW].LIQUID_MDR_EC, 0) AS LIQUID_MDR_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].MERCHANT_WITHOUT_FEE
		   ,[VW_REPORT_FULL_CASH_FLOW].FEE_AFFILIATOR
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_SUB
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_WITHOUT_FEE_SUB
		   ,[VW_REPORT_FULL_CASH_FLOW].NET_WITHOUT_FEE_AFF
		   ,[VW_REPORT_FULL_CASH_FLOW].MERCHANT_NET
		   ,[VW_REPORT_FULL_CASH_FLOW].CPF_CNPJ_ORIGINATOR AS 'CPF_EC'
		   ,[VW_REPORT_FULL_CASH_FLOW].EC_NAME_DESTINY AS 'ECNAME_DESTINY'
		   ,[VW_REPORT_FULL_CASH_FLOW].CPF_CNPJ_DESTINY AS 'DESTINY'
		   ,[VW_REPORT_FULL_CASH_FLOW].CPF_AFF AS CPF_AFF
		   ,[VW_REPORT_FULL_CASH_FLOW].SERIAL
		   ,[VW_REPORT_FULL_CASH_FLOW].EXTERNAL_NSU
		   ,[VW_REPORT_FULL_CASH_FLOW].PAN
		   ,[VW_REPORT_FULL_CASH_FLOW].CODE
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_COMP
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_BRANCH
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_DEPTO_BRANCH
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_AFFILIATOR
		   ,[VW_REPORT_FULL_CASH_FLOW].SPLIT
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_EC_TRANS
		   ,[VW_REPORT_FULL_CASH_FLOW].TRANS_EC_NAME
		   ,[VW_REPORT_FULL_CASH_FLOW].TRANS_EC_CPF_CNPJ
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_SITUATION
		   ,[VW_REPORT_FULL_CASH_FLOW].[ASSIGNED]
		   ,[VW_REPORT_FULL_CASH_FLOW].[RETAINED_AMOUNT]
		   ,[VW_REPORT_FULL_CASH_FLOW].[ORIGINAL_DATE]
		   ,[VW_REPORT_FULL_CASH_FLOW].[ASSIGNEE]
		   ,[VW_REPORT_FULL_CASH_FLOW].TRAN_TITTLE_TIME
		   ,[VW_REPORT_FULL_CASH_FLOW].TRAN_TITTLE_DATE
		   ,[VW_REPORT_FULL_CASH_FLOW].AUTH_CODE
		   ,[VW_REPORT_FULL_CASH_FLOW].CREDITOR_DOCUMENT
		   ,[VW_REPORT_FULL_CASH_FLOW].ORDER_CODE
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_TITLE
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_SITUATION_TITLE
		   ,[VW_REPORT_FULL_CASH_FLOW].MODEL_POS
		   ,[VW_REPORT_FULL_CASH_FLOW].SEGMENT_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].STATE_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].CITY_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].NEIGHBORHOOD_EC
		   ,[VW_REPORT_FULL_CASH_FLOW].COD_ADDRESS
		   ,[VW_REPORT_FULL_CASH_FLOW].TYPE_TRAN
		   ,[VW_REPORT_FULL_CASH_FLOW].NAME_PROD
		   ,[VW_REPORT_FULL_CASH_FLOW].EC_PROD
		   ,[VW_REPORT_FULL_CASH_FLOW].EC_PROD_CPF_CNPJ
		   ,[VW_REPORT_FULL_CASH_FLOW].PERCENT_PARTICIP_SPLIT
		   ,[VW_REPORT_FULL_CASH_FLOW].QTY_DAYS_ANTECIP
		   ,[VW_REPORT_FULL_CASH_FLOW].IS_PLANDZERO
		   ,[VW_REPORT_FULL_CASH_FLOW].TAX_PLANDZERO INTO #TB_REPORT_FULL_CASH_FLOW_INSERT
		FROM [dbo].[VW_REPORT_FULL_CASH_FLOW]
		ORDER BY COD_TRAN, QUOTA
		OFFSET 0 ROWS FETCH FIRST 200 ROWS ONLY;

		WITH TRANINFO
		AS
		(SELECT
				COUNT(COD_TRAN) AVAILABLE_INSTALLMENTS
			   ,COD_TRAN
			   ,QUOTA_TOTAL
			FROM #TB_REPORT_FULL_CASH_FLOW_INSERT installments
			GROUP BY COD_TRAN
					,QUOTA_TOTAL)
		DELETE INSTALLMENT
			FROM #TB_REPORT_FULL_CASH_FLOW_INSERT INSTALLMENT
			JOIN TRANINFO
				ON TRANINFO.COD_TRAN = INSTALLMENT.COD_TRAN
		WHERE TRANINFO.QUOTA_TOTAL > TRANINFO.AVAILABLE_INSTALLMENTS


		SELECT
			@COUNT = COUNT(*)
		FROM #TB_REPORT_FULL_CASH_FLOW_INSERT;

		IF @COUNT > 0
		BEGIN
			INSERT INTO [dbo].[REPORT_CONSOLIDATED_TRANS_SUB] ([COD_TRAN],
			[AFFILIATOR],
			[COMMERCIALESTABLISHMENT],
			[TRANSACTION_DATE],
			[TRANSACTION_TIME],
			[NSU],
			[QUOTA_TOTAL],
			[TRANSACTION_TYPE],
			[PLOT],
			[AMOUNT],
			[TRANSACTION_AMOUNT],
			[ACQUIRER],
			[MDR_ACQUIRER],
			[BRAND],
			[MDR_EC],
			[ANTECIP_PERCENT],
			[ANTECIP_AFFILIATOR],
			[MDR_AFFILIATOR],
			[LIQUID_VALUE_SUB],
			[ANTECIPATED],
			[PREVISION_PAY_DATE],
			[TO_RECEIVE_ACQ],
			[LIQUID_VALUE_AFFILIATOR],
			[LIQUID_AFF_RATE],
			[LIQUID_SUB_RATE],
			[PREVISION_RECEIVE_DATE],
			[RATE],
			[ANTECIP_CURRENT_AFF],
			[ANTECIP_CURRENT_EC],
			[MDR_CURRENT_AFF],
			[MDR_CURRENT_EC],
			[LIQUID_VALUE_EC],
			[FEE_AFFILIATOR],
			[NET_SUB_AQUIRER],
			[NET_WITHOUT_FEE_SUB],
			[NET_WITHOUT_FEE_AFF],
			[MERCHANT_NET],
			[CPF_EC],
			[DESTINY],
			[CPF_AFF],
			[SERIAL],
			[EXTERNALNSU],
			[PAN],
			[CODE],
			[COD_COMP],
			[COD_EC],
			[COD_BRANCH],
			[COD_DEPTO_BRANCH],
			[COD_AFFILIATOR],
			[COD_SITUATION],
			[SPLIT],
			[COD_EC_TRANS],
			[TRANS_EC_NAME],
			[TRANS_EC_CPF_CNPJ]
			, [ASSIGNED]
			, [RETAINED_AMOUNT]
			, [ORIGINAL_DATE]
			, [ASSIGNEE]
			, [MODIFY_DATE]
			, EC_NAME_DESTINY
			, TRANSACTION_TITTLE_DATE
			, TRANSACTION_TITTLE_TIME
			, AUTH_CODE
			, CREDITOR_DOCUMENT
			, ORDER_CODE
			, COD_TITLE
			, COD_SITUATION_TITLE
			, MODEL_POS
			, SEGMENT_EC
			, STATE_EC
			, CITY_EC
			, NEIGHBORHOOD_EC
			, COD_ADDRESS
			, TYPE_TRAN
			, NAME_PROD
			, EC_PROD
			, EC_PROD_CPF_CNPJ
			, PERCENT_PARTICIP_SPLIT
			, QTY_DAYS_ANTECIP
			, IS_PLANDZERO
			, TAX_PLANDZERO)
				(SELECT
					TEMP.[COD_TRAN]
				   ,TEMP.[AFFILIATOR]
				   ,TEMP.[MERSHANT]
				   ,TEMP.[TRANSACTION_DATE]
				   ,TEMP.[TRANSACTION_TIME]
				   ,TEMP.[NSU]
				   ,TEMP.[QUOTA_TOTAL]
				   ,TEMP.[TRAN_TYPE]
				   ,TEMP.[QUOTA]
				   ,TEMP.[AMOUNT]
				   ,TEMP.[TRANSACTION_AMOUNT]
				   ,TEMP.[ACQUIRER]
				   ,TEMP.[MDR_ACQ]
				   ,TEMP.[BRAND]
				   ,TEMP.[MDR_EC]
				   ,TEMP.[ANTICIP_EC]
				   ,TEMP.[ANTICIP_AFF]
				   ,TEMP.[MDR_AFF]
				   ,TEMP.[NET_SUB_RATE]
				   ,TEMP.[ANTECIPATED]
				   ,TEMP.[PREDICTION_PAY_DATE]
				   ,TEMP.[TO_RECEIVE_ACQ]
				   ,TEMP.[NET_AFF]
				   ,TEMP.[NET_WITHOUT_FEE_AFF_RATE]
				   ,TEMP.[NET_SUB_ACQ]
				   ,TEMP.[PREDICTION_RECEIVE_DATE]
				   ,TEMP.[RATE]
				   ,TEMP.[ANTECIP_DISCOUNT_AFF]
				   ,TEMP.[ANTECIP_DISCOUNT_EC]
				   ,TEMP.[LIQUID_MDR_AFF]
				   ,TEMP.[LIQUID_MDR_EC]
				   ,TEMP.[MERCHANT_WITHOUT_FEE]
				   ,TEMP.[FEE_AFFILIATOR]
				   ,TEMP.[NET_SUB]
				   ,TEMP.[NET_WITHOUT_FEE_SUB]
				   ,TEMP.[NET_WITHOUT_FEE_AFF]
				   ,TEMP.[MERCHANT_NET]
				   ,TEMP.[CPF_AFF]
				   ,TEMP.[DESTINY]
				   ,TEMP.[CPF_EC]
				   ,TEMP.[SERIAL]
				   ,TEMP.[EXTERNAL_NSU]
				   ,TEMP.[PAN]
				   ,TEMP.[CODE]
				   ,TEMP.[COD_COMP]
				   ,TEMP.[COD_EC]
				   ,TEMP.[COD_BRANCH]
				   ,TEMP.[COD_DEPTO_BRANCH]
				   ,TEMP.[COD_AFFILIATOR]
				   ,TEMP.[COD_SITUATION]
				   ,TEMP.[SPLIT]
				   ,TEMP.[COD_EC_TRANS]
				   ,TEMP.[TRANS_EC_NAME]
				   ,TEMP.[TRANS_EC_CPF_CNPJ]
				   ,TEMP.[ASSIGNED]
				   ,TEMP.[RETAINED_AMOUNT]
				   ,TEMP.[ORIGINAL_DATE]
				   ,TEMP.[ASSIGNEE]
				   ,GETDATE()
				   ,TEMP.ECNAME_DESTINY
				   ,TRAN_TITTLE_DATE
				   ,TRAN_TITTLE_TIME
				   ,TEMP.AUTH_CODE
				   ,TEMP.CREDITOR_DOCUMENT
				   ,TEMP.ORDER_CODE
				   ,TEMP.COD_TITLE
				   ,TEMP.COD_SITUATION_TITLE
				   ,TEMP.MODEL_POS
				   ,TEMP.SEGMENT_EC
				   ,TEMP.STATE_EC
				   ,TEMP.CITY_EC
				   ,TEMP.NEIGHBORHOOD_EC
				   ,TEMP.COD_ADDRESS
				   ,TEMP.TYPE_TRAN
				   ,TEMP.NAME_PROD
				   ,TEMP.EC_PROD
				   ,TEMP.EC_PROD_CPF_CNPJ
				   ,TEMP.PERCENT_PARTICIP_SPLIT
				   ,TEMP.QTY_DAYS_ANTECIP
				   ,TEMP.IS_PLANDZERO
				   ,TEMP.TAX_PLANDZERO
				FROM #TB_REPORT_FULL_CASH_FLOW_INSERT TEMP
				)

			IF @@rowcount < 1
				THROW 60000, 'COULD NOT REGISTER [REPORT_CONSOLIDATED_TRANS_SUB] ', 1;

			UPDATE [PROCESS_BG_STATUS]
			SET STATUS_PROCESSED = 1
			   ,MODIFY_DATE = GETDATE()
			FROM [PROCESS_BG_STATUS]
			INNER JOIN #TB_REPORT_FULL_CASH_FLOW_INSERT
				ON (PROCESS_BG_STATUS.CODE = #TB_REPORT_FULL_CASH_FLOW_INSERT.COD_TRAN)
			WHERE [PROCESS_BG_STATUS].COD_SOURCE_PROCESS = 3;

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](INSERT)', 1;
		END;

		---------------------------------------------                            
		--------------RECORDS UPDATE-----------------                            
		---------------------------------------------                              
		SELECT
			[VW_REPORT_FULL_CASH_FLOW_UP].COD_TRAN
		   ,[VW_REPORT_FULL_CASH_FLOW_UP].COD_SITUATION INTO #TB_REPORT_FULL_CASH_FLOW_UPDATE
		FROM [dbo].[VW_REPORT_FULL_CASH_FLOW_UP]


		SELECT
			@COUNT = COUNT(*)
		FROM #TB_REPORT_FULL_CASH_FLOW_UPDATE;

		IF @COUNT > 0
		BEGIN
			UPDATE [REPORT_CONSOLIDATED_TRANS_SUB]
			SET [REPORT_CONSOLIDATED_TRANS_SUB].COD_SITUATION = #TB_REPORT_FULL_CASH_FLOW_UPDATE.COD_SITUATION
			   ,[REPORT_CONSOLIDATED_TRANS_SUB].MODIFY_DATE = GETDATE()
			FROM [REPORT_CONSOLIDATED_TRANS_SUB]
			INNER JOIN #TB_REPORT_FULL_CASH_FLOW_UPDATE
				ON ([REPORT_CONSOLIDATED_TRANS_SUB].COD_TRAN = #TB_REPORT_FULL_CASH_FLOW_UPDATE.COD_TRAN);

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [REPORT_CONSOLIDATED_TRANS_SUB]', 1;

			UPDATE [PROCESS_BG_STATUS]
			SET STATUS_PROCESSED = 1
			   ,MODIFY_DATE = GETDATE()
			FROM [PROCESS_BG_STATUS]
			INNER JOIN #TB_REPORT_FULL_CASH_FLOW_UPDATE
				ON (PROCESS_BG_STATUS.CODE = #TB_REPORT_FULL_CASH_FLOW_UPDATE.COD_TRAN)
			WHERE [PROCESS_BG_STATUS].COD_SOURCE_PROCESS = 3;

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](UPDATE)', 1;
		END;
	END;

GO


ALTER PROCEDURE [dbo].[SP_REPORT_CONSOLIDATED_TRANSACTION_SUB]

/**************************************************************************************************************      
    Project.......: TKPP                          
 ------------------------------------------------------------------------------------------                          
     Author                          VERSION        Date                            Description                          
 ------------------------------------------------------------------------------------------                          
    Fernando Henrique F. de O       V1         28/12/2018                          Creation                        
    Fernando Henrique F. de O       V2         07/02/2019                          Changed                            
    Elir Ribeiro                    V3         29/07/2019                          Changed date                  
    Caike Uchôa Almeida             V4         16/08/2019                        Inserting columns                 
    Caike Uchôa Almeida             V5         11/09/2019                        Inserting column                
    Marcus Gall                     V6         27/11/2019               Add Model_POS, Segment, Location_EC        
    Ana Paula Liick                 V8         31/01/2020                       Add Origem_Trans        
    Caike Uchôa                     V9         30/04/2020                       add produto ec    
    Luiz Aquino                     V10        02/07/2020                   PlanoDZero (ET-895)  
**************************************************************************************************************/ (@CODCOMP VARCHAR(10),
@INITIAL_DATE DATETIME,
@FINAL_DATE DATETIME,
@EC VARCHAR(10),
@BRANCH VARCHAR(10),
@DEPART VARCHAR(10),
@TERMINAL VARCHAR(100),
@STATE VARCHAR(100),
@CITY VARCHAR(100),
@TYPE_TRAN VARCHAR(10),
@SITUATION VARCHAR(10),
@NSU VARCHAR(100) = NULL,
@NSU_EXT VARCHAR(100) = NULL,
@BRAND VARCHAR(50) = NULL,
@PAN VARCHAR(50) = NULL,
@CODAFF INT = NULL,
@SPLIT INT = NULL,
@CODACQUIRER INT = NULL,
@ISPlanDZero INT = NULL)
AS
BEGIN

	DECLARE @QUERY_BASIS NVARCHAR(MAX) = '';

	DECLARE @AWAITINGSPLIT INT = NULL;
	SET NOCOUNT ON;
	SET ARITHABORT ON;

	SELECT TOP 1
		@AWAITINGSPLIT = [COD_SITUATION]
	FROM [SITUATION]
	WHERE [NAME] = 'WAITING FOR SPLIT OF FINANCE SCHEDULE';

	SET @QUERY_BASIS = 'SELECT                              
        [REPORT_CONSOLIDATED_TRANS_SUB].AFFILIATOR AS AFFILIATOR,             
        [REPORT_CONSOLIDATED_TRANS_SUB].COMMERCIALESTABLISHMENT AS MERCHANT,                                  
        [REPORT_CONSOLIDATED_TRANS_SUB].SERIAL  AS SERIAL,                            
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_DATE  AS TRANSACTION_DATE,           
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_TIME  AS TRANSACTION_TIME,           
        [REPORT_CONSOLIDATED_TRANS_SUB].NSU  AS NSU ,          
        [REPORT_CONSOLIDATED_TRANS_SUB].EXTERNALNSU  AS EXTERNAL_NSU,                            
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_TYPE  AS TRAN_TYPE,           
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_AMOUNT  AS TRANSACTION_AMOUNT,                              
        [REPORT_CONSOLIDATED_TRANS_SUB].QUOTA_TOTAL  AS QUOTA_TOTAL,           
        [REPORT_CONSOLIDATED_TRANS_SUB].AMOUNT  AS  AMOUNT,           
        [REPORT_CONSOLIDATED_TRANS_SUB].PLOT  AS QUOTA,           
        [REPORT_CONSOLIDATED_TRANS_SUB].ACQUIRER  AS ACQUIRER,           
        [REPORT_CONSOLIDATED_TRANS_SUB].MDR_ACQUIRER  AS MDR_ACQ,           
        [REPORT_CONSOLIDATED_TRANS_SUB].BRAND  AS BRAND,           
        [REPORT_CONSOLIDATED_TRANS_SUB].MDR_EC  AS MDR_EC,           
        [REPORT_CONSOLIDATED_TRANS_SUB].ANTECIP_PERCENT  AS ANTICIP_EC,           
        [REPORT_CONSOLIDATED_TRANS_SUB].MDR_AFFILIATOR  AS MDR_AFF,           
        [REPORT_CONSOLIDATED_TRANS_SUB].ANTECIP_AFFILIATOR  AS ANTICIP_AFF,          
        [REPORT_CONSOLIDATED_TRANS_SUB].TO_RECEIVE_ACQ  AS TO_RECEIVE_ACQ,                    
        [REPORT_CONSOLIDATED_TRANS_SUB].PREVISION_RECEIVE_DATE  AS PREDICTION_RECEIVE_DATE,           
        [REPORT_CONSOLIDATED_TRANS_SUB].NET_WITHOUT_FEE_SUB  AS NET_WITHOUT_FEE_SUB,           
        [REPORT_CONSOLIDATED_TRANS_SUB].FEE_AFFILIATOR  AS FEE_AFFILIATOR,           
        [REPORT_CONSOLIDATED_TRANS_SUB].NET_SUB_AQUIRER  AS NET_SUB,           
        [REPORT_CONSOLIDATED_TRANS_SUB].NET_WITHOUT_FEE_AFF  AS NET_WITHOUT_FEE_AFF,                            
        [REPORT_CONSOLIDATED_TRANS_SUB].LIQUID_VALUE_AFFILIATOR  AS NET_AFF,           
        [REPORT_CONSOLIDATED_TRANS_SUB].LIQUID_VALUE_EC  AS MERCHANT_WITHOUT_FEE,          
        [REPORT_CONSOLIDATED_TRANS_SUB].MERCHANT_NET  AS MERCHANT_NET,           
        IIF([REPORT_CONSOLIDATED_TRANS_SUB].[ASSIGNED] = 1, [REPORT_CONSOLIDATED_TRANS_SUB].[ORIGINAL_DATE] ,[REPORT_CONSOLIDATED_TRANS_SUB].PREVISION_PAY_DATE )  AS PREDICTION_PAY_DATE,           
        [REPORT_CONSOLIDATED_TRANS_SUB].ANTECIPATED  AS ANTECIPATED,                        
        [REPORT_CONSOLIDATED_TRANS_SUB].RATE,                        
        --[REPORT_CONSOLIDATED_TRANS_SUB].MDR_CURRENT_ACQ  AS MDR_CURRENT_ACQ,           
        [REPORT_CONSOLIDATED_TRANS_SUB].MDR_CURRENT_EC  AS MDR_CURRENT_EC,          
        [REPORT_CONSOLIDATED_TRANS_SUB].ANTECIP_CURRENT_EC  AS ANTICIP_CURRENT_EC,                                
        --[REPORT_CONSOLIDATED_TRANS_SUB].RATE_CURRENT_EC  AS RATE_CURRENT_EC,                              
        [REPORT_CONSOLIDATED_TRANS_SUB].MDR_CURRENT_AFF  AS MDR_CURRENT_AFF,                                
        [REPORT_CONSOLIDATED_TRANS_SUB].ANTECIP_CURRENT_AFF  AS ANTICIP_CURRENT_AFF,                           
        --[REPORT_CONSOLIDATED_TRANS_SUB].RATE_CURRENT_AFF  AS RATE_CURRENT_AFF,          
        [REPORT_CONSOLIDATED_TRANS_SUB].CPF_EC  AS CPF_AFF,                      
        [REPORT_CONSOLIDATED_TRANS_SUB].DESTINY  AS DESTINY,           
        [REPORT_CONSOLIDATED_TRANS_SUB].COD_AFFILIATOR  AS COD_AFFILIATOR,                                
        [REPORT_CONSOLIDATED_TRANS_SUB].COD_BRANCH  AS COD_BRANCH,                                
        [REPORT_CONSOLIDATED_TRANS_SUB].COD_DEPTO_BRANCH  AS COD_DEPTO_BRANCH,                                
        [REPORT_CONSOLIDATED_TRANS_SUB].PAN  AS PAN,                            
        [REPORT_CONSOLIDATED_TRANS_SUB].CPF_AFF AS ORIGINATOR,                        
        [REPORT_CONSOLIDATED_TRANS_SUB].CODE  AS CODE,                           
        [REPORT_CONSOLIDATED_TRANS_SUB].SPLIT,                      
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANS_EC_NAME,                      
        [REPORT_CONSOLIDATED_TRANS_SUB].TRANS_EC_CPF_CNPJ                      
        ,[REPORT_CONSOLIDATED_TRANS_SUB].[ASSIGNED]                      
        ,[REPORT_CONSOLIDATED_TRANS_SUB].[RETAINED_AMOUNT]                         
        --, [REPORT_CONSOLIDATED_TRANS_SUB].[ORIGINAL_DATE]          
        ,IIF( [REPORT_CONSOLIDATED_TRANS_SUB].[ASSIGNED] = 1, [REPORT_CONSOLIDATED_TRANS_SUB].PREVISION_PAY_DATE, [REPORT_CONSOLIDATED_TRANS_SUB].[ORIGINAL_DATE] ) [ORIGINAL_DATE]      
        ,[REPORT_CONSOLIDATED_TRANS_SUB].[ASSIGNEE]                      
        ,[REPORT_CONSOLIDATED_TRANS_SUB].EC_NAME_DESTINY                    
        ,[REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_TITTLE_DATE                    
        ,[REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_TITTLE_TIME                 
        ,[REPORT_CONSOLIDATED_TRANS_SUB].AUTH_CODE                
        ,[REPORT_CONSOLIDATED_TRANS_SUB].CREDITOR_DOCUMENT                
        ,[REPORT_CONSOLIDATED_TRANS_SUB].ORDER_CODE              
        ,CASE WHEN [REPORT_CONSOLIDATED_TRANS_SUB].COD_SITUATION_TITLE = @AwaitingSplit THEN 1 ELSE 0 END [AWAITINGSPLIT]          
        ,[REPORT_CONSOLIDATED_TRANS_SUB].MODEL_POS         
        ,[REPORT_CONSOLIDATED_TRANS_SUB].SEGMENT_EC          
        ,[REPORT_CONSOLIDATED_TRANS_SUB].STATE_EC          
        ,[REPORT_CONSOLIDATED_TRANS_SUB].CITY_EC          
        ,[REPORT_CONSOLIDATED_TRANS_SUB].NEIGHBORHOOD_EC          
        ,[REPORT_CONSOLIDATED_TRANS_SUB].COD_ADDRESS        
        ,[REPORT_CONSOLIDATED_TRANS_SUB].COD_ADDRESS        
        ,[REPORT_CONSOLIDATED_TRANS_SUB].TYPE_TRAN        
        ,[REPORT_CONSOLIDATED_TRANS_SUB].NAME_PROD    
 ,[REPORT_CONSOLIDATED_TRANS_SUB].NAME_PROD        
 ,[REPORT_CONSOLIDATED_TRANS_SUB].EC_PROD        
 ,[REPORT_CONSOLIDATED_TRANS_SUB].EC_PROD_CPF_CNPJ        
 ,ISNULL([REPORT_CONSOLIDATED_TRANS_SUB].PERCENT_PARTICIP_SPLIT,0) PERCENT_PARTICIP_SPLIT     
 ,[REPORT_CONSOLIDATED_TRANS_SUB].QTY_DAYS_ANTECIP
        ,[REPORT_CONSOLIDATED_TRANS_SUB].IS_PLANDZERO  
        ,[REPORT_CONSOLIDATED_TRANS_SUB].TAX_PLANDZERO  
    FROM [REPORT_CONSOLIDATED_TRANS_SUB]                                 
        WHERE REPORT_CONSOLIDATED_TRANS_SUB.COD_COMP = @CODCOMP                               
                       
    AND [REPORT_CONSOLIDATED_TRANS_SUB].COD_SITUATION = 3                          
';

	IF @INITIAL_DATE IS NOT NULL
		AND @FINAL_DATE IS NOT NULL
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
		' AND [REPORT_CONSOLIDATED_TRANS_SUB].TRANSACTION_DATE BETWEEN @INITIAL_DATE AND @FINAL_DATE  ');

	IF @EC IS NOT NULL
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND COD_EC = @EC ');
	IF @BRANCH IS NOT NULL
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, '  AND COD_BRANCH =  @BRANCH ');
	IF @DEPART IS NOT NULL
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND COD_DEPTO_BRANCH =  @DEPART ');
	IF (@CODAFF IS NOT NULL)
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND COD_AFFILIATOR = @CodAff ');
	IF LEN(@BRAND) > 0
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND BRAND = @BRAND ');
	IF LEN(@NSU) > 0
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND CODE = @NSU ');
	IF @PAN IS NOT NULL
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND PAN = @PAN ');
	IF (@SPLIT = 1)
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND SPLIT = 1');

	IF (@ISPlanDZero = 1)
		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND IS_PLANDZERO = 1');

	IF @CODACQUIRER IS NOT NULL
		SET @QUERY_BASIS =
		CONCAT(@QUERY_BASIS, ' AND ACQUIRER = (SELECT [NAME] FROM ACQUIRER WHERE COD_AC = @CODACQUIRER ) ');

	EXEC [sp_executesql] @QUERY_BASIS
						,N'                         
           @CODCOMP VARCHAR(10),                 
           @INITIAL_DATE DATE,                 
           @FINAL_DATE DATE,                
           @EC int,                 
           @BRANCH int,                 
           @DEPART int,               
           @TERMINAL varchar(100),                 
           @STATE varchar(25),                 
           @CITY varchar(40),                 
           @TYPE_TRAN int,                 
           @SITUATION int,                 
           @NSU varchar(100),                 
           @NSU_EXT varchar(100),                              
           @BRAND varchar(50) ,               
           @PAN VARCHAR(50),                 
           @CodAff INT,            
           @CODACQUIRER INT,          
           @AwaitingSplit INT = NULL  
           '
						,@CODCOMP = @CODCOMP
						,@INITIAL_DATE = @INITIAL_DATE
						,@FINAL_DATE = @FINAL_DATE
						,@EC = @EC
						,@BRANCH = @BRANCH
						,@DEPART = @DEPART
						,@TERMINAL = @TERMINAL
						,@STATE = @STATE
						,@CITY = @CITY
						,@TYPE_TRAN = @TYPE_TRAN
						,@SITUATION = @SITUATION
						,@NSU = @NSU
						,@NSU_EXT = @NSU_EXT
						,@BRAND = @BRAND
						,@PAN = @PAN
						,@CODAFF = @CODAFF
						,@CODACQUIRER = @CODACQUIRER
						,@AWAITINGSPLIT = @AWAITINGSPLIT;

END;