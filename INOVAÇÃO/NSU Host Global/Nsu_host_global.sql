

IF NOT EXISTS (SELECT
			1
		FROM sys.columns
		WHERE NAME = N'EXTERNAL_NSU_HOST'
		AND object_id = OBJECT_ID(N'[REPORT_TRANSACTIONS_EXP]'))
BEGIN
	ALTER TABLE REPORT_TRANSACTIONS_EXP
	ADD EXTERNAL_NSU_HOST VARCHAR(200)
END

GO

IF OBJECT_ID('VW_REPORT_TRANSACTIONS_EXP') IS NOT NULL
	DROP VIEW VW_REPORT_TRANSACTIONS_EXP
GO
CREATE VIEW [dbo].[VW_REPORT_TRANSACTIONS_EXP]
AS
/*----------------------------------------------------------------------------------------                                                        
Project.......: TKPP                                                        
------------------------------------------------------------------------------------------                                                        
Author                     VERSION        Date                Description                                                        
-------------------------------------------------------------------------------------                                                        
Marcus Gall                V1       28/11/2019             Add Model_POS, Segment, Location EC                                              
Caike Uchoa                v2       10/01/2020             add CNAE                                    
Kennedy Alef               v3       08/04/2020             add link de pagamento                              
Caike Uchoa                v4       30/04/2020             insert ec prod                              
Caike Uchoa                v5       17/08/2020             Add SALES_TYPE                   
Luiz Aquino                v6       01/07/2020             Add PlanDZero                  
Caike Uchoa                v7       31/08/2020             Add cod_ec_prod                  
Kennedy Alef               v8       02/09/2020             Add change calculations                       
Caike Uchoa                v9       28/09/2020             Add branch business                
Caike Uchoa                v10      29/09/2020             remove NET_VALUE                
Luiz Aquino                V11      2020-10-16             ET-1119 PIX              
------------------------------------------------------------------------------------------*/
WITH CTE
AS
(SELECT TOP (1000)
		[TRANSACTION].[COD_TRAN]
	   ,[TRANSACTION].[CODE] AS [TRANSACTION_CODE]
	   ,[TRANSACTION].[AMOUNT] AS [AMOUNT]
	   ,[TRANSACTION].[PLOTS] AS [PLOTS]
	   ,CAST([dbo].[FN_FUS_UTF]([TRANSACTION].[CREATED_AT]) AS DATETIME) AS [TRANSACTION_DATE]
	   ,[TRANSACTION_TYPE].[CODE] AS [TRANSACTION_TYPE]
	   ,[COMMERCIAL_ESTABLISHMENT].[CPF_CNPJ]
	   ,[COMMERCIAL_ESTABLISHMENT].[NAME]
	   ,[EQUIPMENT].[SERIAL] AS [SERIAL_EQUIP]
	   ,[EQUIPMENT].[TID] AS [TID]
	   ,[TRADUCTION_SITUATION].[SITUATION_TR] AS [SITUATION]
	   ,[TRANSACTION].[BRAND]
	   ,[TRANSACTION].[PAN]
	   ,[TRANSACTION_DATA_EXT].[NAME] AS [TRAN_DATA_EXT]
	   ,[TRANSACTION_DATA_EXT].[VALUE] AS [TRAN_DATA_EXT_VALUE]
	   ,(SELECT
				[TDE].[VALUE]
			FROM [TRANSACTION_DATA_EXT] TDE WITH (NOLOCK)
			WHERE [TDE].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
			AND [TDE].[NAME] = 'AUTHCODE')
		AS [AUTH_CODE]
	   ,[ACQUIRER].[COD_AC]
	   ,[ACQUIRER].[NAME] AS [NAME_ACQUIRER]
	   ,[TRANSACTION].[COMMENT] AS [COMMENT]
	   ,[ASS_TAX_DEPART].[PARCENTAGE] AS [TAX]
	   ,COALESCE([ASS_TAX_DEPART].[ANTICIPATION_PERCENTAGE], 0) AS [ANTICIPATION]
	   ,[AFFILIATOR].[COD_AFFILIATOR]
	   ,[AFFILIATOR].[NAME] AS [NAME_AFFILIATOR]
		--------------******------------                                                            
	   ,[TRANSACTION].[COD_TTYPE]
	   ,[COMPANY].[COD_COMP]
	   ,[BRANCH_EC].[COD_EC]
	   ,[BRANCH_EC].[COD_BRANCH]
	   ,[STATE].[NAME] AS [STATE_NAME]
	   ,[CITY].[NAME] AS [CITY_NAME]
	   ,[SITUATION].[COD_SITUATION]
	   ,[DEPARTMENTS_BRANCH].[COD_DEPTO_BRANCH]
	   ,COALESCE([POSWEB_DATA_TRANSACTION].[AMOUNT], 0) AS [GROSS_VALUE_AGENCY]
	   ,COALESCE([dbo].[FNC_ANT_VALUE_LIQ_TRAN]([POSWEB_DATA_TRANSACTION].[AMOUNT],
		[POSWEB_DATA_TRANSACTION].[MDR],
		[POSWEB_DATA_TRANSACTION].[PLOTS],
		[POSWEB_DATA_TRANSACTION].[ANTICIPATION]) -
		[POSWEB_DATA_TRANSACTION].[TARIFF],
		0) AS [NET_VALUE_AGENCY]
	   ,[SOURCE_TRANSACTION].[DESCRIPTION] AS [TYPE_TRAN]
	   ,[TRANSACTION].[COD_SOURCE_TRAN]
	   ,COALESCE([TRANSACTION].[POSWEB], 0) AS [POSWEB]
	   ,[SEGMENTS].[NAME] AS [SEGMENTS_NAME]
	   ,[TRANSACTION].[CREATED_AT]
	   ,[REPORT_TRANSACTIONS_EXP].[COD_TRAN] AS [REP_COD_TRAN]
	   ,[EC_TRAN].[COD_EC] AS [COD_EC_TRANS]
	   ,[EC_TRAN].[NAME] AS [TRANS_EC_NAME]
	   ,[EC_TRAN].[CPF_CNPJ] AS [TRANS_EC_CPF_CNPJ]
	   ,IIF((SELECT
				COUNT(*)
			FROM [TRANSACTION_SERVICES] TS (NOLOCK)
			WHERE [TS].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
			AND [TS].[COD_ITEM_SERVICE] IN (4, 19))
		> 0, 1, 0) AS [SPLIT]
	   ,[USERS].[IDENTIFICATION] AS [SALES_REP]
	   ,[USERS].[COD_USER] AS [COD_USER_REP]
	   ,COALESCE([TRANSACTION].[CREDITOR_DOCUMENT], 'NOT CREDITOR_DOCUMENT') AS [CREDITOR_DOCUMENT]
	   ,[SALES_REPRESENTATIVE].[COD_SALES_REP]
	   ,[EQUIPMENT_MODEL].[CODIGO] AS [MODEL_POS]
	   ,[TRANSACTION].[CARD_HOLDER_NAME] AS [CARD_NAME]
	   ,[SEGMENTS].[CNAE]
	   ,[TRANSACTION].[COD_USER]
	   ,[USER_TRAN].[IDENTIFICATION] AS [NAME_USER]
	   ,IIF((SELECT
				COUNT(*)
			FROM [TRANSACTION_SERVICES] TS (NOLOCK)
			WHERE [TS].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
			AND [TS].[COD_ITEM_SERVICE] = 10)
		> 0, 1, 0) AS [LINK_PAYMENT]
	   ,[TRANSACTION].[CUSTOMER_EMAIL]
	   ,[TRANSACTION].[CUSTOMER_IDENTIFICATION]
	   ,IIF((SELECT
				COUNT(*)
			FROM [TRANSACTION_SERVICES]
			WHERE [TRANSACTION_SERVICES].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
			AND [TRANSACTION_SERVICES].[COD_ITEM_SERVICE] = 10)
		> 0, [TRANSACTION].[TRACKING_TRANSACTION],
		NULL) AS [PAYMENT_LINK_TRACKING]
	   ,[TRAN_PROD].[NAME] AS [NAME_PRODUCT_EC]
	   ,[EC_PROD].[NAME] AS [EC_PRODUCT]
	   ,[EC_PROD].CPF_CNPJ AS [EC_PRODUCT_CPF_CNPJ]
	   ,[PROD_ACQ].[NAME] AS [SALES_TYPE]
	   ,(SELECT
				TS.TAX_PLANDZERO_EC
			FROM TRANSACTION_SERVICES TS WITH (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE isa
				ON TS.COD_ITEM_SERVICE = isa.COD_ITEM_SERVICE
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN
			AND isa.NAME = 'PlanDZero')
		AS PLAN_DZEROEC
	   ,(SELECT
				TS.TAX_PLANDZERO_AFF
			FROM TRANSACTION_SERVICES TS WITH (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE isa
				ON TS.COD_ITEM_SERVICE = isa.COD_ITEM_SERVICE
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN
			AND isa.NAME = 'PlanDZero')
		AS PLAN_DZEROAFF
	   ,[EC_PROD].COD_EC AS [COD_EC_PROD]
	   ,BRANCH_BUSINESS.[NAME] AS [BRANCH_BUSINESS_EC]
	   ,[TRANSACTION].LOGICAL_NUMBER_ACQ AS LOGICAL_NUMBER_ACQ
	   ,DATA_TID_AVAILABLE_EC.COD_AC AS COD_ACQ_SEGMENT
	   ,(SELECT TOP 1
				SERVICE_TAX
			FROM TRANSACTION_SERVICES TS (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE I
				ON TS.COD_ITEM_SERVICE = I.COD_ITEM_SERVICE
				AND I.NAME = 'PIX'
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN)
		AS [PIX_TAX_EC]
	   ,(SELECT TOP 1
				TAX_TYPE
			FROM TRANSACTION_SERVICES TS (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE I
				ON TS.COD_ITEM_SERVICE = I.COD_ITEM_SERVICE
				AND I.NAME = 'PIX'
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN)
		AS [PIX_TAX_TYPE]
	   ,(SELECT TOP 1
				SERVICE_TAX_AFF
			FROM TRANSACTION_SERVICES TS (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE I
				ON TS.COD_ITEM_SERVICE = I.COD_ITEM_SERVICE
				AND I.NAME = 'PIX'
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN)
		AS [PIX_TAX_AFF]
	   ,(SELECT TOP 1
				TAX_TYPE_AFF
			FROM TRANSACTION_SERVICES TS (NOLOCK)
			JOIN ITEMS_SERVICES_AVAILABLE I
				ON TS.COD_ITEM_SERVICE = I.COD_ITEM_SERVICE
				AND I.NAME = 'PIX'
			WHERE TS.COD_TRAN = [TRANSACTION].COD_TRAN)
		AS [PIX_TAX_TYPE_AFF]
	   ,(SELECT
				[VALUE]
			FROM TRANSACTION_DATA_EXT
			WHERE COD_TRAN = [TRANSACTION].COD_TRAN
			AND [NAME] = 'EMAIL')
		AS EMAIL
	   ,[TRANSACTION].TERMINAL_VERSION
	   ,[TRANSACTION].CARD_HOLDER_DOC
	   ,(SELECT TOP 1
				[TDE].[VALUE]
			FROM [TRANSACTION_DATA_EXT] TDE WITH (NOLOCK)
			WHERE [TDE].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
			AND [TDE].[NAME] = 'NSU_HOST'
			ORDER BY COD_DATA_EXT DESC)
		AS EXTERNAL_NSU_HOST
	FROM [TRANSACTION] WITH (NOLOCK)
	LEFT JOIN [dbo].[PROCESS_BG_STATUS]
		ON ([PROCESS_BG_STATUS].[CODE] = [TRANSACTION].[COD_TRAN])
	LEFT JOIN [ASS_DEPTO_EQUIP]
		ON [ASS_DEPTO_EQUIP].[COD_ASS_DEPTO_TERMINAL] = [TRANSACTION].[COD_ASS_DEPTO_TERMINAL]
	LEFT JOIN [EQUIPMENT]
		ON [EQUIPMENT].[COD_EQUIP] = [ASS_DEPTO_EQUIP].[COD_EQUIP]
	LEFT JOIN [DEPARTMENTS_BRANCH]
		ON [DEPARTMENTS_BRANCH].[COD_DEPTO_BRANCH] = [ASS_DEPTO_EQUIP].[COD_DEPTO_BRANCH]
	LEFT JOIN [DEPARTMENTS]
		ON [DEPARTMENTS].[COD_DEPARTS] = [DEPARTMENTS_BRANCH].[COD_DEPARTS]
	LEFT JOIN [BRANCH_EC]
		ON [BRANCH_EC].[COD_BRANCH] = [DEPARTMENTS_BRANCH].[COD_BRANCH]
	LEFT JOIN [ADDRESS_BRANCH]
		ON [ADDRESS_BRANCH].[COD_BRANCH] = [BRANCH_EC].[COD_BRANCH]
	LEFT JOIN [NEIGHBORHOOD]
		ON [NEIGHBORHOOD].[COD_NEIGH] = [ADDRESS_BRANCH].[COD_NEIGH]
	LEFT JOIN [ASS_TAX_DEPART]
		ON [ASS_TAX_DEPART].[COD_ASS_TX_DEP] = [TRANSACTION].[COD_ASS_TX_DEP]
	LEFT JOIN [PLAN]
		ON [PLAN].[COD_PLAN] = [ASS_TAX_DEPART].[COD_PLAN]
	LEFT JOIN [CITY]
		ON [CITY].[COD_CITY] = [NEIGHBORHOOD].[COD_CITY]
	LEFT JOIN [STATE]
		ON [STATE].[COD_STATE] = [CITY].[COD_STATE]
	LEFT JOIN [COMMERCIAL_ESTABLISHMENT]
		ON [COMMERCIAL_ESTABLISHMENT].[COD_EC] = [BRANCH_EC].[COD_EC]
	LEFT JOIN [COMPANY]
		ON [COMPANY].[COD_COMP] = [COMMERCIAL_ESTABLISHMENT].[COD_COMP]
	LEFT JOIN [TRANSACTION_TYPE]
		ON [TRANSACTION_TYPE].[COD_TTYPE] = [TRANSACTION].[COD_TTYPE]
	LEFT JOIN [SITUATION]
		ON [SITUATION].[COD_SITUATION] = [TRANSACTION].[COD_SITUATION]
	LEFT JOIN [TRADUCTION_SITUATION]
		ON [TRADUCTION_SITUATION].[COD_SITUATION] = [SITUATION].[COD_SITUATION]
	LEFT JOIN [SEGMENTS]
		ON [SEGMENTS].[COD_SEG] = [COMMERCIAL_ESTABLISHMENT].[COD_SEG]
	LEFT JOIN [dbo].[REPORT_TRANSACTIONS_EXP]
		ON ([REPORT_TRANSACTIONS_EXP].[COD_TRAN] = [TRANSACTION].[COD_TRAN])
	LEFT JOIN [TRANSACTION_DATA_EXT] WITH (NOLOCK)
		ON [TRANSACTION_DATA_EXT].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
	LEFT JOIN [AFFILIATOR]
		ON [AFFILIATOR].[COD_AFFILIATOR] = [COMMERCIAL_ESTABLISHMENT].[COD_AFFILIATOR]
	LEFT JOIN [POSWEB_DATA_TRANSACTION]
		ON [POSWEB_DATA_TRANSACTION].[COD_TRAN] = [TRANSACTION].[COD_TRAN]
	LEFT JOIN [dbo].[SOURCE_TRANSACTION] WITH (NOLOCK)
		ON ([SOURCE_TRANSACTION].[COD_SOURCE_TRAN] = [TRANSACTION].[COD_SOURCE_TRAN])
	LEFT JOIN [COMMERCIAL_ESTABLISHMENT] AS [EC_TRAN] WITH (NOLOCK)
		ON [EC_TRAN].[COD_EC] = [TRANSACTION].[COD_EC]
	LEFT JOIN [SALES_REPRESENTATIVE]
		ON [SALES_REPRESENTATIVE].[COD_SALES_REP] = [COMMERCIAL_ESTABLISHMENT].[COD_SALES_REP]
	LEFT JOIN [USERS]
		ON [USERS].[COD_USER] = [SALES_REPRESENTATIVE].[COD_USER]
	LEFT JOIN [USERS] AS [USER_TRAN]
		ON [USER_TRAN].[COD_USER] = [TRANSACTION].[COD_USER]
	LEFT JOIN [ASS_TR_TYPE_COMP]
		ON [ASS_TR_TYPE_COMP].[COD_ASS_TR_COMP] = [TRANSACTION].[COD_ASS_TR_COMP]
	LEFT JOIN [ACQUIRER]
		ON [ACQUIRER].[COD_AC] = [ASS_TR_TYPE_COMP].[COD_AC]
	LEFT JOIN [EQUIPMENT_MODEL] WITH (NOLOCK)
		ON [EQUIPMENT_MODEL].[COD_MODEL] = [EQUIPMENT].[COD_MODEL]
	LEFT JOIN TRANSACTION_PRODUCTS AS [TRAN_PROD] WITH (NOLOCK)
		ON [TRAN_PROD].COD_TRAN_PROD = [TRANSACTION].COD_TRAN_PROD
	LEFT JOIN COMMERCIAL_ESTABLISHMENT AS [EC_PROD] WITH (NOLOCK)
		ON [EC_PROD].COD_EC = [TRAN_PROD].COD_EC
	LEFT JOIN PRODUCTS_ACQUIRER AS [PROD_ACQ] WITH (NOLOCK)
		ON [PROD_ACQ].COD_PR_ACQ = [TRANSACTION].COD_PR_ACQ
	LEFT JOIN BRANCH_BUSINESS
		ON BRANCH_BUSINESS.COD_BRANCH_BUSINESS = COMMERCIAL_ESTABLISHMENT.COD_BRANCH_BUSINESS
	LEFT JOIN DATA_TID_AVAILABLE_EC
		ON DATA_TID_AVAILABLE_EC.TID = [TRANSACTION].LOGICAL_NUMBER_ACQ
		AND DATA_TID_AVAILABLE_EC.ACTIVE = 1
	WHERE [ADDRESS_BRANCH].[ACTIVE] = 1
	AND [PROCESS_BG_STATUS].[STATUS_PROCESSED] = 0
	AND [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1
	AND COALESCE([TRANSACTION_DATA_EXT].[NAME], '0') IN ('NSU', 'RCPTTXID', 'AUTO', '0')
	AND DATEADD(MINUTE, -5, GETDATE()) > [TRANSACTION].[CREATED_AT])

SELECT
	CTE.COD_TRAN
   ,CTE.TRANSACTION_CODE
   ,CTE.AMOUNT
   ,CTE.PLOTS
   ,CTE.TRANSACTION_DATE
   ,CTE.TRANSACTION_TYPE
   ,CTE.CPF_CNPJ
   ,CTE.[NAME]
   ,CTE.SERIAL_EQUIP
   ,CTE.TID
   ,CTE.SITUATION
   ,CTE.BRAND
   ,CTE.PAN
   ,CTE.TRAN_DATA_EXT
   ,CTE.TRAN_DATA_EXT_VALUE
   ,CTE.AUTH_CODE
   ,CTE.COD_AC
   ,CTE.NAME_ACQUIRER
   ,CTE.COMMENT
   ,CTE.TAX
   ,CTE.ANTICIPATION
   ,CTE.COD_AFFILIATOR
   ,CTE.NAME_AFFILIATOR
   ,CTE.COD_TTYPE
   ,CTE.COD_COMP
   ,CTE.COD_EC
   ,CTE.COD_BRANCH
   ,CTE.STATE_NAME
   ,CTE.CITY_NAME
   ,CTE.COD_SITUATION
   ,CTE.COD_DEPTO_BRANCH
   ,CTE.GROSS_VALUE_AGENCY
   ,CTE.NET_VALUE_AGENCY
   ,CTE.TYPE_TRAN
   ,CTE.COD_SOURCE_TRAN
   ,CTE.POSWEB
   ,CTE.SEGMENTS_NAME
   ,CTE.CREATED_AT
   ,CTE.REP_COD_TRAN
   ,CTE.COD_EC_TRANS
   ,CTE.TRANS_EC_NAME
   ,CTE.TRANS_EC_CPF_CNPJ
   ,CTE.SPLIT
   ,CTE.SALES_REP
   ,CTE.COD_USER_REP
   ,CTE.CREDITOR_DOCUMENT
   ,CTE.COD_SALES_REP
   ,CTE.MODEL_POS
   ,CTE.CARD_NAME
   ,CTE.CNAE
   ,CTE.COD_USER
   ,CTE.NAME_USER
   ,CTE.LINK_PAYMENT
   ,CTE.CUSTOMER_EMAIL
   ,CTE.CUSTOMER_IDENTIFICATION
   ,CTE.PAYMENT_LINK_TRACKING
   ,CTE.NAME_PRODUCT_EC
   ,CTE.EC_PRODUCT
   ,CTE.EC_PRODUCT_CPF_CNPJ
   ,CTE.SALES_TYPE
   ,CTE.PLAN_DZEROEC
   ,CTE.PLAN_DZEROAFF
   ,CTE.COD_EC_PROD
   ,CTE.BRANCH_BUSINESS_EC
   ,CTE.LOGICAL_NUMBER_ACQ
   ,CTE.COD_ACQ_SEGMENT
   ,CTE.PIX_TAX_EC
   ,CTE.PIX_TAX_TYPE
   ,CTE.TERMINAL_VERSION
   ,CTE.EMAIL
   ,CTE.PIX_TAX_AFF
   ,CTE.PIX_TAX_TYPE_AFF
   ,CTE.CARD_HOLDER_DOC
   ,CTE.EXTERNAL_NSU_HOST
FROM CTE

GO
GO

IF OBJECT_ID('SP_REG_REPORT_TRANSACTIONS_EXP') IS NOT NULL
	DROP PROCEDURE SP_REG_REPORT_TRANSACTIONS_EXP
GO

CREATE PROCEDURE [dbo].[SP_REG_REPORT_TRANSACTIONS_EXP]

/*****************************************************************************************************************        
----------------------------------------------------------------------------------------        
 Procedure Name: [SP_REG_REPORT_TRANSACTIONS_EXP]        
 Project.......: TKPP        
 ------------------------------------------------------------------------------------------        
 Author                          VERSION        Date                            Description        
 ------------------------------------------------------------------------------------------        
 Fernando Henrique F.             V1       13/12/2018                          Creation        
 Lucas Aguiar                     V2       23-04-2019                      ROTINA DE SPLIT        
 Caike Uch?a                      V3       15/08/2019                       inserting coluns        
 Marcus Gall                      V4       28/11/2019              Add Model_POS, Segment, Location EC        
 Caike Uch?a                      V5       20/01/2020                            ADD CNAE        
 Kennedy Alef                     v6       08/04/2020                      add link de pagamento        
 Caike Uch?a                      v7       30/04/2020                        insert ec prod        
 Caike Uch?a                      V8       06/08/2020                    Add [AMOUNT] to reprocess        
 Caike Uch?a                      V9       17/08/2020                        Add SALES_TYPE        
 Luiz Aquino                      v10      01/07/2020                         add PlanDzero        
 Caike Uchoa                      V11      31/08/2020                        Add Cod_ec_prod        
 Caike Uchoa                      v12      28/09/2020                        Add branch business        
 Caike Uchoa                      v10      29/09/2020                        Add NET_VALUE        
 ------------------------------------------------------------------------------------------        
*****************************************************************************************************************/

AS
BEGIN




	DECLARE @COUNT INT = 0;





	BEGIN

		---------------------------------------------        
		--------------RECORDS INSERT-----------------        
		---------------------------------------------        
		SELECT
			[VW_REPORT_TRANSACTIONS_EXP].[COD_TRAN]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_CODE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[AMOUNT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[PLOTS]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_DATE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRANSACTION_TYPE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CPF_CNPJ]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SERIAL_EQUIP]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TID]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SITUATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[BRAND]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[PAN]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRAN_DATA_EXT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRAN_DATA_EXT_VALUE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[AUTH_CODE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_AC]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_ACQUIRER]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COMMENT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TAX]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[ANTICIPATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_AFFILIATOR]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_AFFILIATOR]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_COMP]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_BRANCH]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[STATE_NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CITY_NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SITUATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_DEPTO_BRANCH]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[GROSS_VALUE_AGENCY]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NET_VALUE_AGENCY]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TYPE_TRAN]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SOURCE_TRAN]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[POSWEB]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SEGMENTS_NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC_TRANS]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRANS_EC_NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[TRANS_EC_CPF_CNPJ]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SPLIT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CREATED_AT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SALES_REP]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER_REP]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CREDITOR_DOCUMENT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SALES_REP]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[MODEL_POS]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CARD_NAME]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CNAE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_USER]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[LINK_PAYMENT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CUSTOMER_EMAIL]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[CUSTOMER_IDENTIFICATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[PAYMENT_LINK_TRACKING]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_PRODUCT_EC]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[EC_PRODUCT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[EC_PRODUCT_CPF_CNPJ]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SALES_TYPE]
		   ,[VW_REPORT_TRANSACTIONS_EXP].PLAN_DZEROEC
		   ,[VW_REPORT_TRANSACTIONS_EXP].PLAN_DZEROAFF
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_EC_PROD]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[BRANCH_BUSINESS_EC]
		   ,CAST(0 AS DECIMAL(22, 6)) AS NET_VALUE
		   ,[VW_REPORT_TRANSACTIONS_EXP].[LOGICAL_NUMBER_ACQ]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_ACQ_SEGMENT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].PIX_TAX_EC
		   ,[VW_REPORT_TRANSACTIONS_EXP].PIX_TAX_TYPE
		   ,VW_REPORT_TRANSACTIONS_EXP.TERMINAL_VERSION
		   ,[VW_REPORT_TRANSACTIONS_EXP].EMAIL
		   ,[VW_REPORT_TRANSACTIONS_EXP].PIX_TAX_AFF
		   ,[VW_REPORT_TRANSACTIONS_EXP].PIX_TAX_TYPE_AFF
		   ,[VW_REPORT_TRANSACTIONS_EXP].CARD_HOLDER_DOC
		   ,[VW_REPORT_TRANSACTIONS_EXP].EXTERNAL_NSU_HOST INTO #TB_REPORT_TRANSACTIONS_EXP_INSERT
		FROM [dbo].[VW_REPORT_TRANSACTIONS_EXP]
		WHERE [VW_REPORT_TRANSACTIONS_EXP].[REP_COD_TRAN] IS NULL;


		SELECT
			TRANSACTION_TITLES.COD_EC
		   ,[TRANSACTION].COD_TRAN
		   ,TRANSACTION_SERVICES.TAX_PLANDZERO_EC INTO #TEMP_DZERO
		FROM TRANSACTION_SERVICES
		INNER JOIN ITEMS_SERVICES_AVAILABLE
			ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE
		JOIN #TB_REPORT_TRANSACTIONS_EXP_INSERT
			ON #TB_REPORT_TRANSACTIONS_EXP_INSERT.COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
		JOIN TRANSACTION_TITLES WITH (NOLOCK)
			ON TRANSACTION_TITLES.COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
				AND TRANSACTION_TITLES.COD_EC = TRANSACTION_SERVICES.COD_EC
		JOIN [TRANSACTION] WITH (NOLOCK)
			ON [TRANSACTION].COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
		WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'
		GROUP BY TRANSACTION_TITLES.COD_EC
				,[TRANSACTION].COD_TRAN
				,TRANSACTION_SERVICES.TAX_PLANDZERO_EC


		SELECT
			[TRANSACTION].COD_TRAN
		   ,CASE
				WHEN (
					#TEMP_DZERO.TAX_PLANDZERO_EC
					)
					> 0 THEN SUM(
					dbo.FNC_CALC_DZERO_NET_VALUE_CONSOLIDATED(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.PLOT,
					TRANSACTION_TITLES.TAX_INITIAL,
					TRANSACTION_TITLES.ANTICIP_PERCENT,
					(
					#TEMP_DZERO.TAX_PLANDZERO_EC
					)
					, [TRANSACTION].COD_TTYPE))
				ELSE CASE
						WHEN [TRANSACTION_TITLES].COD_TRAN IS NOT NULL THEN SUM(dbo.[FNC_ANT_VALUE_LIQ_DAYS](
							TRANSACTION_TITLES.AMOUNT,
							TRANSACTION_TITLES.TAX_INITIAL,
							TRANSACTION_TITLES.PLOT,
							TRANSACTION_TITLES.ANTICIP_PERCENT,
							(CASE
								WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY,
									TRANSACTION_TITLES.PREVISION_PAY_DATE,
									TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
								ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
							END)))
						ELSE 0
					END
			END AS NET_VALUE INTO #TEMP_NET
		FROM [TRANSACTION] WITH (NOLOCK)
		LEFT JOIN [TRANSACTION_TITLES] WITH (NOLOCK)
			ON [TRANSACTION_TITLES].COD_TRAN = [TRANSACTION].COD_TRAN
		LEFT JOIN #TEMP_DZERO
			ON #TEMP_DZERO.COD_TRAN = TRANSACTION_TITLES.COD_TRAN
				AND #TEMP_DZERO.COD_EC = TRANSACTION_TITLES.COD_EC

		WHERE [TRANSACTION].COD_TRAN IN (SELECT
				COD_TRAN
			FROM #TB_REPORT_TRANSACTIONS_EXP_INSERT)
		GROUP BY TRANSACTION_TITLES.COD_TRAN
				,[TRANSACTION].COD_TRAN
				,#TEMP_DZERO.TAX_PLANDZERO_EC


		UPDATE #TB_REPORT_TRANSACTIONS_EXP_INSERT
		SET NET_VALUE = (SELECT
				NET_VALUE
			FROM #TEMP_NET
			WHERE COD_TRAN = #TB_REPORT_TRANSACTIONS_EXP_INSERT.COD_TRAN)
		FROM #TB_REPORT_TRANSACTIONS_EXP_INSERT


		SELECT
			@COUNT = COUNT(*)
		FROM [#TB_REPORT_TRANSACTIONS_EXP_INSERT];

		IF @COUNT > 0
		BEGIN
			INSERT INTO [dbo].[REPORT_TRANSACTIONS_EXP] ([COD_TRAN],
			[TRANSACTION_CODE],
			[AMOUNT],
			[PLOTS],
			[TRANSACTION_DATE],
			[TRANSACTION_TYPE],
			[CPF_CNPJ],
			[NAME],
			[SERIAL_EQUIP],
			[TID],
			[SITUATION],
			[BRAND],
			[PAN],
			[TRAN_DATA_EXT],
			[TRAN_DATA_EXT_VALUE],
			[AUTH_CODE],
			[COD_AC],
			[NAME_ACQUIRER],
			[COMMENT],
			[TAX],
			[ANTICIPATION],
			[COD_AFFILIATOR],
			[NAME_AFFILIATOR],
			[NET_VALUE],
			[COD_COMP],
			[COD_EC],
			[COD_BRANCH],
			[STATE_NAME],
			[CITY_NAME],
			[COD_SITUATION],
			[COD_DEPTO_BRANCH],
			[GROSS_VALUE_AGENCY],
			[NET_VALUE_AGENCY],
			[TYPE_TRAN],
			[COD_SOURCE_TRAN],
			[POSWEB],
			[SEGMENTS_NAME],
			[CREATED_TRANSACTION_DATE],
			[COD_EC_TRANS],
			[TRANS_EC_NAME],
			[TRANS_EC_CPF_CNPJ],
			[SPLIT],
			[SALES_REP],
			[COD_USER_REP],
			[MODIFY_DATE],
			[CREDITOR_DOCUMENT],
			[COD_SALES_REP],
			[MODEL_POS],
			[CARD_NAME],
			[CNAE],
			[COD_USER],
			[NAME_USER],
			[LINK_PAYMENT_SERVICE],
			[CUSTOMER_EMAIL],
			[CUSTOMER_IDENTIFICATION],
			[PAYMENT_LINK_TRACKING],
			[NAME_PRODUCT_EC],
			[EC_PRODUCT],
			[EC_PRODUCT_CPF_CNPJ],
			[SALES_TYPE],
			DZERO_EC_TAX,
			DZERO_AFF_TAX,
			[COD_EC_PROD],
			[BRANCH_BUSINESS],
			LOGICAL_NUMBER_ACQ,
			COD_ACQ_SEGMENT,
			PIX_TAX_EC,
			PIX_TAX_TYPE,
			TERMINAL_VERSION,
			EMAIL,
			PIX_TAX_TYPE_AFF,
			PIX_TAX_AFF,
			CARD_HOLDER_DOC,
			EXTERNAL_NSU_HOST)
				(SELECT
					[TEMP].[COD_TRAN]
				   ,[TEMP].[TRANSACTION_CODE]
				   ,[TEMP].[AMOUNT]
				   ,[TEMP].[PLOTS]
				   ,[TEMP].[TRANSACTION_DATE]
				   ,[TEMP].[TRANSACTION_TYPE]
				   ,[TEMP].[CPF_CNPJ]
				   ,[TEMP].[NAME]
				   ,[TEMP].[SERIAL_EQUIP]
				   ,[TEMP].[TID]
				   ,[TEMP].[SITUATION]
				   ,[TEMP].[BRAND]
				   ,[TEMP].[PAN]
				   ,[TEMP].[TRAN_DATA_EXT]
				   ,[TEMP].[TRAN_DATA_EXT_VALUE]
				   ,[TEMP].[AUTH_CODE]
				   ,[TEMP].[COD_AC]
				   ,[TEMP].[NAME_ACQUIRER]
				   ,[TEMP].[COMMENT]
				   ,[TEMP].[TAX]
				   ,[TEMP].[ANTICIPATION]
				   ,[TEMP].[COD_AFFILIATOR]
				   ,[TEMP].[NAME_AFFILIATOR]
				   ,[TEMP].[NET_VALUE]
				   ,[TEMP].[COD_COMP]
				   ,[TEMP].[COD_EC]
				   ,[TEMP].[COD_BRANCH]
				   ,[TEMP].[STATE_NAME]
				   ,[TEMP].[CITY_NAME]
				   ,[TEMP].[COD_SITUATION]
				   ,[TEMP].[COD_DEPTO_BRANCH]
				   ,[TEMP].[GROSS_VALUE_AGENCY]
				   ,[TEMP].[NET_VALUE_AGENCY]
				   ,[TEMP].[TYPE_TRAN]
				   ,[TEMP].[COD_SOURCE_TRAN]
				   ,[TEMP].[POSWEB]
				   ,[TEMP].[SEGMENTS_NAME]
				   ,[TEMP].[CREATED_AT]
				   ,[TEMP].[COD_EC_TRANS]
				   ,[TEMP].[TRANS_EC_NAME]
				   ,[TEMP].[TRANS_EC_CPF_CNPJ]
				   ,[TEMP].[SPLIT]
				   ,[SALES_REP]
				   ,[COD_USER_REP]
				   ,GETDATE()
				   ,[CREDITOR_DOCUMENT]
				   ,[COD_SALES_REP]
				   ,[TEMP].[MODEL_POS]
				   ,[CARD_NAME]
				   ,[CNAE]
				   ,[COD_USER]
				   ,[NAME_USER]
				   ,[LINK_PAYMENT]
				   ,[CUSTOMER_EMAIL]
				   ,[CUSTOMER_IDENTIFICATION]
				   ,[TEMP].[PAYMENT_LINK_TRACKING]
				   ,[TEMP].[NAME_PRODUCT_EC]
				   ,[TEMP].[EC_PRODUCT]
				   ,[TEMP].[EC_PRODUCT_CPF_CNPJ]
				   ,[TEMP].[SALES_TYPE]
				   ,[TEMP].PLAN_DZEROEC
				   ,[TEMP].PLAN_DZEROAFF
				   ,[TEMP].[COD_EC_PROD]
				   ,[TEMP].[BRANCH_BUSINESS_EC]
				   ,TEMP.LOGICAL_NUMBER_ACQ
				   ,TEMP.COD_ACQ_SEGMENT
				   ,[TEMP].PIX_TAX_EC
				   ,[TEMP].PIX_TAX_TYPE
				   ,TEMP.TERMINAL_VERSION
				   ,[TEMP].EMAIL
				   ,[TEMP].PIX_TAX_TYPE_AFF
				   ,[TEMP].PIX_TAX_AFF
				   ,[TEMP].CARD_HOLDER_DOC
				   ,TEMP.EXTERNAL_NSU_HOST
				FROM [#TB_REPORT_TRANSACTIONS_EXP_INSERT] AS [TEMP]);

			IF @@rowcount < 1
				THROW 60000, 'COULD NOT REGISTER [REPORT_TRANSACTIONS_EXP] ', 1;

			UPDATE [PROCESS_BG_STATUS]
			SET [STATUS_PROCESSED] = 1
			   ,[MODIFY_DATE] = GETDATE()
			FROM [PROCESS_BG_STATUS]
			INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_INSERT]
				ON ([PROCESS_BG_STATUS].[CODE] = [#TB_REPORT_TRANSACTIONS_EXP_INSERT].[COD_TRAN])
			WHERE [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1;

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](INSERT)', 1;
		END;


		---------------------------------------------        
		--------------RECORDS UPDATE-----------------        
		---------------------------------------------        
		SELECT
			[VW_REPORT_TRANSACTIONS_EXP].[COD_TRAN]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[SITUATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COMMENT]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_SITUATION]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[COD_USER]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[NAME_USER]
		   ,[VW_REPORT_TRANSACTIONS_EXP].[AMOUNT]
		   ,CAST(0 AS DECIMAL(22, 6)) AS [NET_VALUE] INTO [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]
		FROM [dbo].[VW_REPORT_TRANSACTIONS_EXP]
		WHERE [VW_REPORT_TRANSACTIONS_EXP].[REP_COD_TRAN] IS NOT NULL;


		SELECT
			TRANSACTION_TITLES.COD_EC
		   ,[TRANSACTION].COD_TRAN
		   ,TRANSACTION_SERVICES.TAX_PLANDZERO_EC INTO #TEMP_DZERO_2
		FROM TRANSACTION_SERVICES
		INNER JOIN ITEMS_SERVICES_AVAILABLE
			ON TRANSACTION_SERVICES.COD_ITEM_SERVICE = ITEMS_SERVICES_AVAILABLE.COD_ITEM_SERVICE
		JOIN #TB_REPORT_TRANSACTIONS_EXP_INSERT
			ON #TB_REPORT_TRANSACTIONS_EXP_INSERT.COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
		JOIN TRANSACTION_TITLES WITH (NOLOCK)
			ON TRANSACTION_TITLES.COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
				AND TRANSACTION_TITLES.COD_EC = TRANSACTION_SERVICES.COD_EC
		JOIN [TRANSACTION] WITH (NOLOCK)
			ON [TRANSACTION].COD_TRAN = TRANSACTION_SERVICES.COD_TRAN
		WHERE ITEMS_SERVICES_AVAILABLE.NAME = 'PlanDZero'
		GROUP BY TRANSACTION_TITLES.COD_EC
				,[TRANSACTION].COD_TRAN
				,TRANSACTION_SERVICES.TAX_PLANDZERO_EC


		SELECT
			[TRANSACTION].COD_TRAN
		   ,CASE
				WHEN (
					#TEMP_DZERO_2.TAX_PLANDZERO_EC
					)
					> 0 THEN SUM(
					dbo.FNC_CALC_DZERO_NET_VALUE_CONSOLIDATED(TRANSACTION_TITLES.AMOUNT, TRANSACTION_TITLES.PLOT,
					TRANSACTION_TITLES.TAX_INITIAL,
					TRANSACTION_TITLES.ANTICIP_PERCENT, (
					#TEMP_DZERO_2.TAX_PLANDZERO_EC
					)
					, [TRANSACTION].COD_TTYPE))
				ELSE CASE
						WHEN [TRANSACTION_TITLES].COD_TRAN IS NOT NULL THEN SUM(dbo.[FNC_ANT_VALUE_LIQ_DAYS](
							TRANSACTION_TITLES.AMOUNT,
							TRANSACTION_TITLES.TAX_INITIAL,
							TRANSACTION_TITLES.PLOT,
							TRANSACTION_TITLES.ANTICIP_PERCENT,
							(CASE
								WHEN TRANSACTION_TITLES.IS_SPOT = 1 THEN DATEDIFF(DAY,
									TRANSACTION_TITLES.PREVISION_PAY_DATE,
									TRANSACTION_TITLES.ORIGINAL_RECEIVE_DATE)
								ELSE TRANSACTION_TITLES.QTY_DAYS_ANTECIP
							END)))
						ELSE 0
					END
			END AS NET_VALUE INTO #TEMP_NET_2
		FROM [TRANSACTION] WITH (NOLOCK)
		LEFT JOIN [TRANSACTION_TITLES] WITH (NOLOCK)
			ON [TRANSACTION_TITLES].COD_TRAN = [TRANSACTION].COD_TRAN
		LEFT JOIN #TEMP_DZERO_2
			ON #TEMP_DZERO_2.COD_TRAN = TRANSACTION_TITLES.COD_TRAN
				AND #TEMP_DZERO_2.COD_EC = TRANSACTION_TITLES.COD_EC
		WHERE [TRANSACTION].COD_TRAN IN (SELECT
				COD_TRAN
			FROM #TB_REPORT_TRANSACTIONS_EXP_UPDATE)
		GROUP BY TRANSACTION_TITLES.COD_TRAN
				,[TRANSACTION].COD_TRAN
				,#TEMP_DZERO_2.TAX_PLANDZERO_EC


		UPDATE #TB_REPORT_TRANSACTIONS_EXP_UPDATE
		SET NET_VALUE = (SELECT
				NET_VALUE
			FROM #TEMP_NET_2
			WHERE COD_TRAN = #TB_REPORT_TRANSACTIONS_EXP_UPDATE.COD_TRAN)
		FROM #TB_REPORT_TRANSACTIONS_EXP_UPDATE


		SELECT
			@COUNT = COUNT(*)
		FROM [#TB_REPORT_TRANSACTIONS_EXP_UPDATE];

		IF @COUNT > 0
		BEGIN
			UPDATE [REPORT_TRANSACTIONS_EXP]
			SET [REPORT_TRANSACTIONS_EXP].[SITUATION] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[SITUATION]
			   ,[REPORT_TRANSACTIONS_EXP].[COD_SITUATION] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_SITUATION]
			   ,[REPORT_TRANSACTIONS_EXP].[COMMENT] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COMMENT]
			   ,[REPORT_TRANSACTIONS_EXP].[MODIFY_DATE] = GETDATE()
			   ,[REPORT_TRANSACTIONS_EXP].[COD_USER] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_USER]
			   ,[REPORT_TRANSACTIONS_EXP].[NAME_USER] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[NAME_USER]
			   ,[REPORT_TRANSACTIONS_EXP].[AMOUNT] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[AMOUNT]
			   ,[REPORT_TRANSACTIONS_EXP].NET_VALUE = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[NET_VALUE]
			FROM [REPORT_TRANSACTIONS_EXP]
			INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]
				ON ([REPORT_TRANSACTIONS_EXP].[COD_TRAN] =
				[#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_TRAN]);

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [REPORT_TRANSACTIONS_EX]', 1;

			UPDATE [PROCESS_BG_STATUS]
			SET [STATUS_PROCESSED] = 1
			   ,[MODIFY_DATE] = GETDATE()
			FROM [PROCESS_BG_STATUS]
			INNER JOIN [#TB_REPORT_TRANSACTIONS_EXP_UPDATE]
				ON ([PROCESS_BG_STATUS].[CODE] = [#TB_REPORT_TRANSACTIONS_EXP_UPDATE].[COD_TRAN])
			WHERE [PROCESS_BG_STATUS].[COD_SOURCE_PROCESS] = 1;

			IF @@rowcount < 1
				THROW 60001, 'COULD NOT UPDATE [PROCESS_BG_STATUS](UPDATE)', 1;
		END;
	END;
END;

GO

IF OBJECT_ID('SP_REPORT_TRANSACTIONS_EXP') IS NOT NULL
	DROP PROCEDURE SP_REPORT_TRANSACTIONS_EXP
GO
CREATE PROCEDURE [dbo].[SP_REPORT_TRANSACTIONS_EXP]
/***************************************************************************************              
----------------------------------------------------------------------------------------              
Procedure Name: [SP_REPORT_TRANSACTIONS_EXP]              
Project.......: TKPP              
------------------------------------------------------------------------------------------              
Author               VERSION         Date                     Description              
------------------------------------------------------------------------------------------              
Fernando Henrique F.   V1         13/12/2018               Creation              
Kennedy Alef           V2         16/01/2018               Modify              
Lucas Aguiar           V2         23/04/2019               ROTINA DE SPLIT              
Caike Uch?a            V3         15/08/2019               inserting coluns              
Marcus Gall            V4         28/11/2019               Add Model_POS, Segment, Location EC              
Caike Uch?a            V5         20/01/2020               ADD CNAE              
Kennedy Alef           v3         08/04/2020               add link de pagamento              
Caike Uch?a            v4         30/04/2020               insert ec prod              
Caike Uch?a            v5         17/08/2020               Add SALES_TYPE              
Luiz Aquino            v6         01/07/2020                 add PlanDzero              
Caike Uchoa            v7         31/08/2020               Add cod_ec_prod              
 Caike Uchoa           v12        28/09/2020               Add branch business              
Elir Ribeiro           v13        24/11/2020              terminal length to 100              
---------------------------------------------           ---------------------------------------------              
********************************************************************************************/ (@CODCOMP VARCHAR(10),
@INITIAL_DATE DATETIME,
@FINAL_DATE DATETIME,
@EC VARCHAR(10),
@BRANCH VARCHAR(10),
@DEPART VARCHAR(10),
@TERMINAL VARCHAR(100),
@STATE VARCHAR(100),
@CITY VARCHAR(100),
@TYPE_TRAN VARCHAR(10),
@SITUATION VARCHAR(10),
@NSU VARCHAR(100) = NULL,
@NSU_EXT VARCHAR(100) = NULL,
@BRAND VARCHAR(50) = NULL,
@PAN VARCHAR(50) = NULL,
@COD_AFFILIATOR INT = NULL,
@TRACKING_TRANSACTION VARCHAR(100) = NULL,
@DESCRIPTION VARCHAR(100) = NULL,
@SPOT_ELEGIBLE INT = 0,
@COD_ACQ INT = NULL,
@SOURCE_TRAN INT = NULL,
@POSWEB INT = 0,
@SPLIT INT = NULL,
@INITIAL_VALUE DECIMAL(22, 6) = NULL,
@FINAL_VALUE DECIMAL(22, 6) = NULL,
@COD_SALES_REP INT = NULL,
@COD_EC_PROD INT = NULL,
@TERMINAL_VERSION VARCHAR(200) = NULL,
@EMAIL VARCHAR(200) = NULL)
AS
BEGIN





	DECLARE @QUERY_BASIS NVARCHAR(MAX) = '';





	DECLARE @TIME_FINAL_DATE TIME;
	SET NOCOUNT ON;
	SET ARITHABORT ON;





	BEGIN
		SET @TIME_FINAL_DATE = FORMAT(CAST(@FINAL_DATE AS TIME), N'hh\:mm\:ss');
		--SET @INITIAL_DATE = CAST(@INITIAL_DATE AS DATETIME2(0));              
		--SET @FINAL_DATE = CAST(@INITIAL_DATE AS DATETIME2(0)); )              
		SET @FINAL_DATE = DATEADD([MILLISECOND], 999, @FINAL_DATE);

		IF (@TIME_FINAL_DATE = '00:00:00')
			SET @FINAL_DATE = CONCAT(CAST(@FINAL_DATE AS DATE), ' ', FORMAT(CAST('23:59:59' AS TIME), N'hh\:mm\:ss'));
		SET @QUERY_BASIS = '              
   SELECT [REPORT_TRANSACTIONS_EXP].TRANSACTION_CODE              
      ,[REPORT_TRANSACTIONS_EXP].AMOUNT              
      ,[REPORT_TRANSACTIONS_EXP].PLOTS              
      ,[REPORT_TRANSACTIONS_EXP].TRANSACTION_DATE              
      ,[REPORT_TRANSACTIONS_EXP].TRANSACTION_TYPE              
      ,[REPORT_TRANSACTIONS_EXP].CPF_CNPJ              
      ,[REPORT_TRANSACTIONS_EXP].NAME              
      ,[REPORT_TRANSACTIONS_EXP].SERIAL_EQUIP              
      ,[REPORT_TRANSACTIONS_EXP].TID              
      ,[REPORT_TRANSACTIONS_EXP].SITUATION              
      ,[REPORT_TRANSACTIONS_EXP].BRAND              
      ,[REPORT_TRANSACTIONS_EXP].PAN              
      ,COALESCE([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT_VALUE, '''') AS TRAN_DATA_EXT_VALUE              
      ,COALESCE([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT, '''') AS TRAN_DATA_EXT              
   ,(              
      SELECT TRANSACTION_DATA_EXT.[VALUE] FROM TRANSACTION_DATA_EXT              
   WHERE TRANSACTION_DATA_EXT.[NAME]= ''AUTHCODE'' AND TRANSACTION_DATA_EXT.COD_TRAN = REPORT_TRANSACTIONS_EXP.COD_TRAN              
   ) AS [AUTH_CODE]              
   ,[REPORT_TRANSACTIONS_EXP].COD_AC              
   ,[REPORT_TRANSACTIONS_EXP].NAME_ACQUIRER              
   ,[REPORT_TRANSACTIONS_EXP].COMMENT              
   ,[REPORT_TRANSACTIONS_EXP].TAX              
   ,[REPORT_TRANSACTIONS_EXP].ANTICIPATION              
   ,[REPORT_TRANSACTIONS_EXP].COD_AFFILIATOR              
   ,[REPORT_TRANSACTIONS_EXP].NAME_AFFILIATOR              
   ,[REPORT_TRANSACTIONS_EXP].NET_VALUE              
   ,[REPORT_TRANSACTIONS_EXP].GROSS_VALUE_AGENCY              
   ,[REPORT_TRANSACTIONS_EXP].NET_VALUE_AGENCY              
   ,[REPORT_TRANSACTIONS_EXP].TYPE_TRAN              
   ,[REPORT_TRANSACTIONS_EXP].POSWEB         
   ,[REPORT_TRANSACTIONS_EXP].CITY_NAME              
   ,[REPORT_TRANSACTIONS_EXP].STATE_NAME              
   ,[REPORT_TRANSACTIONS_EXP].SEGMENTS_NAME              
   ,[REPORT_TRANSACTIONS_EXP].COD_EC_TRANS              
   ,[REPORT_TRANSACTIONS_EXP].TRANS_EC_NAME              
   ,[REPORT_TRANSACTIONS_EXP].TRANS_EC_CPF_CNPJ              
   ,[REPORT_TRANSACTIONS_EXP].SPLIT              
   ,[REPORT_TRANSACTIONS_EXP].[SALES_REP]              
   ,[REPORT_TRANSACTIONS_EXP].CREDITOR_DOCUMENT              
   ,REPORT_TRANSACTIONS_EXP.COD_SALES_REP              
   ,[REPORT_TRANSACTIONS_EXP].MODEL_POS              
   ,[REPORT_TRANSACTIONS_EXP].CARD_NAME              
   ,[REPORT_TRANSACTIONS_EXP].CNAE              
   ,[REPORT_TRANSACTIONS_EXP].LINK_PAYMENT_SERVICE              
   ,[REPORT_TRANSACTIONS_EXP].CUSTOMER_EMAIL              
   ,[REPORT_TRANSACTIONS_EXP].CUSTOMER_IDENTIFICATION              
   ,[REPORT_TRANSACTIONS_EXP].PAYMENT_LINK_TRACKING              
   ,[REPORT_TRANSACTIONS_EXP].[NAME_PRODUCT_EC]              
   ,[REPORT_TRANSACTIONS_EXP].[EC_PRODUCT]              
   ,[REPORT_TRANSACTIONS_EXP].[EC_PRODUCT_CPF_CNPJ]              
   ,[REPORT_TRANSACTIONS_EXP].[SALES_TYPE]              
   ,ISNULL([REPORT_TRANSACTIONS_EXP].DZERO_EC_TAX, 0) AS DZERO_EC_TAX              
   ,ISNULL([REPORT_TRANSACTIONS_EXP].DZERO_AFF_TAX, 0)       AS DZERO_AFF_TAX              
   ,[REPORT_TRANSACTIONS_EXP].[COD_EC_PROD]              
   ,[REPORT_TRANSACTIONS_EXP].[BRANCH_BUSINESS]              
   ,ISNULL([REPORT_TRANSACTIONS_EXP].PIX_TAX_EC, 0) AS PIX_TAX_EC              
   ,ISNULL([REPORT_TRANSACTIONS_EXP].PIX_TAX_TYPE, '''') AS PIX_TAX_TYPE            
   ,REPORT_TRANSACTIONS_EXP.TERMINAL_VERSION            
   ,REPORT_TRANSACTIONS_EXP.EMAIL      
   ,ISNULL([REPORT_TRANSACTIONS_EXP].PIX_TAX_AFF, 0) AS PIX_TAX_AFF    
   ,ISNULL([REPORT_TRANSACTIONS_EXP].PIX_TAX_TYPE_AFF, '''') AS PIX_TAX_TYPE_AFF    
   ,[REPORT_TRANSACTIONS_EXP].CARD_HOLDER_DOC        
   ,[REPORT_TRANSACTIONS_EXP].EXTERNAL_NSU_HOST
   FROM [dbo].[REPORT_TRANSACTIONS_EXP]              
   WHERE [REPORT_TRANSACTIONS_EXP].COD_COMP = @CODCOMP              
    ';





		IF @INITIAL_DATE IS NOT NULL
			AND @FINAL_DATE IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
			' AND CAST([REPORT_TRANSACTIONS_EXP].TRANSACTION_DATE AS DATETIME) BETWEEN CAST(@INITIAL_DATE AS DATETIME) AND CAST(@FINAL_DATE AS DATETIME)');
		IF @EC IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_EC = @EC ');
		IF @BRANCH IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND[REPORT_TRANSACTIONS_EXP].COD_BRANCH = @BRANCH ');
		IF @DEPART IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_DEPTO_BRANCH = @DEPART ');
		IF LEN(@TERMINAL) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].SERIAL_EQUIP = @TERMINAL');
		IF LEN(@STATE) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].STATE_NAME = @STATE ');
		IF LEN(@CITY) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].CITY_NAME = @CITY ');
		IF LEN(@TYPE_TRAN) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
			' AND EXISTS( SELECT tt.CODE FROM TRANSACTION_TYPE tt WHERE tt.COD_TTYPE = @TYPE_TRAN AND [REPORT_TRANSACTIONS_EXP].TRANSACTION_TYPE = tt.CODE )');
		IF LEN(@SITUATION) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
			' AND EXISTS( SELECT tt.SITUATION_TR FROM [TRADUCTION_SITUATION] tt WHERE tt.COD_SITUATION = @SITUATION AND [REPORT_TRANSACTIONS_EXP].SITUATION = tt.SITUATION_TR )');
		IF LEN(@BRAND) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].BRAND = @BRAND ');
		IF LEN(@PAN) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].PAN = @PAN ');
		IF LEN(@NSU) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TRANSACTION_CODE = @NSU ');
		IF LEN(@NSU_EXT) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT_VALUE = @NSU_EXT ');
		--ELSE              
		-- SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,' AND ([REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''RCPTTXID'' OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT IS NULL              
		-- OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''AUTO'' OR [REPORT_TRANSACTIONS_EXP].TRAN_DATA_EXT = ''NSU'' ) ');              
		IF @COD_AFFILIATOR IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_AFFILIATOR = @COD_AFFILIATOR ');
		IF LEN(@TRACKING_TRANSACTION) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
			' AND [REPORT_TRANSACTIONS_EXP].TRACKING_TRANSACTION = @TRACKING_TRANSACTION ');
		IF LEN(@DESCRIPTION) > 0
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].DESCRIPTION LIKE %@DESCRIPTION%');
		IF @SPOT_ELEGIBLE = 1
		BEGIN
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].PLOTS > 1 AND (SELECT COUNT(*) FROM TRANSACTION_TITLES title JOIN [TRANSACTION] title_tran ON title_tran.COD_TRAN = title.COD_TRAN WHERE [VW_REPORT_TRANSACTIONS].TRANSACTION_CODE    
   
    
      
        
         
              
              
              
              
              
              
              
        = title_tran.CODE AND title.PREVISION_PAY_DATE > @FINAL_DATE ) > 0 AND TRANSACTION_TITLES.COD_SITUATION = 4 ');





		END;
		IF @COD_ACQ IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_AC = @COD_ACQ');
		IF @SOURCE_TRAN IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_SOURCE_TRAN = @SOURCE_TRAN');
		IF @POSWEB = 1
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].POSWEB = @POSWEB');
		IF (@INITIAL_VALUE > 0)
			AND (@FINAL_VALUE >= @INITIAL_VALUE)
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS,
			' AND [REPORT_TRANSACTIONS_EXP].AMOUNT BETWEEN @INITIAL_VALUE AND @FINAL_VALUE');
		IF (@SPLIT = 1)
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, 'AND [REPORT_TRANSACTIONS_EXP].SPLIT = 1');
		IF @COD_SALES_REP IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_SALES_REP = @COD_SALES_REP');

		IF @COD_EC_PROD IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].COD_EC_PROD = @COD_EC_PROD');

		IF @TERMINAL_VERSION IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].TERMINAL_VERSION = @TERMINAL_VERSION ');

		IF @EMAIL IS NOT NULL
			SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' AND [REPORT_TRANSACTIONS_EXP].customer_EMAIL = @EMAIL ');

		SET @QUERY_BASIS = CONCAT(@QUERY_BASIS, ' ORDER BY [REPORT_TRANSACTIONS_EXP].CREATED_AT DESC');
		--SELECT @QUERY_BASIS              
		EXEC [sp_executesql] @QUERY_BASIS
							,N'              
   @CODCOMP VARCHAR(10),              
   @INITIAL_DATE DATETIME,              
   @FINAL_DATE DATETIME,              
   @EC int,              
   @BRANCH int,              
   @DEPART int,              
   @TERMINAL varchar(100),              
   @STATE varchar(25),              
   @CITY varchar(40),              
   @TYPE_TRAN VARCHAR(10),              
   @SITUATION VARCHAR(10),              
   @NSU varchar(100),              
   @NSU_EXT varchar(100),              
   @BRAND varchar(50),              
   @COD_AFFILIATOR INT,              
   @PAN VARCHAR(50),              
   @SOURCE_TRAN INT,              
   @POSWEB INT,              
   @INITIAL_VALUE DECIMAL(22,6),              
   @FINAL_VALUE DECIMAL(22,6),              
   @COD_SALES_REP INT,              
   @COD_ACQ INT,              
   @COD_EC_PROD INT,            
   @TERMINAL_VERSION VARCHAR(200),          
   @EMAIL VARCHAR(200)          
   '
							,@CODCOMP = @CODCOMP
							,@INITIAL_DATE = @INITIAL_DATE
							,@FINAL_DATE = @FINAL_DATE
							,@EC = @EC
							,@BRANCH = @BRANCH
							,@DEPART = @DEPART
							,@TERMINAL = @TERMINAL
							,@STATE = @STATE
							,@CITY = @CITY
							,@TYPE_TRAN = @TYPE_TRAN
							,@SITUATION = @SITUATION
							,@NSU = @NSU
							,@NSU_EXT = @NSU_EXT
							,@BRAND = @BRAND
							,@PAN = @PAN
							,@COD_AFFILIATOR = @COD_AFFILIATOR
							,@SOURCE_TRAN = @SOURCE_TRAN
							,@POSWEB = @POSWEB
							,@INITIAL_VALUE = @INITIAL_VALUE
							,@FINAL_VALUE = @FINAL_VALUE
							,@COD_SALES_REP = @COD_SALES_REP
							,@COD_ACQ = @COD_ACQ
							,@COD_EC_PROD = @COD_EC_PROD
							,@TERMINAL_VERSION = @TERMINAL_VERSION
							,@EMAIL = @EMAIL;
	END;
END;

GO

IF OBJECT_ID('SP_REG_TEF_TRANSACTION') IS NOT NULL
	DROP PROCEDURE SP_REG_TEF_TRANSACTION
GO
CREATE PROCEDURE SP_REG_TEF_TRANSACTION
/*----------------------------------------------------------------------------------------              
Project.......: TKPP              
------------------------------------------------------------------------------------------              
Author                  VERSION        Date             Description              
------------------------------------------------------------------------------------------              
Luiz Aquino              V1            2020-09-17       CREATED        
Luiz Aquino              V2            2020-11-12       Remover MerchantId     
Kennedy Alef  v14 04/03/2021   registrar fila de webhook     
  
------------------------------------------------------------------------------------------*/ (@Transactions REG_TEF_TP READONLY)
AS
BEGIN

	DECLARE @DATA_TRANSACTION TABLE (
		TRANSACTION_AMOUNT DECIMAL(22, 6)
	   ,COD_TTYPE INT
	   ,BRAND VARCHAR(255)
	   ,PLOTS INT
	   ,NSU VARCHAR(255)
	   ,PAN VARCHAR(255)
	   ,COD_ASS_DEPTO_TERMINAL INT
	   ,TRANSACTION_DATE DATETIME
	   ,COD_EC INT
	   ,COD_TRAN INT
	   ,EXTERNAL_NSU VARCHAR(100)
	);
	DECLARE @COD_SUCCESS INT
		   ,@COD_ERROR INT
		   ,@COD_TEF_SERVICE INT
		   ,@COD_SOURCE_TRAN INT
		   ,@EQUIPMENT_DATE DATETIME = GETDATE()
		   ,@COD_CURRENCY INT
		   ,@BASE_CODE VARCHAR(12)
	;




	SET @BASE_CODE = CONCAT
	(
	'TEF',
	CAST(DATEPART(YEAR, @EQUIPMENT_DATE) AS VARCHAR(4)),
	CAST(DATEPART(MONTH, @EQUIPMENT_DATE) AS VARCHAR(4)),
	CAST(DATEPART(DAY, @EQUIPMENT_DATE) AS VARCHAR(4))
	);

	SELECT
		@COD_SUCCESS = COD_SITUATION
	FROM SITUATION(NOLOCK)
	WHERE NAME = 'CONFIRMED'
	SELECT
		@COD_ERROR = COD_SITUATION
	FROM SITUATION(NOLOCK)
	WHERE NAME = 'DENIED ACQUIRER'
	SELECT
		@COD_TEF_SERVICE = COD_ITEM_SERVICE
	FROM ITEMS_SERVICES_AVAILABLE
	WHERE NAME = 'ApiTef'
	SELECT
		@COD_SOURCE_TRAN = COD_SOURCE_TRAN
	FROM SOURCE_TRANSACTION
	WHERE CODE = 'PRESENCIAL'
	SELECT
		@COD_CURRENCY = COD_CURRRENCY
	FROM CURRENCY
	WHERE CODE = 'BRL'

	DECLARE @TransactionsParsed REG_TEF_TP

	INSERT INTO @TransactionsParsed (TerminalId, MerchantId, TransactionType, AMOUNT, Installments, BRAND, CardNumber, CardHolderName, AuthCode, EXTERNALNSU, Status, CodAffiliated, CodAc, CodComp, TYPE)
		SELECT
			TerminalId
		   ,MerchantId
		   ,TransactionType
		   ,AMOUNT
		   ,Installments
		   ,IIF(BRAND = 'NA', 'MASTER', BRAND) [BRAND]
		   ,CardNumber
		   ,CardHolderName
		   ,AuthCode
		   ,EXTERNALNSU
		   ,Status
		   ,CodAffiliated
		   ,CodAc
		   ,CodComp
		   ,TYPE
		FROM @Transactions

	SELECT
		CONCAT(@BASE_CODE, CAST((NEXT VALUE FOR SEQ_TRANCODE_TEF) AS VARCHAR(24))) CODE
	   ,T.TerminalId
	   ,T.MerchantId
	   ,T.TransactionType
	   ,T.AMOUNT
	   ,T.Installments
	   ,T.BRAND
	   ,T.CardNumber
	   ,T.CardHolderName
	   ,T.AuthCode
	   ,T.EXTERNALNSU
	   ,T.Status
	   ,T.CodAffiliated
	   ,T.CodAc
	   ,T.CodComp
	   ,IIF(T.TYPE IS NULL, 'TRANSACTION', T.TYPE) [TYPE]
	   ,IIF(T.Status = 'Authorized', @COD_SUCCESS, @COD_ERROR) [COD_SITUATION]
	   ,CE.COD_EC
	   ,E.COD_EQUIP
	   ,TYPE.COD_TTYPE
	   ,B.COD_BRAND
	   ,B.NAME [BRAND_NAME]
	   ,B.GEN_TITLES
	   ,ADE.COD_ASS_DEPTO_TERMINAL
	   ,(SELECT TOP 1
				COD_PR_ACQ
			FROM PRODUCTS_ACQUIRER PA
			WHERE PA.COD_BRAND = B.COD_BRAND
			AND PA.COD_AC = T.CodAc
			AND PA.VISIBLE = 1
			AND COD_SOURCE_TRAN = @COD_SOURCE_TRAN
			AND IS_SIMULATED = 0
			AND PLOT_VALUE = IIF(T.Installments = 1, 1, 2))
		COD_PR_ACQ
	   ,ATTC.COD_ASS_TR_COMP
	   ,ATD.COD_ASS_TX_DEP
	   ,@COD_SOURCE_TRAN [COD_SOURCE_TRAN]
	   ,@EQUIPMENT_DATE [EQUIPMENT_DATE]
	   ,@COD_CURRENCY [COD_CURRENCY]
	   ,IIF(CE.COD_EC IS NOT NULL AND
		CE.ACTIVE = 1 AND
		E.COD_EQUIP IS NOT NULL AND
		E.ACTIVE = 1 AND
		TYPE.COD_TTYPE IS NOT NULL AND
		B.COD_BRAND IS NOT NULL AND
		EXISTS (SELECT
				COD_PR_ACQ
			FROM PRODUCTS_ACQUIRER PA
			WHERE PA.COD_BRAND = B.COD_BRAND
			AND PA.COD_AC = T.CodAc
			AND PA.VISIBLE = 1
			AND COD_SOURCE_TRAN = @COD_SOURCE_TRAN
			AND IS_SIMULATED = 0
			AND PLOT_VALUE = IIF(T.Installments = 1, 1, 2))
		AND
		ADE.COD_ASS_DEPTO_TERMINAL IS NOT NULL AND
		ATTC.COD_ASS_TR_COMP IS NOT NULL AND
		ATD.COD_ASS_TX_DEP IS NOT NULL AND (
		ISNULL((SELECT
				COUNT(*)
			FROM @Transactions TVAL
			WHERE TVAL.EXTERNALNSU = T.EXTERNALNSU
			GROUP BY TVAL.EXTERNALNSU
			HAVING COUNT(*) > 1)
		, 0)
		= 0) AND
		LEN(REPLACE(T.CardNumber, '*', '')) > 0
		, 1, 0) [VALID]
	   ,(CASE
			WHEN CE.COD_EC IS NULL THEN 'EC_INVALID'
			WHEN E.COD_EQUIP IS NULL THEN 'EQP_INVALID'
			WHEN TYPE.COD_TTYPE IS NULL THEN 'TYPE_INVALID'
			WHEN B.COD_BRAND IS NULL THEN 'BRAND_INVALID'
			WHEN ADE.COD_ASS_DEPTO_TERMINAL IS NULL THEN 'EQP_NOT_ASSOCIATED'
			WHEN NOT EXISTS (SELECT
						COD_PR_ACQ
					FROM PRODUCTS_ACQUIRER PA
					WHERE PA.COD_BRAND = B.COD_BRAND
					AND PA.COD_AC = T.CodAc
					AND PA.VISIBLE = 1
					AND COD_SOURCE_TRAN = @COD_SOURCE_TRAN
					AND IS_SIMULATED = 0
					AND PLOT_VALUE = IIF(T.Installments = 1, 1, 2)) THEN 'ACQ_PRODUT_NOT_FOUND'
			WHEN ATTC.COD_ASS_TR_COMP IS NULL THEN 'ACQ_TAX_NOT_FOUND'
			WHEN ATD.COD_ASS_TX_DEP IS NULL THEN 'EC_PLAN_TAX_NOT_FOUND'
			WHEN E.ACTIVE = 0 THEN 'EQP_INACTIVE'
			WHEN CE.ACTIVE = 0 THEN 'EC_INACTIVE'
			WHEN CE.COD_RISK_SITUATION <> 2 THEN 'EC_BLOCKED'
			WHEN ISNULL((SELECT
						COUNT(*)
					FROM @Transactions TVAL
					WHERE TVAL.EXTERNALNSU = T.EXTERNALNSU
					GROUP BY TVAL.EXTERNALNSU
					HAVING COUNT(*) > 1)
				, 0)
				> 1 THEN 'EXTERNALNSU_DUPLICATED'
			WHEN LEN(REPLACE(T.CardNumber, '*', '')) = 0 THEN 'BIN_INVALID'
			ELSE NULL
		END) [ERROR_CODE]
	   ,IIF(EXISTS (SELECT
				COD_TRAN
			FROM [TRANSACTION](NOLOCK) T2
			WHERE T2.COD_AFFILIATOR = T.CodAffiliated
			AND T2.EXTERNAL_NSU = T.EXTERNALNSU)
		, 1, 0) [DUPLICATED] INTO #TransactionInfo
	FROM @TransactionsParsed T
	LEFT JOIN TRANSACTION_TYPE(NOLOCK) TYPE
		ON TYPE.NAME = T.TransactionType
	LEFT JOIN BRAND(NOLOCK) B
		ON B.[GROUP] = T.BRAND
			AND TYPE.COD_TTYPE = B.COD_TTYPE
	LEFT JOIN EQUIPMENT(NOLOCK) E
		ON E.SERIAL = T.MerchantId
	LEFT JOIN ASS_DEPTO_EQUIP(NOLOCK) ADE
		ON ADE.ACTIVE = 1
			AND ADE.COD_EQUIP = E.COD_EQUIP
	LEFT JOIN DEPARTMENTS_BRANCH(NOLOCK) DBR
		ON DBR.COD_DEPTO_BRANCH = ADE.COD_DEPTO_BRANCH
	LEFT JOIN BRANCH_EC(NOLOCK) BR
		ON BR.COD_BRANCH = DBR.COD_BRANCH
	LEFT JOIN COMMERCIAL_ESTABLISHMENT(NOLOCK) CE
		ON CE.COD_AFFILIATOR = T.CodAffiliated
			AND CE.COD_EC = BR.COD_EC
	LEFT JOIN ASS_TAX_DEPART(NOLOCK) ATD
		ON ATD.ACTIVE = 1
			AND ATD.COD_DEPTO_BRANCH = DBR.COD_DEPTO_BRANCH
			AND ATD.COD_SOURCE_TRAN = @COD_SOURCE_TRAN
			AND ATD.QTY_INI_PLOTS <= T.Installments
			AND ATD.QTY_FINAL_PLOTS >= T.Installments
			AND ATD.COD_TTYPE = TYPE.COD_TTYPE
			AND ATD.COD_BRAND = B.COD_BRAND
			AND (ATD.COD_MODEL IS NULL
				OR ATD.COD_MODEL = E.COD_MODEL)
	LEFT JOIN ASS_TR_TYPE_COMP(NOLOCK) ATTC
		ON ATTC.COD_AC = T.CodAc
			AND ATTC.COD_TTYPE = TYPE.COD_TTYPE
			AND ATTC.COD_BRAND = B.COD_BRAND
			AND ATTC.PLOT_INI <= T.Installments
			AND ATTC.PLOT_END >= T.Installments
			AND ATTC.ACTIVE = 1
			AND ATTC.COD_SOURCE_TRAN = @COD_SOURCE_TRAN

	DECLARE @inserted TABLE (
		[EXTERNAL_NSU] VARCHAR(32)
	   ,[COD_TRAN] INT
	   ,COD_EC INT
	)

	INSERT INTO [TRANSACTION] (CODE
	, AMOUNT
	, PAN
	, COD_CURRRENCY
	, BRAND
	, COD_ASS_DEPTO_TERMINAL
	, COD_TTYPE
	, PLOTS
	, COD_ASS_TX_DEP
	, COD_SITUATION
	, EQUIPMENT_DATE
	, COD_ASS_TR_COMP
	, COD_PR_ACQ
	, [TYPE]
	, [COD_COMP]
	, COD_AFFILIATOR
	, COD_SOURCE_TRAN
	, COD_EC
	, BRAZILIAN_DATE
	, CARD_HOLDER_NAME
	, EXTERNAL_NSU
	, COD_AC)
	OUTPUT INSERTED.AMOUNT,
	INSERTED.COD_TTYPE,
	INSERTED.BRAND,
	INSERTED.PLOTS,
	INSERTED.CODE,
	INSERTED.PAN,
	INSERTED.COD_ASS_DEPTO_TERMINAL,
	INSERTED.BRAZILIAN_DATE,
	INSERTED.COD_TRAN,
	INSERTED.COD_EC,
	INSERTED.EXTERNAL_NSU
	INTO @DATA_TRANSACTION (TRANSACTION_AMOUNT, COD_TTYPE,
	BRAND, PLOTS, NSU, PAN,
	COD_ASS_DEPTO_TERMINAL, TRANSACTION_DATE, COD_TRAN, COD_EC, EXTERNAL_NSU)


		SELECT
			T.CODE
		   ,T.AMOUNT
		   ,T.CardNumber
		   ,T.COD_CURRENCY
		   ,T.BRAND_NAME
		   ,T.COD_ASS_DEPTO_TERMINAL
		   ,T.COD_TTYPE
		   ,T.Installments
		   ,T.COD_ASS_TX_DEP
		   ,T.COD_SITUATION
		   ,T.EQUIPMENT_DATE
		   ,T.COD_ASS_TR_COMP
		   ,T.COD_PR_ACQ
		   ,T.TYPE
		   ,T.CodComp
		   ,T.CodAffiliated
		   ,T.COD_SOURCE_TRAN
		   ,T.COD_EC
		   ,dbo.FN_FUS_UTF(T.EQUIPMENT_DATE) [BRAZILLIAN_DATE]
		   ,T.CardHolderName
		   ,T.EXTERNALNSU
		   ,T.CodAc
		FROM #TransactionInfo T
		WHERE T.VALID = 1
		AND T.DUPLICATED = 0;

	INSERT INTO PROCESS_BG_STATUS (CODE, COD_TYPE_PROCESS_BG, COD_SOURCE_PROCESS)
		SELECT
			COD_TRAN
		   ,1
		   ,COD_SOURCE_PROCESS
		FROM @DATA_TRANSACTION
		JOIN SOURCE_PROCESS(NOLOCK)
			ON COD_SOURCE_PROCESS > 0;

	INSERT INTO TRANSACTION_SERVICES (COD_ITEM_SERVICE, COD_TRAN, COD_EC)
		SELECT
			@COD_TEF_SERVICE
		   ,COD_TRAN
		   ,COD_EC
		FROM @DATA_TRANSACTION;

	INSERT INTO TRANSACTION_DATA_EXT (NAME, VALUE, COD_TRAN)
		SELECT
			'AUTHCODE'
		   ,T.AuthCode
		   ,i.COD_TRAN
		FROM #TransactionInfo T
		JOIN @DATA_TRANSACTION i
			ON i.EXTERNAL_NSU = T.EXTERNALNSU
		WHERE T.VALID = 1
		AND DUPLICATED = 0;

	INSERT INTO TRANSACTION_DATA_EXT (NAME, VALUE, COD_TRAN, NSU_EXT)
		SELECT
			'NSU'
		   ,T.EXTERNALNSU
		   ,i.COD_TRAN
		   ,1
		FROM #TransactionInfo T
		JOIN @DATA_TRANSACTION i
			ON i.EXTERNAL_NSU = T.EXTERNALNSU
		WHERE T.VALID = 1
		AND DUPLICATED = 0;

	INSERT INTO TRANSACTION_DATA_EXT (NAME, VALUE, COD_TRAN, NSU_EXT)
		SELECT
			'NSU_HOST'
		   ,T.EXTERNALNSU
		   ,i.COD_TRAN
		   ,1
		FROM #TransactionInfo T
		JOIN @DATA_TRANSACTION i
			ON i.EXTERNAL_NSU = T.EXTERNALNSU
		WHERE T.VALID = 1
		AND DUPLICATED = 0;


	INSERT INTO TRANSACTION_AUTH_QUEUE (TRANSACTION_DATE, NSU, AUTH_CODE, NSU_EXT, AMOUNT, TRANSACTION_TYPE,
	BRAND, PLOTS, PAN,
	COD_TRAN, MERCHANT_NAME, MERCHANT_DOC, COD_EC, COD_EQUIP,
	COD_AFFILIATOR, MODEL_EQUIP, SITUATION, COMMENT)
		SELECT
			DT.TRANSACTION_DATE
		   ,DT.NSU
		   ,(SELECT TOP 1
					TRANSACTION_DATA_EXT.[VALUE]
				FROM TRANSACTION_DATA_EXT WITH (NOLOCK)
				WHERE TRANSACTION_DATA_EXT.COD_TRAN = DT.COD_TRAN
				AND TRANSACTION_DATA_EXT.[NAME] = 'AUTHCODE')
		   ,(SELECT TOP 1
					[TRANSACTION_DATA_EXT].[VALUE]
				FROM TRANSACTION_DATA_EXT
				WHERE COD_TRAN = DT.COD_TRAN
				AND [TRANSACTION_DATA_EXT].[NAME] IN ('NSU', 'RCPTTXID', 'AUTO', '0'))
		   ,DT.TRANSACTION_AMOUNT
		   ,TRANSACTION_TYPE.CODE
		   ,DT.BRAND
		   ,DT.PLOTS
		   ,DT.PAN
		   ,DT.COD_TRAN
		   ,CE.NAME
		   ,CE.CPF_CNPJ
		   ,CE.COD_EC
		   ,ASS_DEPTO_EQUIP.COD_EQUIP
		   ,CE.COD_AFFILIATOR
		   ,EQUIPMENT_MODEL.CODIGO
		   ,'CONFIRMADA'
		   ,'200-CONFIRMADA'
		FROM @DATA_TRANSACTION DT
		JOIN TRANSACTION_TYPE
			ON TRANSACTION_TYPE.COD_TTYPE = DT.COD_TTYPE
		JOIN ASS_DEPTO_EQUIP
			ON ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL = DT.COD_ASS_DEPTO_TERMINAL
		JOIN DEPARTMENTS_BRANCH
			ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = ASS_DEPTO_EQUIP.COD_DEPTO_BRANCH
		JOIN BRANCH_EC
			ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH
		JOIN COMMERCIAL_ESTABLISHMENT CE
			ON BRANCH_EC.COD_EC = CE.COD_EC
		JOIN EQUIPMENT
			ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP
		JOIN EQUIPMENT_MODEL
			ON EQUIPMENT_MODEL.COD_MODEL = EQUIPMENT.COD_MODEL


	SELECT
		T.EXTERNALNSU
	   ,i.COD_TRAN
	   ,T.VALID
	   ,T.ERROR_CODE AS ERRORCODE
	   ,T.DUPLICATED
	FROM #TransactionInfo T
	LEFT JOIN @DATA_TRANSACTION i
		ON i.EXTERNAL_NSU = T.EXTERNALNSU;

END;

GO
IF OBJECT_ID('SP_REG_DATA_EXT_TR_RECONCILER') IS NOT NULL
	DROP PROCEDURE SP_REG_DATA_EXT_TR_RECONCILER
GO
CREATE PROCEDURE [dbo].[SP_REG_DATA_EXT_TR_RECONCILER]
/*----------------------------------------------------------------------------------------          
Procedure Name: [SP_REG_DATA_EXT_TR]          
Project.......: TKPP          
------------------------------------------------------------------------------------------          
Author                          VERSION        Date                            Description          
------------------------------------------------------------------------------------------          
Kennedy Alef     V1    27/07/2018      Creation         
Kennedy Alef     V1    13/11/2018      Alter           
------------------------------------------------------------------------------------------*/ (@TP_DATA_EXT [TP_DATA_EXT_TRAN] READONLY,
@CODTR VARCHAR(100),
@COD_TRAN INT = NULL)
AS
BEGIN


	IF @COD_TRAN IS NULL
	BEGIN
		--INSERT INTO [TRANSACTION_DATA_EXT] (NAME, VALUE, COD_TRAN, NSU_EXT)    
		-- SELECT    
		--  @NAME    
		--    ,@VALUE    
		--    ,[TRANSACTION].COD_TRAN    
		--    ,@TYPE    
		-- FROM [TRANSACTION] WITH (NOLOCK)    
		-- WHERE [TRANSACTION].CODE = @CODTR;    

		INSERT INTO [TRANSACTION_DATA_EXT] (NAME, VALUE, NSU_EXT, COD_TRAN)
			SELECT
				[NAME]
			   ,[VALUE]
			   ,[NSU_EXT]
			   ,(SELECT
						COD_TRAN
					FROM [TRANSACTION] WITH (NOLOCK)
					WHERE CODE = @CODTR)
			FROM @TP_DATA_EXT TP


		IF @@rowcount < 1
			THROW 60001, 'COULD NOT REGISTER [TRANSACTION_DATA_EXT]', 1
	END;
	ELSE
	BEGIN

		INSERT INTO [TRANSACTION_DATA_EXT] (NAME,
		VALUE,
		NSU_EXT,
		COD_TRAN)
			SELECT
				[NAME]
			   ,[VALUE]
			   ,[NSU_EXT]
			   ,@COD_TRAN
			FROM @TP_DATA_EXT TP
		--(@NAME, @VALUE, @COD_TRAN, @TYPE) -- FROM [TRANSACTION] WITH (NOLOCK) WHERE  [TRANSACTION].CODE = @CODTR;          
		IF @@rowcount < 1
			THROW 60001, 'COULD NOT REGISTER [TRANSACTION_DATA_EXT]', 1
	END;

	UPDATE REPORT_TRANSACTIONS_EXP
	SET EXTERNAL_NSU_HOST = (SELECT
			[VALUE]
		FROM @TP_DATA_EXT TP)
	WHERE COD_TRAN = @COD_TRAN
END;

GO

UPDATE REPORT_TRANSACTIONS_EXP
SET COD_REC_SIT = NULL
   ,RECONCILED = 0
   ,RECONCILE_DESCRIPTION = NULL
   ,RECONCILE_DATE = NULL
   ,RECONCILE_ID = NULL
WHERE RECONCILED = 1


GO

UPDATE RECONCILE_TRAN_INVALID
SET ACTIVE = 0

GO

UPDATE RECONCILE_RESUME
SET ACTIVE = 0

GO
IF OBJECT_ID('SP_LS_GLOBAL_SUCCESS_DETAIL') IS NOT NULL
	DROP PROCEDURE SP_LS_GLOBAL_SUCCESS_DETAIL;
GO
CREATE PROCEDURE SP_LS_GLOBAL_SUCCESS_DETAIL (@COD_SUMMARY INT,
@PAGE INT = 1,
@PAGE_SIZE INT = 15,
@AUTH_CODE VARCHAR(16) = NULL,
@EXT_NSU VARCHAR(16) = NULL,
@TOTAL INT OUTPUT)
AS
BEGIN

	DECLARE @QUERY NVARCHAR(MAX)
		   ,@SKIP INT = (@PAGE_SIZE * (@PAGE - 1));

	SET @QUERY = N'
    FROM RECONCILE_SUCCESS_GLOBAL RSG
    JOIN REPORT_TRANSACTIONS_EXP RTE ON RTE.COD_TRAN = RSG.COD_TRAN
    WHERE RSG.COD_SUMMARY = @COD_SUMMARY
    '

	IF @EXT_NSU IS NOT NULL
		SET @QUERY += N' AND RSG.EXTERNAL_NSU = @EXT_NSU '

	IF @AUTH_CODE IS NOT NULL
		SET @QUERY += N' AND RTE.AUTH_CODE = @AUTH_CODE '

	DECLARE @QUERY_COUNT NVARCHAR(MAX) = CONCAT('SELECT @TOTAL = COUNT(*) ', @QUERY);

	EXEC sp_executesql @QUERY_COUNT
					  ,N'
    @COD_SUMMARY INT,
    @AUTH_CODE VARCHAR(16),
    @EXT_NSU VARCHAR(16),
    @TOTAL INT OUTPUT
    '
					  ,@COD_SUMMARY = @COD_SUMMARY
					  ,@AUTH_CODE = @AUTH_CODE
					  ,@EXT_NSU = @EXT_NSU
					  ,@TOTAL = @TOTAL OUTPUT;

	SET @QUERY = N'
    SELECT RSG.COD_TRAN,
           RSG.EXTERNAL_NSU,
           RSG.FOUND,
           RSG.ADDED,
           RSG.CANCELED,
           RTE.AMOUNT,
           RTE.AUTH_CODE,
		 RTE.TRANSACTION_DATE
    ' + @QUERY;

	SET @QUERY += N'
    ORDER BY COD_SUMMARY
    OFFSET @SKIP ROWS FETCH NEXT @PAGE_SIZE ROWS ONLY
    '

	EXEC sp_executesql @QUERY
					  ,N'
    @COD_SUMMARY INT,
    @PAGE INT,
    @PAGE_SIZE INT,
    @AUTH_CODE VARCHAR(16),
    @EXT_NSU VARCHAR(16),
    @SKIP INT
    '
					  ,@COD_SUMMARY = @COD_SUMMARY
					  ,@PAGE = @PAGE
					  ,@PAGE_SIZE = @PAGE_SIZE
					  ,@AUTH_CODE = @AUTH_CODE
					  ,@EXT_NSU = @EXT_NSU
					  ,@SKIP = @SKIP;

END
GO