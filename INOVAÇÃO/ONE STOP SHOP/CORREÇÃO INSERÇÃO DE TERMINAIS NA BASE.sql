IF OBJECT_ID('SP_REG_EQUIP_ASS_PICKING') IS NOT NULL DROP PROCEDURE SP_REG_EQUIP_ASS_PICKING;
GO
IF TYPE_ID('TP_REG_EQUIP_PICKING') IS NOT NULL DROP TYPE TP_REG_EQUIP_PICKING;
GO
CREATE TYPE [TP_REG_EQUIP_PICKING] AS TABLE
(
	 COD_USER INT,              
	 COD_DEPTO INT,              
	 COD_COMP INT,    
	 SERIAL VARCHAR(100),       
	 CHIP VARCHAR(100),       
	 PUK VARCHAR(100),       
	 OPERATOR INT,       
	 CODMODEL INT,       
	 COMPANY INT,
	 ORDER_NUMBER VARCHAR(150),
	 ORDER_CODE INT,
	 PARTNUMBER VARCHAR(150)
);




GO
CREATE PROCEDURE SP_REG_EQUIP_ASS_PICKING
(
 @TP_REG_EQUIP_PICKING TP_REG_EQUIP_PICKING READONLY
 ) 
 AS
 BEGIN
 DECLARE @COD_AC INT;
DECLARE @THROW_MESSAGE VARCHAR(255);
DECLARE @QTY_EQUIPS INT = ( SELECT
		COUNT(*)
	FROM @TP_REG_EQUIP_PICKING);

IF @QTY_EQUIPS = 0
THROW 70001, 'SERIAL LIST EMPTY', 1


SELECT
	*
FROM EQUIPMENT
WHERE SERIAL IN (SELECT
		SERIAL
	FROM @TP_REG_EQUIP_PICKING)

IF @@rowcount > 0
THROW 70002, 'SERIAL ALREADY REGISTERED', 1;

INSERT INTO EQUIPMENT (CREATED_AT,
SERIAL,
COD_MODEL,
COD_COMP,
ACTIVE,
CHIP,
PUK,
COD_OPER,
TID)
	SELECT
		current_timestamp
	   ,SERIAL
	   ,CODMODEL
	   ,COMPANY
	   ,1
	   ,CHIP
	   ,PUK
	   ,OPERATOR
	   ,NEXT VALUE FOR SEQ_TID
	FROM @TP_REG_EQUIP_PICKING TP

IF @@rowcount <> @QTY_EQUIPS
THROW 70003, 'FAILED TO INSERT EQUIPMENTS', 1;


SELECT
	EQUIPMENT.COD_EQUIP
   ,EQUIPMENT.SERIAL
   ,MODEL_GROUP.CODE
   ,TP.COD_COMP
   ,TP.COD_DEPTO
   ,TP.COD_USER INTO #TBL_EQUIPMENTS_TO_INSERT_TID
FROM EQUIPMENT
INNER JOIN EQUIPMENT_MODEL
	ON EQUIPMENT_MODEL.COD_MODEL = EQUIPMENT.COD_MODEL
INNER JOIN MODEL_GROUP
	ON MODEL_GROUP.COD_MODEL_GROUP = EQUIPMENT_MODEL.COD_MODEL_GROUP
INNER JOIN @TP_REG_EQUIP_PICKING TP
	ON TP.SERIAL = EQUIPMENT.SERIAL


DECLARE @SERIAIS_TO_RECEIVE_TID AS CURSOR;
DECLARE @COD_EQUIP INT;
DECLARE @SERIAL VARCHAR(100);
DECLARE @CODE VARCHAR(100);
DECLARE @COD_COMP INT;
DECLARE @COD_DEPTO INT;
DECLARE @COD_USER INT;

DECLARE @COD_DATA_EQUIP INT;
DECLARE @TID VARCHAR(255);

SET @SERIAIS_TO_RECEIVE_TID = CURSOR FOR SELECT
	COD_EQUIP
   ,SERIAL
   ,CODE
   ,COD_COMP
   ,COD_DEPTO
   ,COD_USER
FROM #TBL_EQUIPMENTS_TO_INSERT_TID
WHERE CODE = 'GPRS'

SELECT
	COUNT(*)
FROM DATA_TID_AVAILABLE_EC

OPEN @SERIAIS_TO_RECEIVE_TID

FETCH NEXT FROM @SERIAIS_TO_RECEIVE_TID INTO
@COD_EQUIP
, @SERIAL
, @CODE
, @COD_COMP
, @COD_DEPTO
, @COD_USER;

WHILE @@fetch_status = 0
BEGIN

SELECT TOP 1
	@COD_AC =
	(CASE
		WHEN TYPE_ESTAB.CODE = 'PF' THEN 10
		ELSE ACQUIRER.COD_AC
	END)
FROM @TP_REG_EQUIP_PICKING TP
INNER JOIN DEPARTMENTS_BRANCH
	ON DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH = TP.COD_DEPTO
JOIN BRANCH_EC
	ON BRANCH_EC.COD_BRANCH = DEPARTMENTS_BRANCH.COD_BRANCH
JOIN COMMERCIAL_ESTABLISHMENT
	ON COMMERCIAL_ESTABLISHMENT.COD_EC = BRANCH_EC.COD_EC
JOIN SEGMENTS
	ON SEGMENTS.COD_SEG = COMMERCIAL_ESTABLISHMENT.COD_SEG
JOIN SEGMENTS_GROUP
	ON SEGMENTS_GROUP.COD_SEG_GROUP = SEGMENTS.COD_SEG_GROUP
JOIN ACQUIRER
	ON ACQUIRER.COD_SEG_GROUP = SEGMENTS_GROUP.COD_SEG_GROUP
INNER JOIN TYPE_ESTAB
	ON TYPE_ESTAB.COD_TYPE_ESTAB = COMMERCIAL_ESTABLISHMENT.COD_TYPE_ESTAB

SELECT
	@COD_DATA_EQUIP = COD_DATA_EQUIP
   ,@TID = TID
FROM DATA_TID_AVAILABLE_EC
WHERE COD_AC = @COD_AC
AND TYPE_KEY_AC = 'PRESENCIAL'
AND AVAILABLE = 1
AND ACTIVE = 1

IF @TID IS NULL
THROW 70004, 'TID NOT AVAILABLE', 1;

INSERT INTO DATA_EQUIPMENT_AC ([CREATED_AT]
, [COD_EQUIP]
, [COD_COMP]
, [COD_AC]
, [NAME]
, [CODE]
, [ACTIVE])
	VALUES (current_timestamp, @COD_EQUIP, @COD_COMP, @COD_AC, 'TID', @TID, 1);

IF @@rowcount < 1
BEGIN
SET @THROW_MESSAGE = 'FAILED TO INSERT THE TID TO EQUIPMENT ' + @SERIAL;
	THROW 70005, @THROW_MESSAGE, 1;
END
UPDATE DATA_TID_AVAILABLE_EC
SET AVAILABLE = 0
   ,ACTIVE = 0
WHERE COD_DATA_EQUIP = @COD_DATA_EQUIP;

IF @@rowcount < 1
BEGIN
SET @THROW_MESSAGE = 'FAILED DISABLE THE TID TO EQUIPMENT ' + @SERIAL;
	THROW 70006, @THROW_MESSAGE, 1;
END

INSERT INTO ROUTE_ACQUIRER (COD_USER, COD_EQUIP, ACTIVE, CONF_TYPE, COD_BRAND, COD_AC, COD_SOURCE_TRAN)
	SELECT
		TP.COD_USER
	   ,TID.COD_EQUIP
	   ,1
	   ,CONF_TYPE
	   ,COD_BRAND
	   ,COD_AC
	   ,COD_SOURCE_TRAN
	FROM ROUTE_ACQUIRER_DEFAULT
	INNER JOIN #TBL_EQUIPMENTS_TO_INSERT_TID TID
		ON TID.CODE = 'GPRS'
			AND TID.COD_EQUIP = @COD_EQUIP
	INNER JOIN @TP_REG_EQUIP_PICKING TP
		ON TP.SERIAL = TID.SERIAL
	WHERE COD_AC = @COD_AC

IF @@rowcount < 1
BEGIN
SET @THROW_MESSAGE = 'FAILED TO INSERT THE ROUTE TO EQUIPMENT ' + @SERIAL;
	THROW 70004, @THROW_MESSAGE , 1;
END

INSERT INTO ORDER_EQUIPMENT (CREATED_AT, ORDER_NUMBER, SERIAL, COD_EQUIP, COD_ODR_ITEM, COD_ORDER_SIT)
	SELECT DISTINCT
		current_timestamp
	   ,TP.ORDER_NUMBER
	   ,TP.SERIAL
	   ,EQUIPMENT.COD_EQUIP
	   ,ORDER_ITEM.COD_ODR_ITEM
	   ,[ORDER].COD_ORDER_SIT
	FROM @TP_REG_EQUIP_PICKING TP
	INNER JOIN [ORDER]
		ON [ORDER].COD_ODR = TP.ORDER_CODE
	INNER JOIN ORDER_ITEM
		ON [ORDER].COD_ODR = ORDER_ITEM.COD_ODR
	INNER JOIN PRODUCTS
		ON PRODUCTS.COD_PRODUCT = ORDER_ITEM.COD_PRODUCT
			AND SKU = PARTNUMBER
	INNER JOIN EQUIPMENT
		ON EQUIPMENT.SERIAL = TP.SERIAL
	WHERE TP.SERIAL = @SERIAL


IF @@rowcount < 1
BEGIN
SET @THROW_MESSAGE = 'DEMONHO ' + @SERIAL;
	THROW 70004, @THROW_MESSAGE , 1;
END

FETCH NEXT FROM @SERIAIS_TO_RECEIVE_TID INTO
@COD_EQUIP
, @SERIAL
, @CODE
, @COD_COMP
, @COD_DEPTO
, @COD_USER;

END;

INSERT INTO ASS_DEPTO_EQUIP (COD_EQUIP, COD_DEPTO_BRANCH, ACTIVE, COD_USER)
	SELECT
		EQUIPMENT.COD_EQUIP
	   ,TP.COD_DEPTO
	   ,1
	   ,TP.COD_USER
	FROM @TP_REG_EQUIP_PICKING TP
	INNER JOIN EQUIPMENT
		ON EQUIPMENT.SERIAL = TP.SERIAL
END

GO

SELECT TOP 15 * FROM DATA_TID_AVAILABLE_EC WHERE COD_AC = 10 ORDER BY 1 DESC

UPDATE DATA_TID_AVAILABLE_EC SET ACTIVE = 1, AVAILABLE = 1 WHERE COD_DATA_EQUIP
IN
(
31483,
31482,
31481,
31480,
31479,
31478,
31477,
31476,
31475,
31474,
31473,
31472,
31471,
31470,
31469
)