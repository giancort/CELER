ALTER TABLE ACCESS_APPAPI 
ADD CLAIMS VARCHAR(30) DEFAULT NULL
GO
ALTER TABLE AFFILIATOR 
	ADD [OPERATION_AFF] INT,
    [WHITELABEL_URL] VARCHAR(200);
GO
ALTER TABLE COMMERCIAL_ESTABLISHMENT ADD [GENERIC_EC] INT;

GO
CREATE NONCLUSTERED INDEX [IX_COD_BRANCH_ACTIVE]
    ON [dbo].[CONTACT_BRANCH]([COD_BRANCH] ASC, [ACTIVE] ASC)
    INCLUDE([DDD], [NUMBER]);
GO
ALTER TABLE [PLAN] 
	ADD [AVAILABLE_SALE] INT;

GO


GO

CREATE NONCLUSTERED INDEX [IX_COD_BRANCH_ACTIVE]
    ON [dbo].[CONTACT_BRANCH]([COD_BRANCH] ASC, [ACTIVE] ASC)
    INCLUDE([DDD], [NUMBER]);
GO



IF OBJECT_ID('PRODUCTS') IS NOT NULL DROP TABLE PRODUCTS;
GO
CREATE TABLE [dbo].[PRODUCTS] (
    [COD_PRODUCT]    INT             IDENTITY (1, 1) NOT NULL,
    [CREATED_AT]     DATETIME        DEFAULT (getdate()) NULL,
    [PRODUCT_NAME]   VARCHAR (200)   NULL,
    [NICKNAME]       VARCHAR (200)   NULL,
    [DESCRIPTION]    NVARCHAR (MAX)  NULL,
    [SKU]            VARCHAR (255)   NULL,
    [PRICE]          DECIMAL (22, 8) NULL,
    [ACTIVE]         INT             CONSTRAINT [DF_CONSTRAINT_PROD_ACTIVE] DEFAULT ((1)) NULL,
    [COD_AFFILIATOR] INT             NULL,
    [COD_MODEL]      INT             NULL,
    [COD_USER]       INT             NULL,
    [ALTER_DATE]     DATETIME        NULL,
    [COD_USER_ALTER] INT             NULL,
    [COD_SITUATION]  INT             NULL,
    PRIMARY KEY CLUSTERED ([COD_PRODUCT] ASC),
    FOREIGN KEY ([COD_AFFILIATOR]) REFERENCES [dbo].[AFFILIATOR] ([COD_AFFILIATOR]),
    FOREIGN KEY ([COD_MODEL]) REFERENCES [dbo].[EQUIPMENT_MODEL] ([COD_MODEL]),
    FOREIGN KEY ([COD_USER]) REFERENCES [dbo].[USERS] ([COD_USER]),
    FOREIGN KEY ([COD_USER_ALTER]) REFERENCES [dbo].[USERS] ([COD_USER]),
    CONSTRAINT [FK__PRODUCTS__COD_SI__08D61451] FOREIGN KEY ([COD_SITUATION]) REFERENCES [dbo].[SITUATION] ([COD_SITUATION])
);
GO


--CREATE VIEW [dbo].[VW_COMPANY_EC_AFF_BR_DEP_EQUIP]      
--AS
--SELECT
--	ISNULL(AFFILIATOR.[NAME], COMPANY.NAME) AS COMPANY
--   ,COMPANY.COD_COMP AS COD_COMP
--   ,COMPANY.FIREBASE_NAME AS FIREBASE_NAME
--   ,COMMERCIAL_ESTABLISHMENT.NAME AS EC
--   ,COMMERCIAL_ESTABLISHMENT.COD_EC
--   ,COMMERCIAL_ESTABLISHMENT.CPF_CNPJ AS CPF_CNPJ_EC
--   ,COMMERCIAL_ESTABLISHMENT.ACTIVE AS SITUATION_EC
--   ,AFFILIATOR.COD_AFFILIATOR
--   ,AFFILIATOR.NAME AS AFFILIATOR
--   ,BRANCH_EC.NAME AS BRANCH_NAME
--   ,BRANCH_EC.TRADING_NAME AS TRADING_NAME_BR
--   ,BRANCH_EC.COD_BRANCH
--   ,BRANCH_EC.CPF_CNPJ AS CPF_CNPJ_BR
--   ,DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH AS COD_DEPTO_BR
--   ,DEPARTMENTS.NAME AS DEPARTMENT
--   ,SEGMENTS.NAME AS SEGMENTS
--   ,EQUIPMENT.COD_EQUIP AS COD_EQUIP
--   ,EQUIPMENT.SERIAL AS SERIAL
--   ,ASS_DEPTO_EQUIP.COD_ASS_DEPTO_TERMINAL
--FROM BRANCH_EC
--INNER JOIN COMMERCIAL_ESTABLISHMENT
--	ON COMMERCIAL_ESTABLISHMENT.COD_EC = BRANCH_EC.COD_EC
--INNER JOIN COMPANY
--	ON COMPANY.COD_COMP = COMMERCIAL_ESTABLISHMENT.COD_COMP
--INNER JOIN DEPARTMENTS_BRANCH
--	ON DEPARTMENTS_BRANCH.COD_BRANCH = BRANCH_EC.COD_BRANCH
--INNER JOIN DEPARTMENTS
--	ON DEPARTMENTS.COD_DEPARTS = DEPARTMENTS_BRANCH.COD_DEPARTS
--INNER JOIN SEGMENTS
--	ON SEGMENTS.COD_SEG = COMMERCIAL_ESTABLISHMENT.COD_SEG
--LEFT JOIN AFFILIATOR
--	ON AFFILIATOR.COD_AFFILIATOR = COMMERCIAL_ESTABLISHMENT.COD_AFFILIATOR
--INNER JOIN ASS_DEPTO_EQUIP
--	ON ASS_DEPTO_EQUIP.COD_DEPTO_BRANCH = DEPARTMENTS_BRANCH.COD_DEPTO_BRANCH
--INNER JOIN EQUIPMENT
--	ON EQUIPMENT.COD_EQUIP = ASS_DEPTO_EQUIP.COD_EQUIP
--LEFT JOIN CELL_OPERATOR
--	ON CELL_OPERATOR.COD_OPER = EQUIPMENT.COD_OPER
--WHERE ASS_DEPTO_EQUIP.ACTIVE = 1
--GO

--GO
--CREATE PROCEDURE [dbo].[SP_LOGIN_USER]                      

--/*******************************************************************************************************************
------------------------------------------------------------------------------------------                      
--    Procedure Name: SP_LOGIN_USER                      
--    Project.......: TKPP                

--    ------------------------------------------------------------------------------------------                      
--    Author                          VERSION        Date                            Description                      
--    ------------------------------------------------------------------------------------------                      
--    Kennedy Alef      V1   31/07/2018      Creation                      
--    Gian Luca Dalle Cort    V2   31/07/2018      Changed                      
--    Lucas Aguiar      v3   26/11/2018      changed                 
--*******************************************************************************************************************/    

--(
--	@ACESSKEY       VARCHAR(300), 
--	@USER           VARCHAR(100), 
--	@COD_AFFILIATOR INT)
--AS
--BEGIN

--    DECLARE 
--		 @LOCK DATETIME;
--    DECLARE 
--		 @ACTIVE_USER INT;
--    DECLARE 
--		 @CODUSER INT;
--    DECLARE 
--		 @ACTIVE_EC INT;
--    DECLARE 
--		 @DATEPASS DATETIME;
--    DECLARE 
--		 @LOGGED INT;
--    DECLARE 
--		 @PASS_TMP VARCHAR(MAX);
--    DECLARE 
--		 @RETURN VARCHAR(200);
--    DECLARE 
--		 @ACTIVE_AFL INT;
--    DECLARE 
--		 @COD_AFF INT;
--    DECLARE 
--		 @COD_MODULE_ INT;
--    DECLARE 
--		 @COD_SALES_REP INT;

--    BEGIN


--	   SELECT @LOCK = [LOCKED_UP], 
--			@ACTIVE_USER = [USERS].[ACTIVE], 
--			@CODUSER = [USERS].[COD_USER], 
--			@ACTIVE_EC = [COMMERCIAL_ESTABLISHMENT].[ACTIVE], 
--			@DATEPASS = [PASS_HISTORY].[CREATED_AT], 
--			@LOGGED = [USERS].[LOGGED], 
--			@PASS_TMP = [PASS_HISTORY].[PASS], 
--			@ACTIVE_AFL = [AFFILIATOR].[ACTIVE], 
--			@COD_AFF = [AFFILIATOR].[COD_AFFILIATOR], 
--			@COD_SALES_REP = [SALES_REPRESENTATIVE].[COD_SALES_REP]
--	   FROM [USERS]
--		   INNER JOIN [COMPANY] ON [COMPANY].[COD_COMP] = [USERS].[COD_COMP]
--		   INNER JOIN [PROFILE_ACCESS] ON [PROFILE_ACCESS].[COD_PROFILE] = [USERS].[COD_PROFILE]
--		   INNER JOIN [PASS_HISTORY] ON [PASS_HISTORY].[COD_USER] = [USERS].[COD_USER]
--		   LEFT JOIN [COMMERCIAL_ESTABLISHMENT] ON [COMMERCIAL_ESTABLISHMENT].[COD_EC] = [USERS].[COD_EC]
--		   LEFT JOIN [AFFILIATOR] ON [AFFILIATOR].[COD_AFFILIATOR] = [USERS].[COD_AFFILIATOR]
--		   LEFT JOIN [SALES_REPRESENTATIVE] ON [SALES_REPRESENTATIVE].[COD_USER] = [USERS].[COD_USER]
--	   WHERE [COD_ACCESS] = @USER
--		    AND [COMPANY].[ACCESS_KEY] = @ACESSKEY
--		    AND [PASS_HISTORY].[ACTUAL] = 1
--		    OR [USERS].[EMAIL] = @USER
--		    AND [COMPANY].[ACCESS_KEY] = @ACESSKEY
--		    AND [PASS_HISTORY].[ACTUAL] = 1;

--	   IF @CODUSER IS NULL
--		 OR @CODUSER = 0
--	   BEGIN
--		  SET @RETURN = CONCAT('USER NOT FOUND', ';') + ISNULL(@PASS_TMP, 0);
--		  THROW 61006, @RETURN, 1;
--	   END;


--	   IF ISNULL(@COD_AFF, 0) <> ISNULL(@COD_AFFILIATOR, 0)
--	   BEGIN
--		  SET @RETURN = CONCAT('USER NOT FOUND r', ';') + ISNULL(@PASS_TMP, 0);
--		  THROW 61006, @RETURN, 1;
--	   END;


--	   IF DATEDIFF(MINUTE, @LOCK, GETDATE()) < 30
--	   BEGIN
--		  SET @RETURN = CONCAT(CONCAT('USER BLOCKED', ';'), @PASS_TMP);
--		  THROW 61008, @RETURN, 1;
--	   END;



--	   IF @ACTIVE_USER = 0
--	   BEGIN
--		  SET @RETURN = CONCAT(CONCAT('USER INACTIVE', ';'), @PASS_TMP);
--		  THROW 61007, @RETURN, 1;
--	   END;


--	   IF @ACTIVE_EC = 0
--	   BEGIN
--		  SET @RETURN = CONCAT(CONCAT('COMMERCIAL ESTABLISHMENT INACTIVE', ';'), @PASS_TMP);
--		  THROW 61009, @RETURN, 1;
--	   END;


--	   IF @ACTIVE_AFL = 0
--	   BEGIN
--		  SET @RETURN = CONCAT(CONCAT('AFFILIATOR INACTIVE', ';'), @PASS_TMP);
--		  THROW 61009, @RETURN, 1;
--	   END;


--	   IF DATEDIFF(DAY, @DATEPASS, GETDATE()) >= 30
--	   BEGIN
--		  SET @RETURN = CONCAT(CONCAT('PASSWORD EXPIRED', ';'), @PASS_TMP);
--		  THROW 61010, @RETURN, 1;
--	   END;

--	   IF @LOGGED = 1
--	   BEGIN
--		  UPDATE [USERS]
--		    SET 
--			   [LOGGED] = 0
--		  WHERE [USERS].[COD_USER] = @CODUSER;

--		  DELETE FROM [TEMP_TOKEN]
--		  WHERE [TEMP_TOKEN].[COD_USER] = @CODUSER;

--		  SET @RETURN = CONCAT(CONCAT('USER ALREADY LOGGED', ';'), @PASS_TMP);
--		  THROW 61011, @RETURN, 1;
--	   END;

--	   IF @PASS_TMP IS NULL
--		  THROW 61029, 'TEMPORARY ACCESS', 1;

--	   SELECT [USERS].[COD_ACCESS] AS [USERNAME], 
--			[USERS].[COD_USER], 
--			[USERS].[IDENTIFICATION], 
--			[PASS_HISTORY].[PASS], 
--			[USERS].[CPF_CNPJ] AS [CPF_CNPJ_USER], 
--			[USERS].[EMAIL], 
--			[COMPANY].[COD_COMP] AS [COD_COMP], 
--			[AFFILIATOR].[COD_AFFILIATOR] AS [INSIDECODE_AFL], 
--			[PROFILE_ACCESS].[CODE] AS [COD_PROFILE], 
--			[COMMERCIAL_ESTABLISHMENT].[COD_EC], 
--			[MODULES].[CODE] AS [MODULE], 
--			[MODULES].[COD_MODULE] AS [COD_MODULE], 
--			@COD_AFFILIATOR AS [PAR_AFFILIATOR], 
--			@COD_AFF AS [AFF_RET], 
--			CASE COMMERCIAL_ESTABLISHMENT.SEC_FACTOR_AUTH_ACTIVE
--                WHEN 1 THEN AUTHENTICATION_FACTOR.NAME
--                WHEN 0 THEN NULL
--                ELSE AUTHENTICATION_FACTOR.NAME
--            END AS  [AUTHENTICATION_FACTOR],
--			CASE
--			    WHEN [FIRST_LOGIN_DATE] IS NULL THEN 1
--			    ELSE 0
--			END AS [FIRST_ACCESS], 
--			[AUTHENTICATION_FACTOR].[COD_FACT], 
--			(-1 * (DATEDIFF(DAY, ((DATEADD(DAY, 30, GETDATE()) + GETDATE()) - GETDATE()), @DATEPASS))) AS [DAYSTO_EXPIRE], 
--			[THEMES].[COD_THEMES] AS 'ThemeCode', 
--			[THEMES].[CREATED_AT] AS 'CreatedDate', 
--			[THEMES].[LOGO_AFFILIATE] AS 'PathLogo', 
--			[THEMES].[LOGO_HEADER_AFFILIATE] AS 'PathLogoHeader', 
--			[THEMES].[COD_AFFILIATOR] AS 'AffiliatorCode', 
--			[THEMES].[MODIFY_DATE] AS 'ModifyDate', 
--			[THEMES].[COLOR_HEADER] AS 'ColorHeader', 
--			[THEMES].[ACTIVE] AS 'Active', 
--			[AFFILIATOR].[SUBDOMAIN] AS 'SubDomain', 
--			[AFFILIATOR].[GUID] AS 'Guid', 
--			[THEMES].[BACKGROUND_IMAGE] AS 'BackgroundImage', 
--			[THEMES].[SECONDARY_COLOR] AS 'SecondaryColor', 
--			[POS_AVAILABLE].[AVAILABLE] AS 'AvailablePOS', 
--			[COMMERCIAL_ESTABLISHMENT].[DEFAULT_EC] AS 'DefaultEc', 
--			[SALES_REPRESENTATIVE].[COD_SALES_REP], 
--			[COMMERCIAL_ESTABLISHMENT].[CPF_CNPJ] AS [EC_IDENTIFICATION], 
--			IIF([COMMERCIAL_ESTABLISHMENT].[COD_RISK_SITUATION] = 8, 1, 0) AS [PENDING_DOCUMENTATION]
--	   FROM [USERS]
--		   INNER JOIN [COMPANY] ON [COMPANY].[COD_COMP] = [USERS].[COD_COMP]
--		   INNER JOIN [PROFILE_ACCESS] ON [PROFILE_ACCESS].[COD_PROFILE] = [USERS].[COD_PROFILE]
--		   LEFT JOIN [COMMERCIAL_ESTABLISHMENT] ON [COMMERCIAL_ESTABLISHMENT].[COD_EC] = [USERS].[COD_EC]
--		   LEFT JOIN [AFFILIATOR] ON [AFFILIATOR].[COD_AFFILIATOR] = [USERS].[COD_AFFILIATOR]
--		   INNER JOIN [PASS_HISTORY] ON [PASS_HISTORY].[COD_USER] = [USERS].[COD_USER]
--		   INNER JOIN [MODULES] ON [MODULES].[COD_MODULE] = [USERS].[COD_MODULE]
--		   LEFT JOIN [ASS_FACTOR_AUTH_COMPANY] ON [ASS_FACTOR_AUTH_COMPANY].[COD_COMP] = [COMPANY].[COD_COMP]
--		   LEFT JOIN [AUTHENTICATION_FACTOR] ON [AUTHENTICATION_FACTOR].[COD_FACT] = [ASS_FACTOR_AUTH_COMPANY].[COD_FACT]
--		   LEFT JOIN [THEMES] ON [THEMES].[COD_AFFILIATOR] = [AFFILIATOR].[COD_AFFILIATOR]
--		   LEFT JOIN [POS_AVAILABLE] ON [POS_AVAILABLE].[COD_AFFILIATOR] = [AFFILIATOR].[COD_AFFILIATOR]
--		   LEFT JOIN [SALES_REPRESENTATIVE] ON [SALES_REPRESENTATIVE].[COD_USER] = [USERS].[COD_USER]
--	   WHERE [COD_ACCESS] = @USER
--		    AND [COMPANY].[ACCESS_KEY] = @ACESSKEY
--		    AND [PASS_HISTORY].[ACTUAL] = 1
--		    AND ([THEMES].[ACTIVE] = 1
--			    OR [THEMES].[ACTIVE] IS NULL)
--		    OR [USERS].[EMAIL] = @USER
--		    AND [COMPANY].[ACCESS_KEY] = @ACESSKEY
--		    AND [PASS_HISTORY].[ACTUAL] = 1
--		    AND ([THEMES].[ACTIVE] = 1
--			    OR [THEMES].[ACTIVE] IS NULL);

--    END;
--END;
--GO


GO

